/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 41.0, "minX": 0.0, "maxY": 60158.0, "series": [{"data": [[0.0, 41.0], [0.1, 42.0], [0.2, 42.0], [0.3, 42.0], [0.4, 42.0], [0.5, 42.0], [0.6, 42.0], [0.7, 42.0], [0.8, 42.0], [0.9, 42.0], [1.0, 42.0], [1.1, 43.0], [1.2, 43.0], [1.3, 43.0], [1.4, 43.0], [1.5, 43.0], [1.6, 43.0], [1.7, 43.0], [1.8, 43.0], [1.9, 43.0], [2.0, 43.0], [2.1, 43.0], [2.2, 43.0], [2.3, 43.0], [2.4, 43.0], [2.5, 43.0], [2.6, 43.0], [2.7, 43.0], [2.8, 43.0], [2.9, 43.0], [3.0, 43.0], [3.1, 43.0], [3.2, 43.0], [3.3, 43.0], [3.4, 43.0], [3.5, 43.0], [3.6, 43.0], [3.7, 43.0], [3.8, 43.0], [3.9, 43.0], [4.0, 43.0], [4.1, 43.0], [4.2, 43.0], [4.3, 43.0], [4.4, 44.0], [4.5, 44.0], [4.6, 44.0], [4.7, 44.0], [4.8, 44.0], [4.9, 44.0], [5.0, 44.0], [5.1, 44.0], [5.2, 44.0], [5.3, 44.0], [5.4, 44.0], [5.5, 44.0], [5.6, 44.0], [5.7, 44.0], [5.8, 44.0], [5.9, 44.0], [6.0, 44.0], [6.1, 44.0], [6.2, 44.0], [6.3, 44.0], [6.4, 44.0], [6.5, 44.0], [6.6, 44.0], [6.7, 44.0], [6.8, 44.0], [6.9, 44.0], [7.0, 44.0], [7.1, 44.0], [7.2, 44.0], [7.3, 44.0], [7.4, 44.0], [7.5, 44.0], [7.6, 44.0], [7.7, 44.0], [7.8, 44.0], [7.9, 44.0], [8.0, 44.0], [8.1, 44.0], [8.2, 44.0], [8.3, 44.0], [8.4, 44.0], [8.5, 44.0], [8.6, 44.0], [8.7, 44.0], [8.8, 44.0], [8.9, 44.0], [9.0, 44.0], [9.1, 44.0], [9.2, 44.0], [9.3, 44.0], [9.4, 44.0], [9.5, 44.0], [9.6, 44.0], [9.7, 44.0], [9.8, 44.0], [9.9, 44.0], [10.0, 44.0], [10.1, 44.0], [10.2, 44.0], [10.3, 44.0], [10.4, 44.0], [10.5, 44.0], [10.6, 44.0], [10.7, 44.0], [10.8, 44.0], [10.9, 44.0], [11.0, 44.0], [11.1, 44.0], [11.2, 44.0], [11.3, 44.0], [11.4, 44.0], [11.5, 44.0], [11.6, 44.0], [11.7, 44.0], [11.8, 44.0], [11.9, 44.0], [12.0, 44.0], [12.1, 45.0], [12.2, 45.0], [12.3, 45.0], [12.4, 45.0], [12.5, 45.0], [12.6, 45.0], [12.7, 45.0], [12.8, 45.0], [12.9, 45.0], [13.0, 45.0], [13.1, 45.0], [13.2, 45.0], [13.3, 45.0], [13.4, 45.0], [13.5, 45.0], [13.6, 45.0], [13.7, 45.0], [13.8, 45.0], [13.9, 45.0], [14.0, 45.0], [14.1, 45.0], [14.2, 45.0], [14.3, 45.0], [14.4, 45.0], [14.5, 45.0], [14.6, 45.0], [14.7, 45.0], [14.8, 45.0], [14.9, 45.0], [15.0, 45.0], [15.1, 45.0], [15.2, 45.0], [15.3, 45.0], [15.4, 45.0], [15.5, 45.0], [15.6, 45.0], [15.7, 45.0], [15.8, 45.0], [15.9, 45.0], [16.0, 45.0], [16.1, 45.0], [16.2, 45.0], [16.3, 45.0], [16.4, 45.0], [16.5, 45.0], [16.6, 45.0], [16.7, 45.0], [16.8, 45.0], [16.9, 45.0], [17.0, 45.0], [17.1, 45.0], [17.2, 45.0], [17.3, 45.0], [17.4, 45.0], [17.5, 45.0], [17.6, 45.0], [17.7, 45.0], [17.8, 45.0], [17.9, 45.0], [18.0, 45.0], [18.1, 45.0], [18.2, 45.0], [18.3, 45.0], [18.4, 45.0], [18.5, 45.0], [18.6, 45.0], [18.7, 45.0], [18.8, 45.0], [18.9, 45.0], [19.0, 45.0], [19.1, 45.0], [19.2, 45.0], [19.3, 45.0], [19.4, 45.0], [19.5, 45.0], [19.6, 45.0], [19.7, 45.0], [19.8, 45.0], [19.9, 45.0], [20.0, 45.0], [20.1, 45.0], [20.2, 45.0], [20.3, 45.0], [20.4, 45.0], [20.5, 45.0], [20.6, 45.0], [20.7, 45.0], [20.8, 45.0], [20.9, 45.0], [21.0, 45.0], [21.1, 45.0], [21.2, 45.0], [21.3, 45.0], [21.4, 45.0], [21.5, 45.0], [21.6, 45.0], [21.7, 45.0], [21.8, 45.0], [21.9, 45.0], [22.0, 45.0], [22.1, 45.0], [22.2, 45.0], [22.3, 45.0], [22.4, 45.0], [22.5, 45.0], [22.6, 45.0], [22.7, 45.0], [22.8, 45.0], [22.9, 45.0], [23.0, 45.0], [23.1, 45.0], [23.2, 45.0], [23.3, 45.0], [23.4, 45.0], [23.5, 45.0], [23.6, 45.0], [23.7, 45.0], [23.8, 45.0], [23.9, 45.0], [24.0, 45.0], [24.1, 45.0], [24.2, 45.0], [24.3, 45.0], [24.4, 45.0], [24.5, 45.0], [24.6, 46.0], [24.7, 46.0], [24.8, 46.0], [24.9, 46.0], [25.0, 46.0], [25.1, 46.0], [25.2, 46.0], [25.3, 46.0], [25.4, 46.0], [25.5, 46.0], [25.6, 46.0], [25.7, 46.0], [25.8, 46.0], [25.9, 46.0], [26.0, 46.0], [26.1, 46.0], [26.2, 46.0], [26.3, 46.0], [26.4, 46.0], [26.5, 46.0], [26.6, 46.0], [26.7, 46.0], [26.8, 46.0], [26.9, 46.0], [27.0, 46.0], [27.1, 46.0], [27.2, 46.0], [27.3, 46.0], [27.4, 46.0], [27.5, 46.0], [27.6, 46.0], [27.7, 46.0], [27.8, 46.0], [27.9, 46.0], [28.0, 46.0], [28.1, 46.0], [28.2, 46.0], [28.3, 46.0], [28.4, 46.0], [28.5, 46.0], [28.6, 46.0], [28.7, 46.0], [28.8, 46.0], [28.9, 46.0], [29.0, 46.0], [29.1, 46.0], [29.2, 46.0], [29.3, 46.0], [29.4, 46.0], [29.5, 46.0], [29.6, 46.0], [29.7, 46.0], [29.8, 46.0], [29.9, 46.0], [30.0, 46.0], [30.1, 46.0], [30.2, 46.0], [30.3, 46.0], [30.4, 46.0], [30.5, 46.0], [30.6, 46.0], [30.7, 46.0], [30.8, 46.0], [30.9, 46.0], [31.0, 46.0], [31.1, 46.0], [31.2, 46.0], [31.3, 46.0], [31.4, 46.0], [31.5, 46.0], [31.6, 46.0], [31.7, 46.0], [31.8, 46.0], [31.9, 46.0], [32.0, 46.0], [32.1, 46.0], [32.2, 46.0], [32.3, 46.0], [32.4, 46.0], [32.5, 46.0], [32.6, 46.0], [32.7, 46.0], [32.8, 46.0], [32.9, 46.0], [33.0, 46.0], [33.1, 46.0], [33.2, 46.0], [33.3, 46.0], [33.4, 46.0], [33.5, 46.0], [33.6, 46.0], [33.7, 46.0], [33.8, 46.0], [33.9, 46.0], [34.0, 46.0], [34.1, 46.0], [34.2, 46.0], [34.3, 46.0], [34.4, 46.0], [34.5, 46.0], [34.6, 46.0], [34.7, 46.0], [34.8, 46.0], [34.9, 46.0], [35.0, 46.0], [35.1, 46.0], [35.2, 46.0], [35.3, 46.0], [35.4, 46.0], [35.5, 46.0], [35.6, 46.0], [35.7, 46.0], [35.8, 46.0], [35.9, 46.0], [36.0, 46.0], [36.1, 46.0], [36.2, 46.0], [36.3, 46.0], [36.4, 46.0], [36.5, 46.0], [36.6, 46.0], [36.7, 46.0], [36.8, 46.0], [36.9, 46.0], [37.0, 46.0], [37.1, 46.0], [37.2, 46.0], [37.3, 46.0], [37.4, 46.0], [37.5, 46.0], [37.6, 46.0], [37.7, 46.0], [37.8, 46.0], [37.9, 46.0], [38.0, 46.0], [38.1, 46.0], [38.2, 46.0], [38.3, 46.0], [38.4, 46.0], [38.5, 46.0], [38.6, 46.0], [38.7, 46.0], [38.8, 46.0], [38.9, 46.0], [39.0, 46.0], [39.1, 47.0], [39.2, 47.0], [39.3, 47.0], [39.4, 47.0], [39.5, 47.0], [39.6, 47.0], [39.7, 47.0], [39.8, 47.0], [39.9, 47.0], [40.0, 47.0], [40.1, 47.0], [40.2, 47.0], [40.3, 47.0], [40.4, 47.0], [40.5, 47.0], [40.6, 47.0], [40.7, 47.0], [40.8, 47.0], [40.9, 47.0], [41.0, 47.0], [41.1, 47.0], [41.2, 47.0], [41.3, 47.0], [41.4, 47.0], [41.5, 47.0], [41.6, 47.0], [41.7, 47.0], [41.8, 47.0], [41.9, 47.0], [42.0, 47.0], [42.1, 47.0], [42.2, 47.0], [42.3, 47.0], [42.4, 47.0], [42.5, 47.0], [42.6, 47.0], [42.7, 47.0], [42.8, 47.0], [42.9, 47.0], [43.0, 47.0], [43.1, 47.0], [43.2, 47.0], [43.3, 47.0], [43.4, 47.0], [43.5, 47.0], [43.6, 47.0], [43.7, 47.0], [43.8, 47.0], [43.9, 47.0], [44.0, 47.0], [44.1, 47.0], [44.2, 47.0], [44.3, 47.0], [44.4, 47.0], [44.5, 47.0], [44.6, 47.0], [44.7, 47.0], [44.8, 47.0], [44.9, 47.0], [45.0, 47.0], [45.1, 47.0], [45.2, 47.0], [45.3, 47.0], [45.4, 47.0], [45.5, 47.0], [45.6, 47.0], [45.7, 47.0], [45.8, 47.0], [45.9, 47.0], [46.0, 47.0], [46.1, 47.0], [46.2, 47.0], [46.3, 47.0], [46.4, 47.0], [46.5, 47.0], [46.6, 47.0], [46.7, 47.0], [46.8, 47.0], [46.9, 47.0], [47.0, 47.0], [47.1, 47.0], [47.2, 47.0], [47.3, 47.0], [47.4, 47.0], [47.5, 47.0], [47.6, 47.0], [47.7, 47.0], [47.8, 47.0], [47.9, 47.0], [48.0, 47.0], [48.1, 47.0], [48.2, 47.0], [48.3, 47.0], [48.4, 47.0], [48.5, 47.0], [48.6, 47.0], [48.7, 47.0], [48.8, 47.0], [48.9, 47.0], [49.0, 47.0], [49.1, 47.0], [49.2, 47.0], [49.3, 47.0], [49.4, 47.0], [49.5, 47.0], [49.6, 47.0], [49.7, 47.0], [49.8, 47.0], [49.9, 47.0], [50.0, 47.0], [50.1, 47.0], [50.2, 47.0], [50.3, 47.0], [50.4, 47.0], [50.5, 47.0], [50.6, 47.0], [50.7, 47.0], [50.8, 47.0], [50.9, 47.0], [51.0, 47.0], [51.1, 47.0], [51.2, 47.0], [51.3, 47.0], [51.4, 47.0], [51.5, 47.0], [51.6, 47.0], [51.7, 47.0], [51.8, 47.0], [51.9, 47.0], [52.0, 47.0], [52.1, 47.0], [52.2, 47.0], [52.3, 47.0], [52.4, 47.0], [52.5, 47.0], [52.6, 47.0], [52.7, 47.0], [52.8, 47.0], [52.9, 48.0], [53.0, 48.0], [53.1, 48.0], [53.2, 48.0], [53.3, 48.0], [53.4, 48.0], [53.5, 48.0], [53.6, 48.0], [53.7, 48.0], [53.8, 48.0], [53.9, 48.0], [54.0, 48.0], [54.1, 48.0], [54.2, 48.0], [54.3, 48.0], [54.4, 48.0], [54.5, 48.0], [54.6, 48.0], [54.7, 48.0], [54.8, 48.0], [54.9, 48.0], [55.0, 48.0], [55.1, 48.0], [55.2, 48.0], [55.3, 48.0], [55.4, 48.0], [55.5, 48.0], [55.6, 48.0], [55.7, 48.0], [55.8, 48.0], [55.9, 48.0], [56.0, 48.0], [56.1, 48.0], [56.2, 48.0], [56.3, 48.0], [56.4, 48.0], [56.5, 48.0], [56.6, 48.0], [56.7, 48.0], [56.8, 48.0], [56.9, 48.0], [57.0, 48.0], [57.1, 48.0], [57.2, 48.0], [57.3, 48.0], [57.4, 48.0], [57.5, 48.0], [57.6, 48.0], [57.7, 48.0], [57.8, 48.0], [57.9, 48.0], [58.0, 48.0], [58.1, 48.0], [58.2, 48.0], [58.3, 48.0], [58.4, 48.0], [58.5, 48.0], [58.6, 48.0], [58.7, 48.0], [58.8, 48.0], [58.9, 48.0], [59.0, 48.0], [59.1, 48.0], [59.2, 48.0], [59.3, 48.0], [59.4, 48.0], [59.5, 48.0], [59.6, 48.0], [59.7, 48.0], [59.8, 48.0], [59.9, 48.0], [60.0, 48.0], [60.1, 48.0], [60.2, 48.0], [60.3, 48.0], [60.4, 48.0], [60.5, 48.0], [60.6, 48.0], [60.7, 48.0], [60.8, 48.0], [60.9, 48.0], [61.0, 48.0], [61.1, 48.0], [61.2, 48.0], [61.3, 48.0], [61.4, 48.0], [61.5, 48.0], [61.6, 48.0], [61.7, 48.0], [61.8, 48.0], [61.9, 48.0], [62.0, 48.0], [62.1, 48.0], [62.2, 48.0], [62.3, 48.0], [62.4, 48.0], [62.5, 48.0], [62.6, 48.0], [62.7, 48.0], [62.8, 48.0], [62.9, 48.0], [63.0, 48.0], [63.1, 48.0], [63.2, 48.0], [63.3, 48.0], [63.4, 48.0], [63.5, 48.0], [63.6, 48.0], [63.7, 48.0], [63.8, 48.0], [63.9, 48.0], [64.0, 48.0], [64.1, 48.0], [64.2, 48.0], [64.3, 48.0], [64.4, 49.0], [64.5, 49.0], [64.6, 49.0], [64.7, 49.0], [64.8, 49.0], [64.9, 49.0], [65.0, 49.0], [65.1, 49.0], [65.2, 49.0], [65.3, 49.0], [65.4, 49.0], [65.5, 49.0], [65.6, 49.0], [65.7, 49.0], [65.8, 49.0], [65.9, 49.0], [66.0, 49.0], [66.1, 49.0], [66.2, 49.0], [66.3, 49.0], [66.4, 49.0], [66.5, 49.0], [66.6, 49.0], [66.7, 49.0], [66.8, 49.0], [66.9, 49.0], [67.0, 49.0], [67.1, 49.0], [67.2, 49.0], [67.3, 49.0], [67.4, 49.0], [67.5, 49.0], [67.6, 49.0], [67.7, 49.0], [67.8, 49.0], [67.9, 49.0], [68.0, 49.0], [68.1, 49.0], [68.2, 49.0], [68.3, 49.0], [68.4, 49.0], [68.5, 49.0], [68.6, 49.0], [68.7, 49.0], [68.8, 49.0], [68.9, 49.0], [69.0, 49.0], [69.1, 49.0], [69.2, 49.0], [69.3, 49.0], [69.4, 49.0], [69.5, 49.0], [69.6, 49.0], [69.7, 49.0], [69.8, 49.0], [69.9, 49.0], [70.0, 49.0], [70.1, 49.0], [70.2, 49.0], [70.3, 49.0], [70.4, 49.0], [70.5, 49.0], [70.6, 49.0], [70.7, 49.0], [70.8, 49.0], [70.9, 49.0], [71.0, 49.0], [71.1, 49.0], [71.2, 49.0], [71.3, 49.0], [71.4, 49.0], [71.5, 49.0], [71.6, 49.0], [71.7, 49.0], [71.8, 49.0], [71.9, 49.0], [72.0, 49.0], [72.1, 49.0], [72.2, 50.0], [72.3, 50.0], [72.4, 50.0], [72.5, 50.0], [72.6, 50.0], [72.7, 50.0], [72.8, 50.0], [72.9, 50.0], [73.0, 50.0], [73.1, 50.0], [73.2, 50.0], [73.3, 50.0], [73.4, 50.0], [73.5, 50.0], [73.6, 50.0], [73.7, 50.0], [73.8, 50.0], [73.9, 50.0], [74.0, 50.0], [74.1, 50.0], [74.2, 50.0], [74.3, 50.0], [74.4, 50.0], [74.5, 50.0], [74.6, 50.0], [74.7, 50.0], [74.8, 50.0], [74.9, 50.0], [75.0, 50.0], [75.1, 50.0], [75.2, 50.0], [75.3, 50.0], [75.4, 50.0], [75.5, 50.0], [75.6, 50.0], [75.7, 50.0], [75.8, 50.0], [75.9, 50.0], [76.0, 50.0], [76.1, 50.0], [76.2, 50.0], [76.3, 50.0], [76.4, 50.0], [76.5, 50.0], [76.6, 50.0], [76.7, 50.0], [76.8, 50.0], [76.9, 50.0], [77.0, 50.0], [77.1, 50.0], [77.2, 50.0], [77.3, 50.0], [77.4, 50.0], [77.5, 50.0], [77.6, 50.0], [77.7, 50.0], [77.8, 50.0], [77.9, 50.0], [78.0, 51.0], [78.1, 51.0], [78.2, 51.0], [78.3, 51.0], [78.4, 51.0], [78.5, 51.0], [78.6, 51.0], [78.7, 51.0], [78.8, 51.0], [78.9, 51.0], [79.0, 51.0], [79.1, 51.0], [79.2, 51.0], [79.3, 51.0], [79.4, 51.0], [79.5, 51.0], [79.6, 51.0], [79.7, 51.0], [79.8, 51.0], [79.9, 51.0], [80.0, 51.0], [80.1, 51.0], [80.2, 51.0], [80.3, 51.0], [80.4, 51.0], [80.5, 51.0], [80.6, 51.0], [80.7, 51.0], [80.8, 51.0], [80.9, 51.0], [81.0, 51.0], [81.1, 51.0], [81.2, 51.0], [81.3, 52.0], [81.4, 52.0], [81.5, 52.0], [81.6, 52.0], [81.7, 52.0], [81.8, 52.0], [81.9, 52.0], [82.0, 52.0], [82.1, 52.0], [82.2, 52.0], [82.3, 52.0], [82.4, 52.0], [82.5, 52.0], [82.6, 52.0], [82.7, 52.0], [82.8, 52.0], [82.9, 52.0], [83.0, 52.0], [83.1, 52.0], [83.2, 53.0], [83.3, 53.0], [83.4, 53.0], [83.5, 53.0], [83.6, 53.0], [83.7, 53.0], [83.8, 53.0], [83.9, 53.0], [84.0, 53.0], [84.1, 53.0], [84.2, 53.0], [84.3, 53.0], [84.4, 53.0], [84.5, 54.0], [84.6, 54.0], [84.7, 54.0], [84.8, 54.0], [84.9, 54.0], [85.0, 54.0], [85.1, 54.0], [85.2, 54.0], [85.3, 54.0], [85.4, 54.0], [85.5, 54.0], [85.6, 54.0], [85.7, 54.0], [85.8, 54.0], [85.9, 55.0], [86.0, 55.0], [86.1, 55.0], [86.2, 55.0], [86.3, 55.0], [86.4, 55.0], [86.5, 56.0], [86.6, 56.0], [86.7, 56.0], [86.8, 56.0], [86.9, 56.0], [87.0, 56.0], [87.1, 57.0], [87.2, 57.0], [87.3, 57.0], [87.4, 58.0], [87.5, 58.0], [87.6, 58.0], [87.7, 58.0], [87.8, 58.0], [87.9, 59.0], [88.0, 59.0], [88.1, 59.0], [88.2, 60.0], [88.3, 60.0], [88.4, 60.0], [88.5, 60.0], [88.6, 61.0], [88.7, 61.0], [88.8, 61.0], [88.9, 62.0], [89.0, 62.0], [89.1, 62.0], [89.2, 63.0], [89.3, 63.0], [89.4, 63.0], [89.5, 63.0], [89.6, 64.0], [89.7, 65.0], [89.8, 65.0], [89.9, 65.0], [90.0, 66.0], [90.1, 67.0], [90.2, 67.0], [90.3, 68.0], [90.4, 69.0], [90.5, 70.0], [90.6, 71.0], [90.7, 72.0], [90.8, 72.0], [90.9, 75.0], [91.0, 77.0], [91.1, 79.0], [91.2, 81.0], [91.3, 82.0], [91.4, 83.0], [91.5, 86.0], [91.6, 87.0], [91.7, 89.0], [91.8, 90.0], [91.9, 92.0], [92.0, 93.0], [92.1, 94.0], [92.2, 95.0], [92.3, 97.0], [92.4, 98.0], [92.5, 100.0], [92.6, 102.0], [92.7, 103.0], [92.8, 104.0], [92.9, 109.0], [93.0, 121.0], [93.1, 178.0], [93.2, 249.0], [93.3, 319.0], [93.4, 367.0], [93.5, 395.0], [93.6, 452.0], [93.7, 477.0], [93.8, 543.0], [93.9, 633.0], [94.0, 705.0], [94.1, 788.0], [94.2, 842.0], [94.3, 878.0], [94.4, 927.0], [94.5, 1020.0], [94.6, 1049.0], [94.7, 1063.0], [94.8, 1082.0], [94.9, 1091.0], [95.0, 1099.0], [95.1, 1149.0], [95.2, 1185.0], [95.3, 1235.0], [95.4, 1282.0], [95.5, 1332.0], [95.6, 1375.0], [95.7, 1416.0], [95.8, 1484.0], [95.9, 1547.0], [96.0, 1597.0], [96.1, 1780.0], [96.2, 1869.0], [96.3, 1943.0], [96.4, 2068.0], [96.5, 2190.0], [96.6, 2342.0], [96.7, 2534.0], [96.8, 2765.0], [96.9, 4567.0], [97.0, 11586.0], [97.1, 23157.0], [97.2, 24810.0], [97.3, 28236.0], [97.4, 30288.0], [97.5, 30589.0], [97.6, 31356.0], [97.7, 31641.0], [97.8, 32059.0], [97.9, 32526.0], [98.0, 33776.0], [98.1, 35630.0], [98.2, 36616.0], [98.3, 37235.0], [98.4, 37346.0], [98.5, 37434.0], [98.6, 37569.0], [98.7, 37911.0], [98.8, 38077.0], [98.9, 38473.0], [99.0, 39669.0], [99.1, 40919.0], [99.2, 44273.0], [99.3, 45250.0], [99.4, 46321.0], [99.5, 57806.0], [99.6, 60025.0], [99.7, 60026.0], [99.8, 60026.0], [99.9, 60029.0], [100.0, 60158.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 11875.0, "series": [{"data": [[0.0, 11875.0], [100.0, 85.0], [33100.0, 1.0], [33500.0, 2.0], [33700.0, 2.0], [34300.0, 1.0], [33900.0, 1.0], [35900.0, 2.0], [35500.0, 2.0], [36700.0, 1.0], [38500.0, 2.0], [38700.0, 2.0], [37100.0, 5.0], [37900.0, 9.0], [38100.0, 4.0], [38300.0, 2.0], [37500.0, 7.0], [37300.0, 14.0], [37700.0, 3.0], [40500.0, 1.0], [39900.0, 2.0], [40300.0, 1.0], [39100.0, 1.0], [39700.0, 1.0], [40900.0, 1.0], [41300.0, 1.0], [42300.0, 2.0], [44100.0, 1.0], [44700.0, 1.0], [44500.0, 1.0], [44900.0, 1.0], [47100.0, 2.0], [46700.0, 1.0], [45100.0, 1.0], [46300.0, 2.0], [46500.0, 2.0], [48100.0, 1.0], [48700.0, 1.0], [47300.0, 1.0], [200.0, 18.0], [60100.0, 2.0], [300.0, 32.0], [400.0, 29.0], [500.0, 18.0], [600.0, 15.0], [700.0, 17.0], [800.0, 29.0], [900.0, 13.0], [1000.0, 70.0], [1100.0, 30.0], [1200.0, 25.0], [1300.0, 32.0], [1400.0, 20.0], [1500.0, 22.0], [1600.0, 8.0], [1700.0, 6.0], [1800.0, 16.0], [1900.0, 14.0], [2000.0, 11.0], [2100.0, 12.0], [2200.0, 7.0], [2300.0, 6.0], [2400.0, 5.0], [2500.0, 10.0], [2600.0, 5.0], [2700.0, 4.0], [2800.0, 2.0], [3100.0, 1.0], [3300.0, 1.0], [3400.0, 2.0], [3600.0, 1.0], [4400.0, 3.0], [4500.0, 1.0], [4900.0, 1.0], [7300.0, 1.0], [9100.0, 1.0], [9300.0, 1.0], [9500.0, 1.0], [9600.0, 5.0], [11500.0, 3.0], [12600.0, 1.0], [12900.0, 1.0], [17400.0, 2.0], [18000.0, 1.0], [17900.0, 1.0], [21000.0, 2.0], [21100.0, 1.0], [23100.0, 2.0], [23300.0, 1.0], [22900.0, 1.0], [23000.0, 1.0], [23200.0, 1.0], [24300.0, 1.0], [24400.0, 1.0], [24500.0, 2.0], [25100.0, 1.0], [25000.0, 2.0], [25400.0, 2.0], [25500.0, 2.0], [24700.0, 4.0], [24600.0, 1.0], [24800.0, 3.0], [25800.0, 1.0], [25700.0, 1.0], [26000.0, 1.0], [26100.0, 1.0], [28200.0, 5.0], [28300.0, 2.0], [29300.0, 2.0], [29400.0, 1.0], [29600.0, 2.0], [29500.0, 1.0], [30500.0, 10.0], [30400.0, 2.0], [30600.0, 5.0], [30200.0, 1.0], [31700.0, 4.0], [31500.0, 5.0], [30900.0, 1.0], [31300.0, 8.0], [31600.0, 4.0], [31200.0, 4.0], [31400.0, 2.0], [31900.0, 3.0], [32200.0, 2.0], [31800.0, 2.0], [32100.0, 2.0], [32000.0, 3.0], [32400.0, 5.0], [32300.0, 1.0], [32500.0, 3.0], [32600.0, 1.0], [33000.0, 1.0], [34200.0, 2.0], [32800.0, 1.0], [33400.0, 1.0], [33800.0, 2.0], [33600.0, 1.0], [34000.0, 2.0], [33200.0, 1.0], [34400.0, 1.0], [35600.0, 9.0], [36600.0, 1.0], [36400.0, 1.0], [36200.0, 1.0], [37200.0, 12.0], [38600.0, 4.0], [38800.0, 1.0], [38400.0, 1.0], [38000.0, 11.0], [37800.0, 4.0], [37000.0, 2.0], [38200.0, 1.0], [37400.0, 12.0], [37600.0, 2.0], [40200.0, 2.0], [40400.0, 2.0], [39000.0, 1.0], [39600.0, 2.0], [40800.0, 1.0], [39800.0, 2.0], [41200.0, 1.0], [42800.0, 1.0], [41600.0, 2.0], [42400.0, 1.0], [42000.0, 1.0], [43200.0, 2.0], [44200.0, 1.0], [45000.0, 3.0], [44600.0, 2.0], [45400.0, 7.0], [45200.0, 6.0], [46800.0, 2.0], [46400.0, 1.0], [45600.0, 1.0], [56000.0, 1.0], [57800.0, 1.0], [60000.0, 61.0], [59400.0, 1.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 60100.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 12.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 12332.0, "series": [{"data": [[0.0, 12.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 226.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 273.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 12332.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 3.666666666666667, "minX": 1.701263211E12, "maxY": 100.0, "series": [{"data": [[1.70126331E12, 100.0], [1.701263265E12, 100.0], [1.701263351E12, 100.0], [1.701263224E12, 100.0], [1.701263359E12, 100.0], [1.701263232E12, 100.0], [1.701263355E12, 100.0], [1.701263228E12, 100.0], [1.701263314E12, 100.0], [1.701263257E12, 100.0], [1.701263343E12, 100.0], [1.701263216E12, 100.0], [1.701263339E12, 100.0], [1.701263212E12, 100.0], [1.701263384E12, 100.0], [1.701263347E12, 100.0], [1.70126322E12, 100.0], [1.701263306E12, 100.0], [1.701263392E12, 83.6118421052632], [1.701263302E12, 100.0], [1.701263388E12, 100.0], [1.701263331E12, 100.0], [1.70126329E12, 100.0], [1.701263286E12, 100.0], [1.701263245E12, 100.0], [1.701263294E12, 100.0], [1.701263253E12, 100.0], [1.701263249E12, 100.0], [1.701263335E12, 100.0], [1.701263364E12, 100.0], [1.701263237E12, 100.0], [1.701263233E12, 100.0], [1.701263405E12, 16.0], [1.701263241E12, 100.0], [1.701263327E12, 100.0], [1.701263282E12, 100.0], [1.701263395E12, 55.31818181818183], [1.701263354E12, 100.0], [1.701263223E12, 100.0], [1.701263309E12, 100.0], [1.701263358E12, 100.0], [1.701263231E12, 100.0], [1.701263227E12, 100.0], [1.701263313E12, 100.0], [1.701263399E12, 49.583333333333336], [1.701263342E12, 100.0], [1.701263215E12, 100.0], [1.701263301E12, 100.0], [1.701263211E12, 100.0], [1.701263383E12, 100.0], [1.701263256E12, 100.0], [1.701263219E12, 100.0], [1.701263305E12, 100.0], [1.701263391E12, 93.29220779220783], [1.701263264E12, 100.0], [1.701263387E12, 100.0], [1.701263346E12, 100.0], [1.701263289E12, 100.0], [1.701263375E12, 100.0], [1.701263248E12, 100.0], [1.701263244E12, 100.0], [1.70126333E12, 100.0], [1.701263252E12, 100.0], [1.701263338E12, 100.0], [1.701263334E12, 100.0], [1.701263363E12, 100.0], [1.701263236E12, 100.0], [1.701263322E12, 100.0], [1.701263285E12, 100.0], [1.701263281E12, 100.0], [1.70126324E12, 100.0], [1.701263353E12, 100.0], [1.701263226E12, 100.0], [1.701263312E12, 100.0], [1.701263222E12, 100.0], [1.701263308E12, 100.0], [1.701263394E12, 62.015625], [1.70126323E12, 100.0], [1.701263357E12, 100.0], [1.701263214E12, 100.0], [1.7012633E12, 100.0], [1.701263386E12, 100.0], [1.701263382E12, 100.0], [1.701263255E12, 100.0], [1.701263341E12, 100.0], [1.70126339E12, 99.93793103448276], [1.701263345E12, 100.0], [1.701263218E12, 100.0], [1.701263304E12, 100.0], [1.701263374E12, 100.0], [1.701263247E12, 100.0], [1.701263333E12, 100.0], [1.701263243E12, 100.0], [1.701263329E12, 100.0], [1.701263288E12, 100.0], [1.701263251E12, 100.0], [1.701263337E12, 100.0], [1.701263235E12, 100.0], [1.70126328E12, 100.0], [1.701263362E12, 100.0], [1.701263284E12, 100.0], [1.701263239E12, 100.0], [1.701263225E12, 100.0], [1.701263311E12, 100.0], [1.701263307E12, 100.0], [1.701263393E12, 75.21935483870965], [1.701263352E12, 100.0], [1.701263315E12, 100.0], [1.701263401E12, 43.0], [1.70126336E12, 100.0], [1.701263356E12, 100.0], [1.701263229E12, 100.0], [1.701263299E12, 100.0], [1.701263385E12, 100.0], [1.701263344E12, 100.0], [1.701263254E12, 100.0], [1.70126334E12, 100.0], [1.701263213E12, 100.0], [1.701263262E12, 100.0], [1.701263221E12, 100.0], [1.701263217E12, 100.0], [1.701263303E12, 100.0], [1.701263389E12, 100.0], [1.701263246E12, 100.0], [1.701263332E12, 100.0], [1.701263418E12, 3.666666666666667], [1.701263287E12, 100.0], [1.701263295E12, 100.0], [1.701263381E12, 100.0], [1.701263291E12, 100.0], [1.70126325E12, 100.0], [1.701263336E12, 100.0], [1.701263279E12, 100.0], [1.701263361E12, 100.0], [1.701263234E12, 100.0], [1.701263283E12, 100.0], [1.701263242E12, 100.0], [1.701263328E12, 100.0], [1.701263238E12, 100.0]], "isOverall": false, "label": "jp@gc - Ultimate Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.701263418E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 44.8, "minX": 1.0, "maxY": 37281.74074074074, "series": [{"data": [[2.0, 23141.0], [3.0, 23017.0], [5.0, 23136.5], [6.0, 23157.0], [16.0, 30551.700000000004], [43.0, 37281.74074074074], [45.0, 9683.0], [44.0, 9680.0], [47.0, 24828.0], [46.0, 25011.0], [49.0, 24804.0], [48.0, 24810.0], [50.0, 24795.0], [53.0, 24592.0], [52.0, 24768.0], [55.0, 1496.5294117647059], [54.0, 24635.0], [57.0, 45.857142857142854], [56.0, 44.8], [59.0, 46.5], [58.0, 46.16666666666667], [61.0, 49.8], [60.0, 47.72], [63.0, 48.27380952380952], [62.0, 57.88461538461539], [67.0, 47.70833333333333], [66.0, 2014.066666666667], [65.0, 46.69230769230769], [64.0, 46.50000000000001], [71.0, 1598.3157894736844], [70.0, 2019.5333333333335], [69.0, 7449.0], [68.0, 49.199999999999996], [75.0, 51.581395348837226], [74.0, 46.916666666666664], [73.0, 3496.764705882353], [79.0, 48.76595744680852], [78.0, 48.28], [77.0, 49.57142857142857], [76.0, 67.66666666666667], [83.0, 1975.4], [82.0, 46.82758620689655], [81.0, 46.793814432989684], [80.0, 47.61538461538462], [87.0, 48.60714285714286], [86.0, 47.69333333333333], [85.0, 52.99999999999999], [84.0, 3257.3333333333335], [91.0, 164.82539682539687], [90.0, 47.11538461538461], [89.0, 48.84615384615385], [88.0, 48.57142857142858], [95.0, 59.93333333333334], [94.0, 63.4], [93.0, 58.66666666666668], [92.0, 49.677419354838705], [99.0, 47.75757575757576], [98.0, 47.41176470588236], [97.0, 50.300000000000004], [96.0, 50.91304347826088], [100.0, 1254.2529818495984], [1.0, 23218.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[97.74063692283723, 1284.2396636299825]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.701263211E12, "maxY": 3136291.0, "series": [{"data": [[1.70126331E12, 47595.0], [1.701263265E12, 298735.0], [1.701263351E12, 45600.0], [1.701263224E12, 1045378.0], [1.701263359E12, 69825.0], [1.701263232E12, 1792230.0], [1.701263355E12, 69825.0], [1.701263228E12, 2389565.0], [1.701263314E12, 2679.0], [1.701263257E12, 590.0], [1.701263343E12, 32205.0], [1.701263216E12, 448016.0], [1.701263339E12, 60705.0], [1.701263212E12, 298714.0], [1.701263384E12, 83220.0], [1.701263347E12, 746717.0], [1.70126322E12, 1493456.0], [1.701263306E12, 45600.0], [1.701263392E12, 91318.0], [1.701263302E12, 47994.0], [1.701263388E12, 85215.0], [1.701263331E12, 68400.0], [1.70126329E12, 149335.0], [1.701263286E12, 32551.0], [1.701263245E12, 1194761.0], [1.701263294E12, 8037.0], [1.701263253E12, 896196.0], [1.701263249E12, 896067.0], [1.701263335E12, 58995.0], [1.701263364E12, 33060.0], [1.701263237E12, 1344083.0], [1.701263233E12, 1194812.0], [1.701263405E12, 2850.0], [1.701263241E12, 1194788.0], [1.701263327E12, 154459.0], [1.701263282E12, 453412.0], [1.701263395E12, 6270.0], [1.701263354E12, 68115.0], [1.701263223E12, 1194792.0], [1.701263309E12, 195510.0], [1.701263358E12, 70965.0], [1.701263231E12, 1493468.0], [1.701263227E12, 896094.0], [1.701263313E12, 30210.0], [1.701263399E12, 1498746.0], [1.701263342E12, 62985.0], [1.701263215E12, 896090.0], [1.701263301E12, 190678.0], [1.701263211E12, 149362.0], [1.701263383E12, 82080.0], [1.701263256E12, 298679.0], [1.701263219E12, 597424.0], [1.701263305E12, 45600.0], [1.701263391E12, 87780.0], [1.701263264E12, 1194749.0], [1.701263387E12, 84360.0], [1.701263346E12, 448093.0], [1.701263289E12, 304059.0], [1.701263375E12, 149939.0], [1.701263248E12, 1045402.0], [1.701263244E12, 1493473.0], [1.70126333E12, 32490.0], [1.701263252E12, 1194812.0], [1.701263338E12, 60990.0], [1.701263334E12, 56715.0], [1.701263363E12, 71535.0], [1.701263236E12, 1493501.0], [1.701263322E12, 118.0], [1.701263285E12, 45543.0], [1.701263281E12, 301366.0], [1.70126324E12, 1344149.0], [1.701263353E12, 66975.0], [1.701263226E12, 1642872.0], [1.701263312E12, 2590057.0], [1.701263222E12, 1344094.0], [1.701263308E12, 494528.0], [1.701263394E12, 222028.0], [1.70126323E12, 1045460.0], [1.701263357E12, 68685.0], [1.701263214E12, 448036.0], [1.7012633E12, 1194758.0], [1.701263386E12, 85785.0], [1.701263382E12, 88920.0], [1.701263255E12, 896046.0], [1.701263341E12, 61845.0], [1.70126339E12, 82650.0], [1.701263345E12, 1642967.0], [1.701263218E12, 1045378.0], [1.701263304E12, 44745.0], [1.701263374E12, 2837885.0], [1.701263247E12, 1493472.0], [1.701263333E12, 58425.0], [1.701263243E12, 1344097.0], [1.701263329E12, 6270.0], [1.701263288E12, 8037.0], [1.701263251E12, 1045558.0], [1.701263337E12, 58995.0], [1.701263235E12, 746772.0], [1.70126328E12, 298699.0], [1.701263362E12, 72390.0], [1.701263284E12, 322814.0], [1.701263239E12, 1493495.0], [1.701263225E12, 896113.0], [1.701263311E12, 951988.0], [1.701263307E12, 45885.0], [1.701263393E12, 833716.0], [1.701263352E12, 73530.0], [1.701263315E12, 5358.0], [1.701263401E12, 7695.0], [1.70126336E12, 71250.0], [1.701263356E12, 68685.0], [1.701263229E12, 1642790.0], [1.701263299E12, 5358.0], [1.701263385E12, 78660.0], [1.701263344E12, 285.0], [1.701263254E12, 746731.0], [1.70126334E12, 61845.0], [1.701263213E12, 896074.0], [1.701263262E12, 3136291.0], [1.701263221E12, 2090838.0], [1.701263217E12, 1941499.0], [1.701263303E12, 44175.0], [1.701263389E12, 85500.0], [1.701263246E12, 1493457.0], [1.701263332E12, 57285.0], [1.701263418E12, 896068.0], [1.701263287E12, 2679.0], [1.701263295E12, 118.0], [1.701263381E12, 72675.0], [1.701263291E12, 896054.0], [1.70126325E12, 1194789.0], [1.701263336E12, 61275.0], [1.701263279E12, 2679.0], [1.701263361E12, 71250.0], [1.701263234E12, 1792107.0], [1.701263283E12, 304065.0], [1.701263242E12, 1642819.0], [1.701263328E12, 6270.0], [1.701263238E12, 896114.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.70126331E12, 23213.0], [1.701263265E12, 278.0], [1.701263351E12, 22240.0], [1.701263224E12, 973.0], [1.701263359E12, 34055.0], [1.701263232E12, 1668.0], [1.701263355E12, 34055.0], [1.701263228E12, 2224.0], [1.701263314E12, 0.0], [1.701263257E12, 695.0], [1.701263343E12, 15707.0], [1.701263216E12, 417.0], [1.701263339E12, 29607.0], [1.701263212E12, 278.0], [1.701263384E12, 40588.0], [1.701263347E12, 695.0], [1.70126322E12, 1390.0], [1.701263306E12, 22240.0], [1.701263392E12, 41978.0], [1.701263302E12, 22101.0], [1.701263388E12, 41561.0], [1.701263331E12, 33360.0], [1.70126329E12, 139.0], [1.701263286E12, 278.0], [1.701263245E12, 1112.0], [1.701263294E12, 0.0], [1.701263253E12, 973.0], [1.701263249E12, 834.0], [1.701263335E12, 28773.0], [1.701263364E12, 16124.0], [1.701263237E12, 1251.0], [1.701263233E12, 1112.0], [1.701263405E12, 1390.0], [1.701263241E12, 1112.0], [1.701263327E12, 2641.0], [1.701263282E12, 417.0], [1.701263395E12, 3058.0], [1.701263354E12, 33221.0], [1.701263223E12, 1112.0], [1.701263309E12, 22657.0], [1.701263358E12, 34611.0], [1.701263231E12, 1390.0], [1.701263227E12, 834.0], [1.701263313E12, 14734.0], [1.701263399E12, 1390.0], [1.701263342E12, 30719.0], [1.701263215E12, 834.0], [1.701263301E12, 20294.0], [1.701263211E12, 139.0], [1.701263383E12, 40032.0], [1.701263256E12, 278.0], [1.701263219E12, 556.0], [1.701263305E12, 22240.0], [1.701263391E12, 42812.0], [1.701263264E12, 1112.0], [1.701263387E12, 41144.0], [1.701263346E12, 417.0], [1.701263289E12, 278.0], [1.701263375E12, 417.0], [1.701263248E12, 973.0], [1.701263244E12, 1390.0], [1.70126333E12, 15846.0], [1.701263252E12, 1112.0], [1.701263338E12, 29746.0], [1.701263334E12, 27661.0], [1.701263363E12, 34889.0], [1.701263236E12, 1390.0], [1.701263322E12, 139.0], [1.701263285E12, 0.0], [1.701263281E12, 278.0], [1.70126324E12, 1251.0], [1.701263353E12, 32665.0], [1.701263226E12, 1529.0], [1.701263312E12, 25993.0], [1.701263222E12, 1251.0], [1.701263308E12, 23074.0], [1.701263394E12, 35584.0], [1.70126323E12, 973.0], [1.701263357E12, 33499.0], [1.701263214E12, 417.0], [1.7012633E12, 1112.0], [1.701263386E12, 41839.0], [1.701263382E12, 43368.0], [1.701263255E12, 834.0], [1.701263341E12, 30163.0], [1.70126339E12, 40310.0], [1.701263345E12, 1529.0], [1.701263218E12, 973.0], [1.701263304E12, 21823.0], [1.701263374E12, 2780.0], [1.701263247E12, 1390.0], [1.701263333E12, 28495.0], [1.701263243E12, 1251.0], [1.701263329E12, 3058.0], [1.701263288E12, 0.0], [1.701263251E12, 1112.0], [1.701263337E12, 28773.0], [1.701263235E12, 695.0], [1.70126328E12, 278.0], [1.701263362E12, 35306.0], [1.701263284E12, 278.0], [1.701263239E12, 1390.0], [1.701263225E12, 834.0], [1.701263311E12, 24186.0], [1.701263307E12, 22379.0], [1.701263393E12, 43090.0], [1.701263352E12, 35862.0], [1.701263315E12, 0.0], [1.701263401E12, 3753.0], [1.70126336E12, 34750.0], [1.701263356E12, 33499.0], [1.701263229E12, 1529.0], [1.701263299E12, 0.0], [1.701263385E12, 38364.0], [1.701263344E12, 139.0], [1.701263254E12, 695.0], [1.70126334E12, 30163.0], [1.701263213E12, 834.0], [1.701263262E12, 2919.0], [1.701263221E12, 1946.0], [1.701263217E12, 1807.0], [1.701263303E12, 21545.0], [1.701263389E12, 41700.0], [1.701263246E12, 1390.0], [1.701263332E12, 27939.0], [1.701263418E12, 834.0], [1.701263287E12, 0.0], [1.701263295E12, 139.0], [1.701263381E12, 35445.0], [1.701263291E12, 834.0], [1.70126325E12, 1112.0], [1.701263336E12, 29885.0], [1.701263279E12, 0.0], [1.701263361E12, 34750.0], [1.701263234E12, 1668.0], [1.701263283E12, 278.0], [1.701263242E12, 1529.0], [1.701263328E12, 3058.0], [1.701263238E12, 834.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.701263418E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 44.70063694267517, "minX": 1.701263211E12, "maxY": 60043.11764705882, "series": [{"data": [[1.70126331E12, 48.35329341317365], [1.701263265E12, 442.5], [1.701263351E12, 7638.06875], [1.701263224E12, 2451.5714285714284], [1.701263359E12, 45.99183673469388], [1.701263232E12, 1472.25], [1.701263355E12, 190.82040816326528], [1.701263228E12, 2475.6875], [1.701263314E12, 60027.0], [1.701263257E12, 32471.2], [1.701263343E12, 46.82300884955753], [1.701263216E12, 493.6666666666667], [1.701263339E12, 47.35680751173712], [1.701263212E12, 1090.0], [1.701263384E12, 50.55821917808219], [1.701263347E12, 33746.6], [1.70126322E12, 1990.8], [1.701263306E12, 44.97499999999999], [1.701263392E12, 111.9111842105264], [1.701263302E12, 433.1125], [1.701263388E12, 75.752508361204], [1.701263331E12, 53.87500000000004], [1.70126329E12, 28236.0], [1.701263286E12, 53777.214285714275], [1.701263245E12, 766.375], [1.701263294E12, 60025.0], [1.701263253E12, 5491.857142857143], [1.701263249E12, 939.0], [1.701263335E12, 67.67632850241546], [1.701263364E12, 64.93965517241381], [1.701263237E12, 1260.111111111111], [1.701263233E12, 1288.75], [1.701263405E12, 30551.700000000004], [1.701263241E12, 953.625], [1.701263327E12, 2000.9473684210525], [1.701263282E12, 24406.0], [1.701263395E12, 45.18181818181819], [1.701263354E12, 50.69874476987445], [1.701263223E12, 2210.75], [1.701263309E12, 195.96932515337417], [1.701263358E12, 59.29718875502011], [1.701263231E12, 1526.6], [1.701263227E12, 1896.1666666666667], [1.701263313E12, 48.27358490566038], [1.701263399E12, 22257.416666666664], [1.701263342E12, 51.51583710407242], [1.701263215E12, 966.0], [1.701263301E12, 3678.178082191784], [1.701263211E12, 1243.0], [1.701263383E12, 50.76388888888893], [1.701263256E12, 770.0], [1.701263219E12, 1354.0], [1.701263305E12, 564.1124999999996], [1.701263391E12, 74.68831168831173], [1.701263264E12, 1315.8750000000002], [1.701263387E12, 56.97972972972973], [1.701263346E12, 33135.0], [1.701263289E12, 46258.5], [1.701263375E12, 10495.333333333334], [1.701263248E12, 1101.5714285714287], [1.701263244E12, 815.3999999999999], [1.70126333E12, 17721.570175438595], [1.701263252E12, 12688.0], [1.701263338E12, 47.94859813084111], [1.701263334E12, 47.22110552763818], [1.701263363E12, 48.80079681274899], [1.701263236E12, 1598.4], [1.701263322E12, 34276.0], [1.701263285E12, 60043.11764705882], [1.701263281E12, 20355.666666666668], [1.70126324E12, 1061.4444444444443], [1.701263353E12, 46.76595744680851], [1.701263226E12, 2654.3636363636365], [1.701263312E12, 2401.8723404255334], [1.701263222E12, 1848.0], [1.701263308E12, 687.3734939759037], [1.701263394E12, 163.71875], [1.70126323E12, 1599.857142857143], [1.701263357E12, 50.45643153526972], [1.701263214E12, 823.3333333333334], [1.7012633E12, 44302.0], [1.701263386E12, 98.53820598006646], [1.701263382E12, 54.881410256410284], [1.701263255E12, 26129.666666666664], [1.701263341E12, 48.110599078341046], [1.70126339E12, 49.5724137931034], [1.701263345E12, 31689.63636363636], [1.701263218E12, 1158.5714285714287], [1.701263304E12, 44.70063694267517], [1.701263374E12, 29889.050000000003], [1.701263247E12, 851.1999999999999], [1.701263333E12, 47.64390243902438], [1.701263243E12, 890.4444444444445], [1.701263329E12, 45.45454545454545], [1.701263288E12, 60025.0], [1.701263251E12, 8891.75], [1.701263337E12, 46.772946859903406], [1.701263235E12, 1350.8], [1.70126328E12, 612.0], [1.701263362E12, 52.92125984251969], [1.701263284E12, 49402.090909090904], [1.701263239E12, 1419.7], [1.701263225E12, 2279.333333333333], [1.701263311E12, 1991.7966101694906], [1.701263307E12, 45.06832298136644], [1.701263393E12, 525.654838709677], [1.701263352E12, 47.73255813953487], [1.701263315E12, 60025.0], [1.701263401E12, 37281.74074074074], [1.70126336E12, 50.747999999999976], [1.701263356E12, 46.13692946058094], [1.701263229E12, 1766.3636363636363], [1.701263299E12, 60025.0], [1.701263385E12, 49.78260869565217], [1.701263344E12, 1082.0], [1.701263254E12, 19842.2], [1.70126334E12, 51.986175115207374], [1.701263213E12, 953.8333333333334], [1.701263262E12, 34043.28571428572], [1.701263221E12, 1923.142857142857], [1.701263217E12, 1713.2307692307693], [1.701263303E12, 45.045161290322575], [1.701263389E12, 74.45333333333336], [1.701263246E12, 871.5], [1.701263332E12, 46.572139303482565], [1.701263418E12, 23134.333333333332], [1.701263287E12, 60025.0], [1.701263295E12, 32407.0], [1.701263381E12, 6861.64705882353], [1.701263291E12, 28308.333333333332], [1.70126325E12, 1140.625], [1.701263336E12, 67.0186046511628], [1.701263279E12, 60026.0], [1.701263361E12, 51.41199999999996], [1.701263234E12, 1381.1666666666667], [1.701263283E12, 30654.75], [1.701263242E12, 1096.6363636363635], [1.701263328E12, 45.22727272727273], [1.701263238E12, 1291.5]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.701263418E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.701263211E12, "maxY": 44235.5, "series": [{"data": [[1.70126331E12, 48.35329341317365], [1.701263265E12, 376.5], [1.701263351E12, 7638.062500000002], [1.701263224E12, 2160.285714285714], [1.701263359E12, 45.98775510204081], [1.701263232E12, 1400.8333333333335], [1.701263355E12, 190.8081632653061], [1.701263228E12, 2408.6875], [1.701263314E12, 0.0], [1.701263257E12, 32471.2], [1.701263343E12, 46.82300884955753], [1.701263216E12, 430.3333333333333], [1.701263339E12, 47.352112676056365], [1.701263212E12, 885.0], [1.701263384E12, 50.54794520547944], [1.701263347E12, 33624.0], [1.70126322E12, 1923.0000000000002], [1.701263306E12, 44.95624999999999], [1.701263392E12, 48.20723684210526], [1.701263302E12, 57.94375000000001], [1.701263388E12, 75.74247491638796], [1.701263331E12, 53.87083333333333], [1.70126329E12, 28137.0], [1.701263286E12, 2326.642857142857], [1.701263245E12, 701.6249999999999], [1.701263294E12, 0.0], [1.701263253E12, 5435.285714285714], [1.701263249E12, 696.6666666666666], [1.701263335E12, 67.67632850241546], [1.701263364E12, 64.93103448275865], [1.701263237E12, 997.7777777777778], [1.701263233E12, 1219.0], [1.701263405E12, 30551.700000000004], [1.701263241E12, 885.625], [1.701263327E12, 1997.5789473684222], [1.701263282E12, 356.2], [1.701263395E12, 45.18181818181819], [1.701263354E12, 50.69456066945604], [1.701263223E12, 1945.0], [1.701263309E12, 195.58895705521476], [1.701263358E12, 59.285140562249005], [1.701263231E12, 1458.8999999999999], [1.701263227E12, 1831.0], [1.701263313E12, 48.24528301886791], [1.701263399E12, 20260.166666666668], [1.701263342E12, 51.493212669683224], [1.701263215E12, 900.5], [1.701263301E12, 3677.3150684931534], [1.701263211E12, 913.0], [1.701263383E12, 50.76041666666665], [1.701263256E12, 706.5], [1.701263219E12, 1287.75], [1.701263305E12, 564.0687499999999], [1.701263391E12, 74.68506493506497], [1.701263264E12, 1241.0], [1.701263387E12, 56.96959459459457], [1.701263346E12, 32978.0], [1.701263289E12, 16214.0], [1.701263375E12, 10474.0], [1.701263248E12, 789.0000000000001], [1.701263244E12, 748.2], [1.70126333E12, 17721.526315789484], [1.701263252E12, 12618.374999999996], [1.701263338E12, 47.9392523364486], [1.701263334E12, 47.21608040201007], [1.701263363E12, 48.79681274900397], [1.701263236E12, 1298.3000000000002], [1.701263322E12, 34276.0], [1.701263285E12, 0.0], [1.701263281E12, 303.66666666666663], [1.70126324E12, 995.1111111111113], [1.701263353E12, 46.76595744680851], [1.701263226E12, 2585.1818181818185], [1.701263312E12, 2056.3138297872333], [1.701263222E12, 1773.888888888889], [1.701263308E12, 686.05421686747], [1.701263394E12, 161.24609375000017], [1.70126323E12, 1529.7142857142856], [1.701263357E12, 50.45228215767635], [1.701263214E12, 757.3333333333334], [1.7012633E12, 44235.5], [1.701263386E12, 98.53488372093022], [1.701263382E12, 54.87500000000004], [1.701263255E12, 26054.0], [1.701263341E12, 48.10599078341015], [1.70126339E12, 49.5724137931034], [1.701263345E12, 30639.18181818182], [1.701263218E12, 1092.7142857142858], [1.701263304E12, 44.681528662420384], [1.701263374E12, 28776.850000000002], [1.701263247E12, 786.1], [1.701263333E12, 47.63414634146342], [1.701263243E12, 826.0], [1.701263329E12, 45.4090909090909], [1.701263288E12, 0.0], [1.701263251E12, 8834.75], [1.701263337E12, 46.74396135265702], [1.701263235E12, 1248.0], [1.70126328E12, 548.5], [1.701263362E12, 52.92125984251969], [1.701263284E12, 266.36363636363643], [1.701263239E12, 1350.5], [1.701263225E12, 2110.5], [1.701263311E12, 971.0225988700566], [1.701263307E12, 45.05590062111802], [1.701263393E12, 518.3354838709677], [1.701263352E12, 47.73255813953487], [1.701263315E12, 0.0], [1.701263401E12, 37281.74074074074], [1.70126336E12, 50.744000000000035], [1.701263356E12, 46.13692946058094], [1.701263229E12, 1693.818181818182], [1.701263299E12, 0.0], [1.701263385E12, 49.78260869565217], [1.701263344E12, 1082.0], [1.701263254E12, 19774.4], [1.70126334E12, 51.97695852534563], [1.701263213E12, 845.3333333333334], [1.701263262E12, 33857.380952380954], [1.701263221E12, 1851.7857142857144], [1.701263217E12, 1643.1538461538462], [1.701263303E12, 44.99354838709677], [1.701263389E12, 74.44333333333337], [1.701263246E12, 806.4999999999999], [1.701263332E12, 46.572139303482565], [1.701263418E12, 22843.166666666668], [1.701263287E12, 0.0], [1.701263295E12, 32407.0], [1.701263381E12, 6861.643137254902], [1.701263291E12, 28218.833333333332], [1.70126325E12, 940.875], [1.701263336E12, 67.00465116279072], [1.701263279E12, 0.0], [1.701263361E12, 51.39999999999999], [1.701263234E12, 1314.166666666667], [1.701263283E12, 607.75], [1.701263242E12, 1028.8181818181818], [1.701263328E12, 45.18181818181819], [1.701263238E12, 1217.8333333333335]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.701263418E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 22.75, "minX": 1.701263211E12, "maxY": 1635.5833333333333, "series": [{"data": [[1.70126331E12, 25.251497005988014], [1.701263265E12, 24.0], [1.701263351E12, 32.193749999999994], [1.701263224E12, 24.000000000000004], [1.701263359E12, 24.073469387755093], [1.701263232E12, 23.083333333333336], [1.701263355E12, 24.420408163265307], [1.701263228E12, 26.3125], [1.701263314E12, 25.0], [1.701263257E12, 51.8], [1.701263343E12, 24.486725663716815], [1.701263216E12, 29.666666666666668], [1.701263339E12, 24.7887323943662], [1.701263212E12, 27.0], [1.701263384E12, 26.986301369863035], [1.701263347E12, 25.8], [1.70126322E12, 24.2], [1.701263306E12, 23.524999999999988], [1.701263392E12, 88.94736842105263], [1.701263302E12, 23.51875], [1.701263388E12, 38.27090301003342], [1.701263331E12, 28.658333333333328], [1.70126329E12, 41.0], [1.701263286E12, 24.21428571428571], [1.701263245E12, 23.375], [1.701263294E12, 23.0], [1.701263253E12, 23.857142857142858], [1.701263249E12, 48.333333333333336], [1.701263335E12, 24.913043478260867], [1.701263364E12, 25.43103448275862], [1.701263237E12, 50.55555555555556], [1.701263233E12, 23.750000000000004], [1.701263405E12, 27.9], [1.701263241E12, 24.125], [1.701263327E12, 22.947368421052634], [1.701263282E12, 25.2], [1.701263395E12, 23.772727272727273], [1.701263354E12, 24.205020920502086], [1.701263223E12, 23.875000000000004], [1.701263309E12, 24.116564417177905], [1.701263358E12, 24.642570281124488], [1.701263231E12, 23.4], [1.701263227E12, 34.166666666666664], [1.701263313E12, 25.23584905660377], [1.701263399E12, 1635.5833333333333], [1.701263342E12, 24.248868778280542], [1.701263215E12, 23.666666666666668], [1.701263301E12, 26.458904109589035], [1.701263211E12, 44.0], [1.701263383E12, 27.14583333333333], [1.701263256E12, 24.0], [1.701263219E12, 23.25], [1.701263305E12, 23.381249999999994], [1.701263391E12, 27.292207792207794], [1.701263264E12, 29.874999999999996], [1.701263387E12, 33.273648648648674], [1.701263346E12, 24.333333333333332], [1.701263289E12, 22.75], [1.701263375E12, 28.0], [1.701263248E12, 24.57142857142857], [1.701263244E12, 23.6], [1.70126333E12, 35.70175438596492], [1.701263252E12, 23.625], [1.701263338E12, 24.850467289719614], [1.701263334E12, 24.648241206030143], [1.701263363E12, 25.537848605577697], [1.701263236E12, 23.6], [1.701263322E12, 29.0], [1.701263285E12, 42.05882352941177], [1.701263281E12, 23.666666666666668], [1.70126324E12, 24.11111111111111], [1.701263353E12, 24.35744680851064], [1.701263226E12, 61.18181818181818], [1.701263312E12, 25.122340425531917], [1.701263222E12, 23.666666666666664], [1.701263308E12, 24.138554216867487], [1.701263394E12, 25.550781250000018], [1.70126323E12, 23.714285714285715], [1.701263357E12, 23.987551867219928], [1.701263214E12, 23.666666666666668], [1.7012633E12, 23.375], [1.701263386E12, 41.39867109634552], [1.701263382E12, 29.35897435897437], [1.701263255E12, 25.166666666666668], [1.701263341E12, 25.09216589861752], [1.70126339E12, 25.944827586206898], [1.701263345E12, 25.727272727272727], [1.701263218E12, 23.571428571428573], [1.701263304E12, 23.273885350318476], [1.701263374E12, 25.05], [1.701263247E12, 24.299999999999997], [1.701263333E12, 24.775609756097552], [1.701263243E12, 23.444444444444443], [1.701263329E12, 23.18181818181818], [1.701263288E12, 24.0], [1.701263251E12, 44.625], [1.701263337E12, 24.36231884057971], [1.701263235E12, 22.8], [1.70126328E12, 24.5], [1.701263362E12, 25.681102362204733], [1.701263284E12, 36.727272727272734], [1.701263239E12, 50.8], [1.701263225E12, 53.166666666666664], [1.701263311E12, 24.711864406779647], [1.701263307E12, 23.71428571428571], [1.701263393E12, 26.448387096774187], [1.701263352E12, 25.003875968992237], [1.701263315E12, 24.0], [1.701263401E12, 49.92592592592593], [1.70126336E12, 24.372000000000014], [1.701263356E12, 23.954356846473033], [1.701263229E12, 24.454545454545453], [1.701263299E12, 23.0], [1.701263385E12, 26.6195652173913], [1.701263344E12, 25.0], [1.701263254E12, 23.2], [1.70126334E12, 24.718894009216598], [1.701263213E12, 111.83333333333333], [1.701263262E12, 31.714285714285708], [1.701263221E12, 25.071428571428573], [1.701263217E12, 25.615384615384617], [1.701263303E12, 23.354838709677416], [1.701263389E12, 50.60333333333334], [1.701263246E12, 25.200000000000003], [1.701263332E12, 24.11442786069652], [1.701263418E12, 23.5], [1.701263287E12, 23.0], [1.701263295E12, 26.0], [1.701263381E12, 77.87843137254906], [1.701263291E12, 28.666666666666664], [1.70126325E12, 106.625], [1.701263336E12, 24.990697674418595], [1.701263279E12, 24.0], [1.701263361E12, 24.956000000000007], [1.701263234E12, 23.500000000000004], [1.701263283E12, 26.0], [1.701263242E12, 25.636363636363637], [1.701263328E12, 23.09090909090909], [1.701263238E12, 68.16666666666667]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.701263418E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 395.0, "minX": 1.701263211E12, "maxY": 59411.0, "series": [{"data": [[1.701263226E12, 3627.0], [1.701263312E12, 56060.0], [1.701263222E12, 1943.0], [1.701263265E12, 490.0], [1.701263308E12, 57806.0], [1.701263394E12, 29543.0], [1.701263224E12, 2634.0], [1.70126323E12, 1993.0], [1.701263232E12, 2056.0], [1.701263228E12, 4567.0], [1.701263214E12, 1004.0], [1.7012633E12, 45432.0], [1.701263216E12, 580.0], [1.701263212E12, 1093.0], [1.701263255E12, 31964.0], [1.701263347E12, 34060.0], [1.70126322E12, 2704.0], [1.701263345E12, 32200.0], [1.701263218E12, 1444.0], [1.701263374E12, 31779.0], [1.701263247E12, 1278.0], [1.70126329E12, 28236.0], [1.701263243E12, 1085.0], [1.701263245E12, 1276.0], [1.701263251E12, 33025.0], [1.701263253E12, 1168.0], [1.701263249E12, 1241.0], [1.701263235E12, 1500.0], [1.701263237E12, 1416.0], [1.70126328E12, 713.0], [1.701263233E12, 1449.0], [1.701263241E12, 1313.0], [1.701263284E12, 1592.0], [1.701263327E12, 37206.0], [1.701263239E12, 2009.0], [1.701263282E12, 795.0], [1.701263225E12, 2866.0], [1.701263311E12, 59411.0], [1.701263393E12, 29643.0], [1.701263223E12, 2483.0], [1.701263309E12, 24502.0], [1.701263231E12, 2105.0], [1.701263227E12, 2374.0], [1.701263399E12, 25011.0], [1.701263229E12, 2806.0], [1.701263215E12, 1890.0], [1.701263301E12, 18033.0], [1.701263211E12, 1243.0], [1.701263254E12, 32480.0], [1.701263213E12, 1227.0], [1.701263256E12, 803.0], [1.701263219E12, 1911.0], [1.701263262E12, 41357.0], [1.701263221E12, 2224.0], [1.701263264E12, 1601.0], [1.701263217E12, 2759.0], [1.701263346E12, 33411.0], [1.701263246E12, 1365.0], [1.701263289E12, 32539.0], [1.701263375E12, 31382.0], [1.701263418E12, 23303.0], [1.701263248E12, 1427.0], [1.701263244E12, 1179.0], [1.701263252E12, 32072.0], [1.701263291E12, 28382.0], [1.70126325E12, 1423.0], [1.701263236E12, 1819.0], [1.701263234E12, 1679.0], [1.701263283E12, 1283.0], [1.701263242E12, 1377.0], [1.701263238E12, 1804.0], [1.701263281E12, 634.0], [1.70126324E12, 1481.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.701263226E12, 1170.0], [1.701263312E12, 11586.0], [1.701263222E12, 1711.0], [1.701263265E12, 395.0], [1.701263308E12, 24306.0], [1.701263394E12, 29543.0], [1.701263224E12, 1956.0], [1.70126323E12, 846.0], [1.701263232E12, 535.0], [1.701263228E12, 653.0], [1.701263214E12, 634.0], [1.7012633E12, 42859.0], [1.701263216E12, 416.0], [1.701263212E12, 1087.0], [1.701263255E12, 1185.0], [1.701263347E12, 33541.0], [1.70126322E12, 876.0], [1.701263345E12, 30616.0], [1.701263218E12, 944.0], [1.701263374E12, 31243.0], [1.701263247E12, 452.0], [1.70126329E12, 28236.0], [1.701263243E12, 535.0], [1.701263245E12, 475.0], [1.701263251E12, 545.0], [1.701263253E12, 837.0], [1.701263249E12, 715.0], [1.701263235E12, 1164.0], [1.701263237E12, 1049.0], [1.70126328E12, 511.0], [1.701263233E12, 1084.0], [1.701263241E12, 601.0], [1.701263284E12, 1463.0], [1.701263327E12, 37206.0], [1.701263239E12, 649.0], [1.701263282E12, 477.0], [1.701263225E12, 1852.0], [1.701263311E12, 11512.0], [1.701263393E12, 29356.0], [1.701263223E12, 1764.0], [1.701263309E12, 24502.0], [1.701263231E12, 811.0], [1.701263227E12, 1612.0], [1.701263399E12, 24592.0], [1.701263229E12, 1217.0], [1.701263215E12, 465.0], [1.701263301E12, 18033.0], [1.701263211E12, 1243.0], [1.701263254E12, 1099.0], [1.701263213E12, 753.0], [1.701263256E12, 737.0], [1.701263219E12, 1009.0], [1.701263262E12, 9121.0], [1.701263221E12, 1060.0], [1.701263264E12, 543.0], [1.701263217E12, 553.0], [1.701263346E12, 32810.0], [1.701263246E12, 457.0], [1.701263289E12, 32444.0], [1.701263375E12, 31382.0], [1.701263418E12, 22970.0], [1.701263248E12, 683.0], [1.701263244E12, 485.0], [1.701263252E12, 850.0], [1.701263291E12, 28268.0], [1.70126325E12, 801.0], [1.701263236E12, 1332.0], [1.701263234E12, 1034.0], [1.701263283E12, 1278.0], [1.701263242E12, 819.0], [1.701263238E12, 713.0], [1.701263281E12, 408.0], [1.70126324E12, 444.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.701263226E12, 3600.2000000000003], [1.701263312E12, 32159.999999999978], [1.701263222E12, 1943.0], [1.701263265E12, 490.0], [1.701263308E12, 57806.0], [1.701263394E12, 29543.0], [1.701263224E12, 2634.0], [1.70126323E12, 1993.0], [1.701263232E12, 1980.1000000000004], [1.701263228E12, 4487.2], [1.701263214E12, 1004.0], [1.7012633E12, 45432.0], [1.701263216E12, 580.0], [1.701263212E12, 1093.0], [1.701263255E12, 31964.0], [1.701263347E12, 34060.0], [1.70126322E12, 2684.8], [1.701263345E12, 32171.8], [1.701263218E12, 1444.0], [1.701263374E12, 31738.0], [1.701263247E12, 1275.1], [1.70126329E12, 28236.0], [1.701263243E12, 1085.0], [1.701263245E12, 1276.0], [1.701263251E12, 33025.0], [1.701263253E12, 1168.0], [1.701263249E12, 1241.0], [1.701263235E12, 1500.0], [1.701263237E12, 1416.0], [1.70126328E12, 713.0], [1.701263233E12, 1449.0], [1.701263241E12, 1313.0], [1.701263284E12, 1592.0], [1.701263327E12, 37206.0], [1.701263239E12, 1995.0], [1.701263282E12, 795.0], [1.701263225E12, 2866.0], [1.701263311E12, 59411.0], [1.701263393E12, 29643.0], [1.701263223E12, 2483.0], [1.701263309E12, 24502.0], [1.701263231E12, 2100.7], [1.701263227E12, 2374.0], [1.701263399E12, 24992.7], [1.701263229E12, 2797.8], [1.701263215E12, 1890.0], [1.701263301E12, 18033.0], [1.701263211E12, 1243.0], [1.701263254E12, 32480.0], [1.701263213E12, 1227.0], [1.701263256E12, 803.0], [1.701263219E12, 1911.0], [1.701263262E12, 41094.8], [1.701263221E12, 2216.0], [1.701263264E12, 1601.0], [1.701263217E12, 2723.0], [1.701263346E12, 33411.0], [1.701263246E12, 1364.9], [1.701263289E12, 32539.0], [1.701263375E12, 31382.0], [1.701263418E12, 23303.0], [1.701263248E12, 1427.0], [1.701263244E12, 1176.0], [1.701263252E12, 32072.0], [1.701263291E12, 28382.0], [1.70126325E12, 1423.0], [1.701263236E12, 1816.2], [1.701263234E12, 1649.3000000000002], [1.701263283E12, 1283.0], [1.701263242E12, 1376.6], [1.701263238E12, 1804.0], [1.701263281E12, 634.0], [1.70126324E12, 1481.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.701263226E12, 3627.0], [1.701263312E12, 56060.0], [1.701263222E12, 1943.0], [1.701263265E12, 490.0], [1.701263308E12, 57806.0], [1.701263394E12, 29543.0], [1.701263224E12, 2634.0], [1.70126323E12, 1993.0], [1.701263232E12, 2056.0], [1.701263228E12, 4567.0], [1.701263214E12, 1004.0], [1.7012633E12, 45432.0], [1.701263216E12, 580.0], [1.701263212E12, 1093.0], [1.701263255E12, 31964.0], [1.701263347E12, 34060.0], [1.70126322E12, 2704.0], [1.701263345E12, 32200.0], [1.701263218E12, 1444.0], [1.701263374E12, 31779.0], [1.701263247E12, 1278.0], [1.70126329E12, 28236.0], [1.701263243E12, 1085.0], [1.701263245E12, 1276.0], [1.701263251E12, 33025.0], [1.701263253E12, 1168.0], [1.701263249E12, 1241.0], [1.701263235E12, 1500.0], [1.701263237E12, 1416.0], [1.70126328E12, 713.0], [1.701263233E12, 1449.0], [1.701263241E12, 1313.0], [1.701263284E12, 1592.0], [1.701263327E12, 37206.0], [1.701263239E12, 2009.0], [1.701263282E12, 795.0], [1.701263225E12, 2866.0], [1.701263311E12, 59411.0], [1.701263393E12, 29643.0], [1.701263223E12, 2483.0], [1.701263309E12, 24502.0], [1.701263231E12, 2105.0], [1.701263227E12, 2374.0], [1.701263399E12, 25011.0], [1.701263229E12, 2806.0], [1.701263215E12, 1890.0], [1.701263301E12, 18033.0], [1.701263211E12, 1243.0], [1.701263254E12, 32480.0], [1.701263213E12, 1227.0], [1.701263256E12, 803.0], [1.701263219E12, 1911.0], [1.701263262E12, 41357.0], [1.701263221E12, 2224.0], [1.701263264E12, 1601.0], [1.701263217E12, 2759.0], [1.701263346E12, 33411.0], [1.701263246E12, 1365.0], [1.701263289E12, 32539.0], [1.701263375E12, 31382.0], [1.701263418E12, 23303.0], [1.701263248E12, 1427.0], [1.701263244E12, 1179.0], [1.701263252E12, 32072.0], [1.701263291E12, 28382.0], [1.70126325E12, 1423.0], [1.701263236E12, 1819.0], [1.701263234E12, 1679.0], [1.701263283E12, 1283.0], [1.701263242E12, 1377.0], [1.701263238E12, 1804.0], [1.701263281E12, 634.0], [1.70126324E12, 1481.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.701263226E12, 2534.0], [1.701263312E12, 21142.0], [1.701263222E12, 1889.0], [1.701263265E12, 442.5], [1.701263308E12, 24444.0], [1.701263394E12, 29543.0], [1.701263224E12, 2554.0], [1.70126323E12, 1876.0], [1.701263232E12, 1559.0], [1.701263228E12, 2182.0], [1.701263214E12, 832.0], [1.7012633E12, 44465.0], [1.701263216E12, 485.0], [1.701263212E12, 1090.0], [1.701263255E12, 30762.0], [1.701263347E12, 33699.0], [1.70126322E12, 2281.5], [1.701263345E12, 31799.0], [1.701263218E12, 1185.0], [1.701263374E12, 31398.0], [1.701263247E12, 864.5], [1.70126329E12, 28236.0], [1.701263243E12, 881.0], [1.701263245E12, 630.0], [1.701263251E12, 1156.0], [1.701263253E12, 1092.0], [1.701263249E12, 885.5], [1.701263235E12, 1419.0], [1.701263237E12, 1256.0], [1.70126328E12, 612.0], [1.701263233E12, 1315.0], [1.701263241E12, 911.0], [1.701263284E12, 1527.5], [1.701263327E12, 37206.0], [1.701263239E12, 1450.0], [1.701263282E12, 705.0], [1.701263225E12, 2140.0], [1.701263311E12, 25095.0], [1.701263393E12, 29484.0], [1.701263223E12, 2300.5], [1.701263309E12, 24502.0], [1.701263231E12, 1366.5], [1.701263227E12, 1820.5], [1.701263399E12, 24782.0], [1.701263229E12, 1537.0], [1.701263215E12, 605.0], [1.701263301E12, 18033.0], [1.701263211E12, 1243.0], [1.701263254E12, 32084.0], [1.701263213E12, 927.5], [1.701263256E12, 770.0], [1.701263219E12, 1248.0], [1.701263262E12, 39669.0], [1.701263221E12, 2082.0], [1.701263264E12, 1540.5], [1.701263217E12, 1957.0], [1.701263346E12, 33184.0], [1.701263246E12, 760.0], [1.701263289E12, 32491.5], [1.701263375E12, 31382.0], [1.701263418E12, 23149.0], [1.701263248E12, 1091.0], [1.701263244E12, 818.0], [1.701263252E12, 1398.0], [1.701263291E12, 28283.5], [1.70126325E12, 1113.0], [1.701263236E12, 1590.0], [1.701263234E12, 1359.5], [1.701263283E12, 1280.5], [1.701263242E12, 1081.0], [1.701263238E12, 1213.5], [1.701263281E12, 521.0], [1.70126324E12, 1021.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.701263226E12, 3627.0], [1.701263312E12, 56060.0], [1.701263222E12, 1943.0], [1.701263265E12, 490.0], [1.701263308E12, 57806.0], [1.701263394E12, 29543.0], [1.701263224E12, 2634.0], [1.70126323E12, 1993.0], [1.701263232E12, 2056.0], [1.701263228E12, 4567.0], [1.701263214E12, 1004.0], [1.7012633E12, 45432.0], [1.701263216E12, 580.0], [1.701263212E12, 1093.0], [1.701263255E12, 31964.0], [1.701263347E12, 34060.0], [1.70126322E12, 2704.0], [1.701263345E12, 32200.0], [1.701263218E12, 1444.0], [1.701263374E12, 31779.0], [1.701263247E12, 1278.0], [1.70126329E12, 28236.0], [1.701263243E12, 1085.0], [1.701263245E12, 1276.0], [1.701263251E12, 33025.0], [1.701263253E12, 1168.0], [1.701263249E12, 1241.0], [1.701263235E12, 1500.0], [1.701263237E12, 1416.0], [1.70126328E12, 713.0], [1.701263233E12, 1449.0], [1.701263241E12, 1313.0], [1.701263284E12, 1592.0], [1.701263327E12, 37206.0], [1.701263239E12, 2009.0], [1.701263282E12, 795.0], [1.701263225E12, 2866.0], [1.701263311E12, 59411.0], [1.701263393E12, 29643.0], [1.701263223E12, 2483.0], [1.701263309E12, 24502.0], [1.701263231E12, 2105.0], [1.701263227E12, 2374.0], [1.701263399E12, 25011.0], [1.701263229E12, 2806.0], [1.701263215E12, 1890.0], [1.701263301E12, 18033.0], [1.701263211E12, 1243.0], [1.701263254E12, 32480.0], [1.701263213E12, 1227.0], [1.701263256E12, 803.0], [1.701263219E12, 1911.0], [1.701263262E12, 41345.2], [1.701263221E12, 2224.0], [1.701263264E12, 1601.0], [1.701263217E12, 2759.0], [1.701263346E12, 33411.0], [1.701263246E12, 1365.0], [1.701263289E12, 32539.0], [1.701263375E12, 31382.0], [1.701263418E12, 23303.0], [1.701263248E12, 1427.0], [1.701263244E12, 1179.0], [1.701263252E12, 32072.0], [1.701263291E12, 28382.0], [1.70126325E12, 1423.0], [1.701263236E12, 1819.0], [1.701263234E12, 1679.0], [1.701263283E12, 1283.0], [1.701263242E12, 1377.0], [1.701263238E12, 1804.0], [1.701263281E12, 634.0], [1.70126324E12, 1481.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.701263418E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 45.0, "minX": 1.0, "maxY": 60038.0, "series": [{"data": [[2.0, 725.0], [3.0, 733.0], [4.0, 1382.5], [5.0, 1475.5], [6.0, 1820.5], [7.0, 1282.5], [8.0, 1323.0], [9.0, 1215.5], [146.0, 18033.0], [10.0, 1228.0], [166.0, 24444.0], [163.0, 24502.0], [11.0, 2296.0], [177.0, 25095.0], [188.0, 21142.0], [12.0, 1568.5], [13.0, 1957.0], [14.0, 2082.0], [1.0, 14739.5], [16.0, 2182.0], [256.0, 29543.0], [19.0, 37206.0], [310.0, 29484.0], [20.0, 31398.0], [21.0, 39669.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 60025.0], [3.0, 60025.0], [4.0, 60027.5], [5.0, 32528.0], [7.0, 32252.0], [8.0, 32138.0], [10.0, 30520.0], [11.0, 60027.0], [12.0, 9681.5], [14.0, 60025.5], [17.0, 60038.0], [19.0, 45.0], [20.0, 50.0], [22.0, 45.0], [27.0, 37289.0], [106.0, 48.0], [114.0, 101.0], [113.0, 47.0], [116.0, 46.0], [146.0, 51.0], [155.0, 45.0], [157.0, 45.0], [160.0, 46.0], [161.0, 45.0], [166.0, 46.0], [163.0, 46.0], [167.0, 48.0], [177.0, 46.0], [188.0, 46.0], [199.0, 47.0], [201.0, 46.0], [205.0, 47.0], [207.0, 47.0], [215.0, 47.0], [214.0, 48.0], [213.0, 47.0], [217.0, 47.0], [221.0, 47.0], [235.0, 46.0], [239.0, 46.0], [240.0, 47.0], [245.0, 46.0], [241.0, 46.0], [249.0, 47.0], [250.0, 47.0], [254.0, 48.0], [251.0, 47.0], [255.0, 104.0], [1.0, 47150.5], [258.0, 46.0], [256.0, 47.0], [276.0, 48.0], [288.0, 49.0], [292.0, 48.0], [301.0, 47.0], [296.0, 48.0], [299.0, 48.0], [300.0, 49.0], [290.0, 48.0], [312.0, 49.0], [308.0, 49.0], [304.0, 47.0], [310.0, 48.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 312.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 39545.0, "series": [{"data": [[2.0, 662.0], [3.0, 669.0], [4.0, 1318.0], [5.0, 1391.0], [6.0, 1744.5], [7.0, 1111.5], [8.0, 1219.0], [9.0, 995.0], [146.0, 17933.0], [10.0, 1129.5], [166.0, 24360.0], [163.0, 24441.0], [11.0, 2230.5], [177.0, 24975.0], [188.0, 20990.0], [12.0, 1483.5], [13.0, 1887.0], [14.0, 2017.0], [1.0, 14525.0], [16.0, 2115.0], [256.0, 28912.0], [19.0, 37142.0], [310.0, 29029.0], [20.0, 30243.0], [21.0, 39545.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 0.0], [3.0, 0.0], [4.0, 0.0], [5.0, 32439.0], [7.0, 32252.0], [8.0, 32138.0], [10.0, 30520.0], [11.0, 0.0], [12.0, 0.0], [14.0, 0.0], [17.0, 0.0], [19.0, 45.0], [20.0, 50.0], [22.0, 45.0], [27.0, 37289.0], [106.0, 48.0], [114.0, 101.0], [113.0, 47.0], [116.0, 46.0], [146.0, 50.0], [155.0, 45.0], [157.0, 44.0], [160.0, 46.0], [161.0, 45.0], [166.0, 46.0], [163.0, 46.0], [167.0, 48.0], [177.0, 46.0], [188.0, 46.0], [199.0, 47.0], [201.0, 46.0], [205.0, 47.0], [207.0, 47.0], [215.0, 47.0], [214.0, 48.0], [213.0, 47.0], [217.0, 47.0], [221.0, 47.0], [235.0, 46.0], [239.0, 46.0], [240.0, 47.0], [245.0, 46.0], [241.0, 46.0], [249.0, 47.0], [250.0, 47.0], [254.0, 48.0], [251.0, 47.0], [255.0, 104.0], [1.0, 541.0], [258.0, 46.0], [256.0, 47.0], [276.0, 48.0], [288.0, 49.0], [292.0, 48.0], [301.0, 47.0], [296.0, 48.0], [299.0, 48.0], [300.0, 49.0], [290.0, 48.0], [312.0, 49.0], [308.0, 49.0], [304.0, 47.0], [310.0, 48.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 312.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.70126321E12, "maxY": 305.0, "series": [{"data": [[1.70126331E12, 167.0], [1.701263265E12, 2.0], [1.701263351E12, 160.0], [1.701263224E12, 21.0], [1.701263359E12, 248.0], [1.701263232E12, 12.0], [1.701263355E12, 241.0], [1.701263228E12, 16.0], [1.701263314E12, 1.0], [1.701263257E12, 5.0], [1.701263343E12, 151.0], [1.701263216E12, 7.0], [1.701263339E12, 215.0], [1.701263212E12, 4.0], [1.701263384E12, 290.0], [1.701263347E12, 5.0], [1.70126322E12, 13.0], [1.701263306E12, 159.0], [1.701263392E12, 302.0], [1.701263302E12, 153.0], [1.701263388E12, 297.0], [1.701263331E12, 201.0], [1.70126329E12, 1.0], [1.701263286E12, 14.0], [1.701263245E12, 8.0], [1.701263294E12, 3.0], [1.701263253E12, 7.0], [1.701263249E12, 6.0], [1.701263335E12, 209.0], [1.701263364E12, 134.0], [1.701263237E12, 9.0], [1.701263233E12, 8.0], [1.701263241E12, 8.0], [1.701263327E12, 19.0], [1.701263282E12, 5.0], [1.701263395E12, 20.0], [1.701263354E12, 240.0], [1.701263223E12, 23.0], [1.701263309E12, 163.0], [1.701263358E12, 245.0], [1.701263231E12, 10.0], [1.701263227E12, 6.0], [1.701263313E12, 146.0], [1.701263342E12, 220.0], [1.701263215E12, 7.0], [1.701263301E12, 145.0], [1.701263211E12, 3.0], [1.701263383E12, 287.0], [1.701263256E12, 2.0], [1.701263219E12, 7.0], [1.701263305E12, 159.0], [1.701263391E12, 301.0], [1.701263264E12, 8.0], [1.701263387E12, 295.0], [1.701263346E12, 3.0], [1.701263289E12, 4.0], [1.701263375E12, 3.0], [1.701263248E12, 7.0], [1.701263244E12, 10.0], [1.70126333E12, 114.0], [1.701263252E12, 8.0], [1.701263338E12, 211.0], [1.701263334E12, 203.0], [1.701263363E12, 254.0], [1.701263236E12, 10.0], [1.701263322E12, 1.0], [1.701263285E12, 17.0], [1.701263281E12, 3.0], [1.70126324E12, 9.0], [1.701263353E12, 238.0], [1.701263226E12, 21.0], [1.701263312E12, 170.0], [1.701263222E12, 21.0], [1.701263308E12, 163.0], [1.701263394E12, 248.0], [1.70126323E12, 7.0], [1.701263357E12, 243.0], [1.701263214E12, 6.0], [1.7012633E12, 8.0], [1.701263386E12, 292.0], [1.701263382E12, 285.0], [1.701263255E12, 6.0], [1.701263341E12, 217.0], [1.70126339E12, 300.0], [1.701263345E12, 11.0], [1.701263218E12, 14.0], [1.701263304E12, 157.0], [1.701263374E12, 20.0], [1.701263247E12, 10.0], [1.701263333E12, 204.0], [1.701263243E12, 9.0], [1.701263329E12, 22.0], [1.701263288E12, 3.0], [1.701263251E12, 8.0], [1.701263337E12, 211.0], [1.70126321E12, 1.0], [1.701263235E12, 5.0], [1.70126328E12, 2.0], [1.701263362E12, 253.0], [1.701263284E12, 11.0], [1.701263239E12, 10.0], [1.701263225E12, 24.0], [1.701263311E12, 168.0], [1.701263307E12, 161.0], [1.701263393E12, 305.0], [1.701263352E12, 236.0], [1.701263315E12, 2.0], [1.70126336E12, 249.0], [1.701263356E12, 242.0], [1.701263229E12, 11.0], [1.701263299E12, 2.0], [1.701263385E12, 290.0], [1.701263344E12, 1.0], [1.701263254E12, 5.0], [1.70126334E12, 216.0], [1.701263213E12, 6.0], [1.701263262E12, 21.0], [1.701263221E12, 19.0], [1.701263217E12, 13.0], [1.701263303E12, 155.0], [1.701263389E12, 297.0], [1.701263246E12, 10.0], [1.701263332E12, 202.0], [1.701263287E12, 1.0], [1.701263295E12, 1.0], [1.701263381E12, 255.0], [1.701263291E12, 6.0], [1.70126325E12, 8.0], [1.701263336E12, 209.0], [1.701263279E12, 1.0], [1.701263361E12, 251.0], [1.701263234E12, 12.0], [1.701263283E12, 4.0], [1.701263242E12, 11.0], [1.701263328E12, 22.0], [1.701263238E12, 6.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.701263395E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.701263211E12, "maxY": 312.0, "series": [{"data": [[1.701263226E12, 11.0], [1.701263312E12, 17.0], [1.701263222E12, 9.0], [1.701263265E12, 2.0], [1.701263308E12, 3.0], [1.701263394E12, 1.0], [1.701263224E12, 7.0], [1.70126323E12, 7.0], [1.701263232E12, 12.0], [1.701263228E12, 16.0], [1.701263214E12, 3.0], [1.7012633E12, 8.0], [1.701263216E12, 3.0], [1.701263212E12, 2.0], [1.701263255E12, 6.0], [1.701263347E12, 5.0], [1.70126322E12, 10.0], [1.701263345E12, 11.0], [1.701263218E12, 7.0], [1.701263374E12, 19.0], [1.701263247E12, 10.0], [1.70126329E12, 1.0], [1.701263243E12, 9.0], [1.701263245E12, 8.0], [1.701263251E12, 7.0], [1.701263253E12, 6.0], [1.701263249E12, 6.0], [1.701263235E12, 5.0], [1.701263237E12, 9.0], [1.70126328E12, 2.0], [1.701263233E12, 8.0], [1.701263241E12, 8.0], [1.701263284E12, 2.0], [1.701263327E12, 1.0], [1.701263239E12, 10.0], [1.701263282E12, 3.0], [1.701263225E12, 6.0], [1.701263311E12, 6.0], [1.701263393E12, 5.0], [1.701263223E12, 8.0], [1.701263309E12, 1.0], [1.701263231E12, 10.0], [1.701263227E12, 6.0], [1.701263399E12, 10.0], [1.701263229E12, 11.0], [1.701263215E12, 6.0], [1.701263301E12, 1.0], [1.701263211E12, 1.0], [1.701263254E12, 5.0], [1.701263213E12, 6.0], [1.701263256E12, 2.0], [1.701263219E12, 4.0], [1.701263262E12, 21.0], [1.701263221E12, 14.0], [1.701263264E12, 8.0], [1.701263217E12, 13.0], [1.701263346E12, 3.0], [1.701263246E12, 10.0], [1.701263289E12, 2.0], [1.701263375E12, 1.0], [1.701263418E12, 6.0], [1.701263248E12, 7.0], [1.701263244E12, 10.0], [1.701263252E12, 8.0], [1.701263291E12, 6.0], [1.70126325E12, 8.0], [1.701263236E12, 10.0], [1.701263234E12, 12.0], [1.701263283E12, 2.0], [1.701263242E12, 11.0], [1.701263238E12, 6.0], [1.701263281E12, 2.0], [1.70126324E12, 9.0]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.701263289E12, 2.0], [1.701263311E12, 3.0], [1.701263312E12, 1.0], [1.701263286E12, 12.0], [1.701263287E12, 1.0], [1.701263288E12, 3.0], [1.701263294E12, 3.0], [1.701263315E12, 2.0], [1.701263314E12, 1.0], [1.701263299E12, 2.0], [1.701263279E12, 1.0], [1.701263283E12, 2.0], [1.701263284E12, 9.0], [1.701263285E12, 17.0], [1.701263302E12, 1.0], [1.701263281E12, 1.0], [1.701263282E12, 2.0]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketTimeoutException", "isController": false}, {"data": [[1.701263257E12, 5.0], [1.701263322E12, 1.0], [1.701263286E12, 1.0], [1.701263251E12, 1.0], [1.701263295E12, 1.0], [1.701263253E12, 1.0]], "isOverall": false, "label": "500", "isController": false}, {"data": [[1.701263392E12, 2.0], [1.701263399E12, 2.0]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.conn.HttpHostConnectException", "isController": false}, {"data": [[1.70126331E12, 167.0], [1.701263353E12, 235.0], [1.701263312E12, 170.0], [1.701263308E12, 163.0], [1.701263351E12, 160.0], [1.701263394E12, 255.0], [1.701263359E12, 245.0], [1.701263355E12, 245.0], [1.701263357E12, 241.0], [1.701263343E12, 113.0], [1.701263386E12, 301.0], [1.701263339E12, 213.0], [1.701263382E12, 312.0], [1.701263341E12, 217.0], [1.701263384E12, 292.0], [1.70126339E12, 290.0], [1.701263306E12, 160.0], [1.701263392E12, 302.0], [1.701263302E12, 159.0], [1.701263388E12, 299.0], [1.701263304E12, 157.0], [1.701263331E12, 240.0], [1.701263374E12, 1.0], [1.701263333E12, 205.0], [1.701263286E12, 1.0], [1.701263329E12, 22.0], [1.701263337E12, 207.0], [1.701263335E12, 207.0], [1.701263364E12, 116.0], [1.701263362E12, 254.0], [1.701263405E12, 10.0], [1.701263327E12, 18.0], [1.701263395E12, 22.0], [1.701263311E12, 168.0], [1.701263354E12, 239.0], [1.701263307E12, 161.0], [1.701263393E12, 305.0], [1.701263309E12, 162.0], [1.701263352E12, 258.0], [1.701263358E12, 249.0], [1.701263401E12, 27.0], [1.70126336E12, 250.0], [1.701263313E12, 106.0], [1.701263356E12, 241.0], [1.701263342E12, 221.0], [1.701263385E12, 276.0], [1.701263301E12, 145.0], [1.701263344E12, 1.0], [1.70126334E12, 217.0], [1.701263383E12, 288.0], [1.701263305E12, 160.0], [1.701263391E12, 308.0], [1.701263387E12, 296.0], [1.701263303E12, 155.0], [1.701263389E12, 300.0], [1.701263332E12, 201.0], [1.701263375E12, 2.0], [1.70126333E12, 114.0], [1.701263338E12, 214.0], [1.701263381E12, 255.0], [1.701263334E12, 199.0], [1.701263336E12, 215.0], [1.701263363E12, 251.0], [1.701263361E12, 250.0], [1.701263328E12, 22.0]], "isOverall": false, "label": "502", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.701263418E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.701263211E12, "maxY": 312.0, "series": [{"data": [[1.701263226E12, 11.0], [1.701263312E12, 17.0], [1.701263222E12, 9.0], [1.701263265E12, 2.0], [1.701263308E12, 3.0], [1.701263394E12, 1.0], [1.701263224E12, 7.0], [1.70126323E12, 7.0], [1.701263232E12, 12.0], [1.701263228E12, 16.0], [1.701263214E12, 3.0], [1.7012633E12, 8.0], [1.701263216E12, 3.0], [1.701263212E12, 2.0], [1.701263255E12, 6.0], [1.701263347E12, 5.0], [1.70126322E12, 10.0], [1.701263345E12, 11.0], [1.701263218E12, 7.0], [1.701263374E12, 19.0], [1.701263247E12, 10.0], [1.70126329E12, 1.0], [1.701263243E12, 9.0], [1.701263245E12, 8.0], [1.701263251E12, 7.0], [1.701263253E12, 6.0], [1.701263249E12, 6.0], [1.701263235E12, 5.0], [1.701263237E12, 9.0], [1.70126328E12, 2.0], [1.701263233E12, 8.0], [1.701263241E12, 8.0], [1.701263284E12, 2.0], [1.701263327E12, 1.0], [1.701263239E12, 10.0], [1.701263282E12, 3.0], [1.701263225E12, 6.0], [1.701263311E12, 6.0], [1.701263393E12, 5.0], [1.701263223E12, 8.0], [1.701263309E12, 1.0], [1.701263231E12, 10.0], [1.701263227E12, 6.0], [1.701263399E12, 10.0], [1.701263229E12, 11.0], [1.701263215E12, 6.0], [1.701263301E12, 1.0], [1.701263211E12, 1.0], [1.701263254E12, 5.0], [1.701263213E12, 6.0], [1.701263256E12, 2.0], [1.701263219E12, 4.0], [1.701263262E12, 21.0], [1.701263221E12, 14.0], [1.701263264E12, 8.0], [1.701263217E12, 13.0], [1.701263346E12, 3.0], [1.701263246E12, 10.0], [1.701263289E12, 2.0], [1.701263375E12, 1.0], [1.701263418E12, 6.0], [1.701263248E12, 7.0], [1.701263244E12, 10.0], [1.701263252E12, 8.0], [1.701263291E12, 6.0], [1.70126325E12, 8.0], [1.701263236E12, 10.0], [1.701263234E12, 12.0], [1.701263283E12, 2.0], [1.701263242E12, 11.0], [1.701263238E12, 6.0], [1.701263281E12, 2.0], [1.70126324E12, 9.0]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.70126331E12, 167.0], [1.701263353E12, 235.0], [1.701263312E12, 171.0], [1.701263308E12, 163.0], [1.701263351E12, 160.0], [1.701263394E12, 255.0], [1.701263359E12, 245.0], [1.701263355E12, 245.0], [1.701263314E12, 1.0], [1.701263357E12, 241.0], [1.701263257E12, 5.0], [1.701263343E12, 113.0], [1.701263386E12, 301.0], [1.701263339E12, 213.0], [1.701263382E12, 312.0], [1.701263341E12, 217.0], [1.701263384E12, 292.0], [1.70126339E12, 290.0], [1.701263306E12, 160.0], [1.701263392E12, 304.0], [1.701263302E12, 160.0], [1.701263388E12, 299.0], [1.701263304E12, 157.0], [1.701263331E12, 240.0], [1.701263374E12, 1.0], [1.701263333E12, 205.0], [1.701263286E12, 14.0], [1.701263329E12, 22.0], [1.701263288E12, 3.0], [1.701263251E12, 1.0], [1.701263294E12, 3.0], [1.701263337E12, 207.0], [1.701263253E12, 1.0], [1.701263335E12, 207.0], [1.701263364E12, 116.0], [1.701263362E12, 254.0], [1.701263405E12, 10.0], [1.701263284E12, 9.0], [1.701263327E12, 18.0], [1.701263282E12, 2.0], [1.701263395E12, 22.0], [1.701263311E12, 171.0], [1.701263354E12, 239.0], [1.701263307E12, 161.0], [1.701263393E12, 305.0], [1.701263309E12, 162.0], [1.701263352E12, 258.0], [1.701263315E12, 2.0], [1.701263358E12, 249.0], [1.701263401E12, 27.0], [1.70126336E12, 250.0], [1.701263313E12, 106.0], [1.701263356E12, 241.0], [1.701263399E12, 2.0], [1.701263299E12, 2.0], [1.701263342E12, 221.0], [1.701263385E12, 276.0], [1.701263301E12, 145.0], [1.701263344E12, 1.0], [1.70126334E12, 217.0], [1.701263383E12, 288.0], [1.701263305E12, 160.0], [1.701263391E12, 308.0], [1.701263387E12, 296.0], [1.701263303E12, 155.0], [1.701263389E12, 300.0], [1.701263289E12, 2.0], [1.701263332E12, 201.0], [1.701263375E12, 2.0], [1.701263287E12, 1.0], [1.70126333E12, 114.0], [1.701263295E12, 1.0], [1.701263338E12, 214.0], [1.701263381E12, 255.0], [1.701263334E12, 199.0], [1.701263336E12, 215.0], [1.701263363E12, 251.0], [1.701263279E12, 1.0], [1.701263322E12, 1.0], [1.701263361E12, 250.0], [1.701263283E12, 2.0], [1.701263285E12, 17.0], [1.701263328E12, 22.0], [1.701263281E12, 1.0]], "isOverall": false, "label": "HTTP Request-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.701263418E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.701263211E12, "maxY": 312.0, "series": [{"data": [[1.701263226E12, 11.0], [1.701263312E12, 17.0], [1.701263222E12, 9.0], [1.701263265E12, 2.0], [1.701263308E12, 3.0], [1.701263394E12, 1.0], [1.701263224E12, 7.0], [1.70126323E12, 7.0], [1.701263232E12, 12.0], [1.701263228E12, 16.0], [1.701263214E12, 3.0], [1.7012633E12, 8.0], [1.701263216E12, 3.0], [1.701263212E12, 2.0], [1.701263255E12, 6.0], [1.701263347E12, 5.0], [1.70126322E12, 10.0], [1.701263345E12, 11.0], [1.701263218E12, 7.0], [1.701263374E12, 19.0], [1.701263247E12, 10.0], [1.70126329E12, 1.0], [1.701263243E12, 9.0], [1.701263245E12, 8.0], [1.701263251E12, 7.0], [1.701263253E12, 6.0], [1.701263249E12, 6.0], [1.701263235E12, 5.0], [1.701263237E12, 9.0], [1.70126328E12, 2.0], [1.701263233E12, 8.0], [1.701263241E12, 8.0], [1.701263284E12, 2.0], [1.701263327E12, 1.0], [1.701263239E12, 10.0], [1.701263282E12, 3.0], [1.701263225E12, 6.0], [1.701263311E12, 6.0], [1.701263393E12, 5.0], [1.701263223E12, 8.0], [1.701263309E12, 1.0], [1.701263231E12, 10.0], [1.701263227E12, 6.0], [1.701263399E12, 10.0], [1.701263229E12, 11.0], [1.701263215E12, 6.0], [1.701263301E12, 1.0], [1.701263211E12, 1.0], [1.701263254E12, 5.0], [1.701263213E12, 6.0], [1.701263256E12, 2.0], [1.701263219E12, 4.0], [1.701263262E12, 21.0], [1.701263221E12, 14.0], [1.701263264E12, 8.0], [1.701263217E12, 13.0], [1.701263346E12, 3.0], [1.701263246E12, 10.0], [1.701263289E12, 2.0], [1.701263375E12, 1.0], [1.701263418E12, 6.0], [1.701263248E12, 7.0], [1.701263244E12, 10.0], [1.701263252E12, 8.0], [1.701263291E12, 6.0], [1.70126325E12, 8.0], [1.701263236E12, 10.0], [1.701263234E12, 12.0], [1.701263283E12, 2.0], [1.701263242E12, 11.0], [1.701263238E12, 6.0], [1.701263281E12, 2.0], [1.70126324E12, 9.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.70126331E12, 167.0], [1.701263353E12, 235.0], [1.701263312E12, 171.0], [1.701263308E12, 163.0], [1.701263351E12, 160.0], [1.701263394E12, 255.0], [1.701263359E12, 245.0], [1.701263355E12, 245.0], [1.701263314E12, 1.0], [1.701263357E12, 241.0], [1.701263257E12, 5.0], [1.701263343E12, 113.0], [1.701263386E12, 301.0], [1.701263339E12, 213.0], [1.701263382E12, 312.0], [1.701263341E12, 217.0], [1.701263384E12, 292.0], [1.70126339E12, 290.0], [1.701263306E12, 160.0], [1.701263392E12, 304.0], [1.701263302E12, 160.0], [1.701263388E12, 299.0], [1.701263304E12, 157.0], [1.701263331E12, 240.0], [1.701263374E12, 1.0], [1.701263333E12, 205.0], [1.701263286E12, 14.0], [1.701263329E12, 22.0], [1.701263288E12, 3.0], [1.701263251E12, 1.0], [1.701263294E12, 3.0], [1.701263337E12, 207.0], [1.701263253E12, 1.0], [1.701263335E12, 207.0], [1.701263364E12, 116.0], [1.701263362E12, 254.0], [1.701263405E12, 10.0], [1.701263284E12, 9.0], [1.701263327E12, 18.0], [1.701263282E12, 2.0], [1.701263395E12, 22.0], [1.701263311E12, 171.0], [1.701263354E12, 239.0], [1.701263307E12, 161.0], [1.701263393E12, 305.0], [1.701263309E12, 162.0], [1.701263352E12, 258.0], [1.701263315E12, 2.0], [1.701263358E12, 249.0], [1.701263401E12, 27.0], [1.70126336E12, 250.0], [1.701263313E12, 106.0], [1.701263356E12, 241.0], [1.701263399E12, 2.0], [1.701263299E12, 2.0], [1.701263342E12, 221.0], [1.701263385E12, 276.0], [1.701263301E12, 145.0], [1.701263344E12, 1.0], [1.70126334E12, 217.0], [1.701263383E12, 288.0], [1.701263305E12, 160.0], [1.701263391E12, 308.0], [1.701263387E12, 296.0], [1.701263303E12, 155.0], [1.701263389E12, 300.0], [1.701263289E12, 2.0], [1.701263332E12, 201.0], [1.701263375E12, 2.0], [1.701263287E12, 1.0], [1.70126333E12, 114.0], [1.701263295E12, 1.0], [1.701263338E12, 214.0], [1.701263381E12, 255.0], [1.701263334E12, 199.0], [1.701263336E12, 215.0], [1.701263363E12, 251.0], [1.701263279E12, 1.0], [1.701263322E12, 1.0], [1.701263361E12, 250.0], [1.701263283E12, 2.0], [1.701263285E12, 17.0], [1.701263328E12, 22.0], [1.701263281E12, 1.0]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.701263418E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

