/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 109.0, "minX": 0.0, "maxY": 1257.0, "series": [{"data": [[0.0, 109.0], [0.1, 111.0], [0.2, 111.0], [0.3, 112.0], [0.4, 112.0], [0.5, 112.0], [0.6, 113.0], [0.7, 113.0], [0.8, 113.0], [0.9, 113.0], [1.0, 113.0], [1.1, 113.0], [1.2, 113.0], [1.3, 114.0], [1.4, 114.0], [1.5, 114.0], [1.6, 114.0], [1.7, 114.0], [1.8, 114.0], [1.9, 114.0], [2.0, 114.0], [2.1, 114.0], [2.2, 114.0], [2.3, 115.0], [2.4, 115.0], [2.5, 115.0], [2.6, 115.0], [2.7, 115.0], [2.8, 115.0], [2.9, 115.0], [3.0, 115.0], [3.1, 115.0], [3.2, 115.0], [3.3, 115.0], [3.4, 115.0], [3.5, 115.0], [3.6, 115.0], [3.7, 115.0], [3.8, 115.0], [3.9, 115.0], [4.0, 116.0], [4.1, 116.0], [4.2, 116.0], [4.3, 116.0], [4.4, 116.0], [4.5, 116.0], [4.6, 116.0], [4.7, 116.0], [4.8, 116.0], [4.9, 116.0], [5.0, 116.0], [5.1, 116.0], [5.2, 116.0], [5.3, 116.0], [5.4, 116.0], [5.5, 116.0], [5.6, 116.0], [5.7, 116.0], [5.8, 116.0], [5.9, 116.0], [6.0, 116.0], [6.1, 116.0], [6.2, 116.0], [6.3, 117.0], [6.4, 117.0], [6.5, 117.0], [6.6, 117.0], [6.7, 117.0], [6.8, 117.0], [6.9, 117.0], [7.0, 117.0], [7.1, 117.0], [7.2, 117.0], [7.3, 117.0], [7.4, 117.0], [7.5, 117.0], [7.6, 117.0], [7.7, 117.0], [7.8, 117.0], [7.9, 117.0], [8.0, 117.0], [8.1, 117.0], [8.2, 117.0], [8.3, 117.0], [8.4, 117.0], [8.5, 117.0], [8.6, 117.0], [8.7, 117.0], [8.8, 118.0], [8.9, 118.0], [9.0, 118.0], [9.1, 118.0], [9.2, 118.0], [9.3, 118.0], [9.4, 118.0], [9.5, 118.0], [9.6, 118.0], [9.7, 118.0], [9.8, 118.0], [9.9, 118.0], [10.0, 118.0], [10.1, 118.0], [10.2, 118.0], [10.3, 118.0], [10.4, 118.0], [10.5, 118.0], [10.6, 118.0], [10.7, 118.0], [10.8, 118.0], [10.9, 118.0], [11.0, 118.0], [11.1, 118.0], [11.2, 118.0], [11.3, 118.0], [11.4, 118.0], [11.5, 118.0], [11.6, 119.0], [11.7, 119.0], [11.8, 119.0], [11.9, 119.0], [12.0, 119.0], [12.1, 119.0], [12.2, 119.0], [12.3, 119.0], [12.4, 119.0], [12.5, 119.0], [12.6, 119.0], [12.7, 119.0], [12.8, 119.0], [12.9, 119.0], [13.0, 119.0], [13.1, 119.0], [13.2, 119.0], [13.3, 119.0], [13.4, 119.0], [13.5, 119.0], [13.6, 119.0], [13.7, 119.0], [13.8, 119.0], [13.9, 119.0], [14.0, 119.0], [14.1, 119.0], [14.2, 119.0], [14.3, 119.0], [14.4, 119.0], [14.5, 119.0], [14.6, 120.0], [14.7, 120.0], [14.8, 120.0], [14.9, 120.0], [15.0, 120.0], [15.1, 120.0], [15.2, 120.0], [15.3, 120.0], [15.4, 120.0], [15.5, 120.0], [15.6, 120.0], [15.7, 120.0], [15.8, 120.0], [15.9, 120.0], [16.0, 120.0], [16.1, 120.0], [16.2, 120.0], [16.3, 120.0], [16.4, 120.0], [16.5, 120.0], [16.6, 120.0], [16.7, 120.0], [16.8, 120.0], [16.9, 120.0], [17.0, 120.0], [17.1, 120.0], [17.2, 120.0], [17.3, 120.0], [17.4, 120.0], [17.5, 120.0], [17.6, 120.0], [17.7, 121.0], [17.8, 121.0], [17.9, 121.0], [18.0, 121.0], [18.1, 121.0], [18.2, 121.0], [18.3, 121.0], [18.4, 121.0], [18.5, 121.0], [18.6, 121.0], [18.7, 121.0], [18.8, 121.0], [18.9, 121.0], [19.0, 121.0], [19.1, 121.0], [19.2, 121.0], [19.3, 121.0], [19.4, 121.0], [19.5, 121.0], [19.6, 121.0], [19.7, 121.0], [19.8, 121.0], [19.9, 121.0], [20.0, 121.0], [20.1, 121.0], [20.2, 121.0], [20.3, 121.0], [20.4, 121.0], [20.5, 121.0], [20.6, 121.0], [20.7, 122.0], [20.8, 122.0], [20.9, 122.0], [21.0, 122.0], [21.1, 122.0], [21.2, 122.0], [21.3, 122.0], [21.4, 122.0], [21.5, 122.0], [21.6, 122.0], [21.7, 122.0], [21.8, 122.0], [21.9, 122.0], [22.0, 122.0], [22.1, 122.0], [22.2, 122.0], [22.3, 122.0], [22.4, 122.0], [22.5, 122.0], [22.6, 122.0], [22.7, 122.0], [22.8, 122.0], [22.9, 122.0], [23.0, 122.0], [23.1, 122.0], [23.2, 122.0], [23.3, 122.0], [23.4, 122.0], [23.5, 123.0], [23.6, 123.0], [23.7, 123.0], [23.8, 123.0], [23.9, 123.0], [24.0, 123.0], [24.1, 123.0], [24.2, 123.0], [24.3, 123.0], [24.4, 123.0], [24.5, 123.0], [24.6, 123.0], [24.7, 123.0], [24.8, 123.0], [24.9, 123.0], [25.0, 123.0], [25.1, 123.0], [25.2, 123.0], [25.3, 123.0], [25.4, 123.0], [25.5, 123.0], [25.6, 123.0], [25.7, 123.0], [25.8, 123.0], [25.9, 123.0], [26.0, 123.0], [26.1, 123.0], [26.2, 123.0], [26.3, 123.0], [26.4, 124.0], [26.5, 124.0], [26.6, 124.0], [26.7, 124.0], [26.8, 124.0], [26.9, 124.0], [27.0, 124.0], [27.1, 124.0], [27.2, 124.0], [27.3, 124.0], [27.4, 124.0], [27.5, 124.0], [27.6, 124.0], [27.7, 124.0], [27.8, 124.0], [27.9, 124.0], [28.0, 124.0], [28.1, 124.0], [28.2, 124.0], [28.3, 124.0], [28.4, 124.0], [28.5, 124.0], [28.6, 124.0], [28.7, 124.0], [28.8, 125.0], [28.9, 125.0], [29.0, 125.0], [29.1, 125.0], [29.2, 125.0], [29.3, 125.0], [29.4, 125.0], [29.5, 125.0], [29.6, 125.0], [29.7, 125.0], [29.8, 125.0], [29.9, 125.0], [30.0, 125.0], [30.1, 125.0], [30.2, 125.0], [30.3, 125.0], [30.4, 125.0], [30.5, 125.0], [30.6, 125.0], [30.7, 125.0], [30.8, 125.0], [30.9, 125.0], [31.0, 125.0], [31.1, 126.0], [31.2, 126.0], [31.3, 126.0], [31.4, 126.0], [31.5, 126.0], [31.6, 126.0], [31.7, 126.0], [31.8, 126.0], [31.9, 126.0], [32.0, 126.0], [32.1, 126.0], [32.2, 126.0], [32.3, 126.0], [32.4, 126.0], [32.5, 126.0], [32.6, 126.0], [32.7, 126.0], [32.8, 126.0], [32.9, 126.0], [33.0, 126.0], [33.1, 127.0], [33.2, 127.0], [33.3, 127.0], [33.4, 127.0], [33.5, 127.0], [33.6, 127.0], [33.7, 127.0], [33.8, 127.0], [33.9, 127.0], [34.0, 127.0], [34.1, 127.0], [34.2, 127.0], [34.3, 127.0], [34.4, 127.0], [34.5, 127.0], [34.6, 127.0], [34.7, 127.0], [34.8, 127.0], [34.9, 128.0], [35.0, 128.0], [35.1, 128.0], [35.2, 128.0], [35.3, 128.0], [35.4, 128.0], [35.5, 128.0], [35.6, 128.0], [35.7, 128.0], [35.8, 128.0], [35.9, 128.0], [36.0, 128.0], [36.1, 128.0], [36.2, 128.0], [36.3, 128.0], [36.4, 128.0], [36.5, 129.0], [36.6, 129.0], [36.7, 129.0], [36.8, 129.0], [36.9, 129.0], [37.0, 129.0], [37.1, 129.0], [37.2, 129.0], [37.3, 129.0], [37.4, 129.0], [37.5, 129.0], [37.6, 129.0], [37.7, 129.0], [37.8, 129.0], [37.9, 130.0], [38.0, 130.0], [38.1, 130.0], [38.2, 130.0], [38.3, 130.0], [38.4, 130.0], [38.5, 130.0], [38.6, 130.0], [38.7, 130.0], [38.8, 130.0], [38.9, 130.0], [39.0, 130.0], [39.1, 130.0], [39.2, 131.0], [39.3, 131.0], [39.4, 131.0], [39.5, 131.0], [39.6, 131.0], [39.7, 131.0], [39.8, 131.0], [39.9, 131.0], [40.0, 131.0], [40.1, 131.0], [40.2, 131.0], [40.3, 132.0], [40.4, 132.0], [40.5, 132.0], [40.6, 132.0], [40.7, 132.0], [40.8, 132.0], [40.9, 132.0], [41.0, 132.0], [41.1, 132.0], [41.2, 133.0], [41.3, 133.0], [41.4, 133.0], [41.5, 133.0], [41.6, 133.0], [41.7, 133.0], [41.8, 133.0], [41.9, 134.0], [42.0, 134.0], [42.1, 134.0], [42.2, 134.0], [42.3, 134.0], [42.4, 134.0], [42.5, 134.0], [42.6, 135.0], [42.7, 135.0], [42.8, 135.0], [42.9, 135.0], [43.0, 135.0], [43.1, 135.0], [43.2, 136.0], [43.3, 136.0], [43.4, 136.0], [43.5, 136.0], [43.6, 137.0], [43.7, 137.0], [43.8, 137.0], [43.9, 137.0], [44.0, 138.0], [44.1, 138.0], [44.2, 138.0], [44.3, 138.0], [44.4, 139.0], [44.5, 139.0], [44.6, 139.0], [44.7, 140.0], [44.8, 140.0], [44.9, 140.0], [45.0, 141.0], [45.1, 141.0], [45.2, 141.0], [45.3, 142.0], [45.4, 142.0], [45.5, 142.0], [45.6, 143.0], [45.7, 143.0], [45.8, 143.0], [45.9, 143.0], [46.0, 144.0], [46.1, 144.0], [46.2, 144.0], [46.3, 145.0], [46.4, 145.0], [46.5, 145.0], [46.6, 145.0], [46.7, 146.0], [46.8, 146.0], [46.9, 146.0], [47.0, 147.0], [47.1, 147.0], [47.2, 147.0], [47.3, 147.0], [47.4, 148.0], [47.5, 148.0], [47.6, 148.0], [47.7, 148.0], [47.8, 149.0], [47.9, 149.0], [48.0, 149.0], [48.1, 149.0], [48.2, 150.0], [48.3, 150.0], [48.4, 150.0], [48.5, 150.0], [48.6, 151.0], [48.7, 151.0], [48.8, 151.0], [48.9, 151.0], [49.0, 151.0], [49.1, 152.0], [49.2, 152.0], [49.3, 152.0], [49.4, 153.0], [49.5, 153.0], [49.6, 153.0], [49.7, 153.0], [49.8, 154.0], [49.9, 154.0], [50.0, 154.0], [50.1, 154.0], [50.2, 155.0], [50.3, 155.0], [50.4, 155.0], [50.5, 156.0], [50.6, 156.0], [50.7, 157.0], [50.8, 157.0], [50.9, 157.0], [51.0, 158.0], [51.1, 158.0], [51.2, 158.0], [51.3, 159.0], [51.4, 159.0], [51.5, 160.0], [51.6, 160.0], [51.7, 161.0], [51.8, 161.0], [51.9, 161.0], [52.0, 162.0], [52.1, 162.0], [52.2, 163.0], [52.3, 163.0], [52.4, 163.0], [52.5, 164.0], [52.6, 164.0], [52.7, 164.0], [52.8, 165.0], [52.9, 165.0], [53.0, 166.0], [53.1, 166.0], [53.2, 166.0], [53.3, 167.0], [53.4, 167.0], [53.5, 167.0], [53.6, 167.0], [53.7, 168.0], [53.8, 168.0], [53.9, 168.0], [54.0, 168.0], [54.1, 169.0], [54.2, 169.0], [54.3, 169.0], [54.4, 169.0], [54.5, 170.0], [54.6, 170.0], [54.7, 170.0], [54.8, 170.0], [54.9, 170.0], [55.0, 171.0], [55.1, 171.0], [55.2, 171.0], [55.3, 171.0], [55.4, 172.0], [55.5, 172.0], [55.6, 172.0], [55.7, 172.0], [55.8, 172.0], [55.9, 173.0], [56.0, 173.0], [56.1, 173.0], [56.2, 173.0], [56.3, 173.0], [56.4, 174.0], [56.5, 174.0], [56.6, 174.0], [56.7, 174.0], [56.8, 174.0], [56.9, 175.0], [57.0, 175.0], [57.1, 175.0], [57.2, 175.0], [57.3, 175.0], [57.4, 176.0], [57.5, 176.0], [57.6, 176.0], [57.7, 176.0], [57.8, 176.0], [57.9, 176.0], [58.0, 177.0], [58.1, 177.0], [58.2, 177.0], [58.3, 177.0], [58.4, 178.0], [58.5, 178.0], [58.6, 178.0], [58.7, 178.0], [58.8, 178.0], [58.9, 179.0], [59.0, 179.0], [59.1, 179.0], [59.2, 180.0], [59.3, 180.0], [59.4, 180.0], [59.5, 181.0], [59.6, 181.0], [59.7, 181.0], [59.8, 182.0], [59.9, 182.0], [60.0, 182.0], [60.1, 183.0], [60.2, 183.0], [60.3, 183.0], [60.4, 184.0], [60.5, 184.0], [60.6, 185.0], [60.7, 185.0], [60.8, 186.0], [60.9, 186.0], [61.0, 186.0], [61.1, 187.0], [61.2, 187.0], [61.3, 188.0], [61.4, 188.0], [61.5, 189.0], [61.6, 189.0], [61.7, 189.0], [61.8, 190.0], [61.9, 190.0], [62.0, 190.0], [62.1, 191.0], [62.2, 191.0], [62.3, 191.0], [62.4, 192.0], [62.5, 192.0], [62.6, 192.0], [62.7, 192.0], [62.8, 193.0], [62.9, 193.0], [63.0, 193.0], [63.1, 193.0], [63.2, 193.0], [63.3, 194.0], [63.4, 194.0], [63.5, 194.0], [63.6, 194.0], [63.7, 195.0], [63.8, 195.0], [63.9, 195.0], [64.0, 195.0], [64.1, 195.0], [64.2, 196.0], [64.3, 196.0], [64.4, 196.0], [64.5, 196.0], [64.6, 196.0], [64.7, 196.0], [64.8, 197.0], [64.9, 197.0], [65.0, 197.0], [65.1, 197.0], [65.2, 197.0], [65.3, 198.0], [65.4, 198.0], [65.5, 198.0], [65.6, 198.0], [65.7, 198.0], [65.8, 198.0], [65.9, 198.0], [66.0, 199.0], [66.1, 199.0], [66.2, 199.0], [66.3, 199.0], [66.4, 199.0], [66.5, 199.0], [66.6, 199.0], [66.7, 200.0], [66.8, 200.0], [66.9, 200.0], [67.0, 200.0], [67.1, 200.0], [67.2, 200.0], [67.3, 201.0], [67.4, 201.0], [67.5, 201.0], [67.6, 201.0], [67.7, 201.0], [67.8, 201.0], [67.9, 202.0], [68.0, 202.0], [68.1, 202.0], [68.2, 202.0], [68.3, 202.0], [68.4, 202.0], [68.5, 203.0], [68.6, 203.0], [68.7, 203.0], [68.8, 203.0], [68.9, 203.0], [69.0, 203.0], [69.1, 204.0], [69.2, 204.0], [69.3, 204.0], [69.4, 204.0], [69.5, 204.0], [69.6, 205.0], [69.7, 205.0], [69.8, 205.0], [69.9, 205.0], [70.0, 206.0], [70.1, 206.0], [70.2, 206.0], [70.3, 206.0], [70.4, 206.0], [70.5, 207.0], [70.6, 207.0], [70.7, 207.0], [70.8, 207.0], [70.9, 208.0], [71.0, 208.0], [71.1, 208.0], [71.2, 208.0], [71.3, 209.0], [71.4, 209.0], [71.5, 209.0], [71.6, 209.0], [71.7, 210.0], [71.8, 210.0], [71.9, 210.0], [72.0, 211.0], [72.1, 211.0], [72.2, 211.0], [72.3, 212.0], [72.4, 212.0], [72.5, 212.0], [72.6, 213.0], [72.7, 213.0], [72.8, 213.0], [72.9, 214.0], [73.0, 214.0], [73.1, 215.0], [73.2, 215.0], [73.3, 215.0], [73.4, 216.0], [73.5, 216.0], [73.6, 216.0], [73.7, 217.0], [73.8, 217.0], [73.9, 218.0], [74.0, 218.0], [74.1, 218.0], [74.2, 219.0], [74.3, 219.0], [74.4, 220.0], [74.5, 220.0], [74.6, 220.0], [74.7, 221.0], [74.8, 221.0], [74.9, 221.0], [75.0, 221.0], [75.1, 222.0], [75.2, 222.0], [75.3, 223.0], [75.4, 223.0], [75.5, 223.0], [75.6, 224.0], [75.7, 224.0], [75.8, 224.0], [75.9, 225.0], [76.0, 225.0], [76.1, 225.0], [76.2, 226.0], [76.3, 226.0], [76.4, 226.0], [76.5, 227.0], [76.6, 227.0], [76.7, 228.0], [76.8, 228.0], [76.9, 228.0], [77.0, 229.0], [77.1, 229.0], [77.2, 230.0], [77.3, 230.0], [77.4, 230.0], [77.5, 231.0], [77.6, 231.0], [77.7, 232.0], [77.8, 232.0], [77.9, 232.0], [78.0, 233.0], [78.1, 233.0], [78.2, 234.0], [78.3, 235.0], [78.4, 235.0], [78.5, 236.0], [78.6, 236.0], [78.7, 237.0], [78.8, 237.0], [78.9, 238.0], [79.0, 238.0], [79.1, 239.0], [79.2, 239.0], [79.3, 240.0], [79.4, 241.0], [79.5, 241.0], [79.6, 242.0], [79.7, 242.0], [79.8, 243.0], [79.9, 244.0], [80.0, 244.0], [80.1, 245.0], [80.2, 245.0], [80.3, 245.0], [80.4, 246.0], [80.5, 247.0], [80.6, 247.0], [80.7, 248.0], [80.8, 249.0], [80.9, 250.0], [81.0, 251.0], [81.1, 251.0], [81.2, 252.0], [81.3, 253.0], [81.4, 254.0], [81.5, 255.0], [81.6, 256.0], [81.7, 257.0], [81.8, 258.0], [81.9, 259.0], [82.0, 260.0], [82.1, 261.0], [82.2, 262.0], [82.3, 262.0], [82.4, 263.0], [82.5, 264.0], [82.6, 264.0], [82.7, 265.0], [82.8, 265.0], [82.9, 266.0], [83.0, 266.0], [83.1, 267.0], [83.2, 267.0], [83.3, 267.0], [83.4, 268.0], [83.5, 268.0], [83.6, 269.0], [83.7, 269.0], [83.8, 270.0], [83.9, 270.0], [84.0, 271.0], [84.1, 271.0], [84.2, 271.0], [84.3, 272.0], [84.4, 273.0], [84.5, 273.0], [84.6, 274.0], [84.7, 274.0], [84.8, 275.0], [84.9, 275.0], [85.0, 276.0], [85.1, 276.0], [85.2, 277.0], [85.3, 277.0], [85.4, 278.0], [85.5, 279.0], [85.6, 280.0], [85.7, 281.0], [85.8, 282.0], [85.9, 283.0], [86.0, 284.0], [86.1, 285.0], [86.2, 287.0], [86.3, 288.0], [86.4, 289.0], [86.5, 290.0], [86.6, 290.0], [86.7, 291.0], [86.8, 291.0], [86.9, 292.0], [87.0, 292.0], [87.1, 293.0], [87.2, 293.0], [87.3, 294.0], [87.4, 294.0], [87.5, 295.0], [87.6, 295.0], [87.7, 295.0], [87.8, 296.0], [87.9, 296.0], [88.0, 297.0], [88.1, 297.0], [88.2, 297.0], [88.3, 298.0], [88.4, 298.0], [88.5, 298.0], [88.6, 299.0], [88.7, 299.0], [88.8, 299.0], [88.9, 299.0], [89.0, 300.0], [89.1, 300.0], [89.2, 301.0], [89.3, 301.0], [89.4, 301.0], [89.5, 302.0], [89.6, 302.0], [89.7, 303.0], [89.8, 303.0], [89.9, 304.0], [90.0, 304.0], [90.1, 304.0], [90.2, 305.0], [90.3, 306.0], [90.4, 306.0], [90.5, 307.0], [90.6, 308.0], [90.7, 309.0], [90.8, 310.0], [90.9, 311.0], [91.0, 312.0], [91.1, 313.0], [91.2, 315.0], [91.3, 316.0], [91.4, 318.0], [91.5, 320.0], [91.6, 321.0], [91.7, 322.0], [91.8, 324.0], [91.9, 325.0], [92.0, 326.0], [92.1, 327.0], [92.2, 328.0], [92.3, 329.0], [92.4, 330.0], [92.5, 331.0], [92.6, 333.0], [92.7, 334.0], [92.8, 335.0], [92.9, 336.0], [93.0, 337.0], [93.1, 339.0], [93.2, 340.0], [93.3, 341.0], [93.4, 343.0], [93.5, 345.0], [93.6, 348.0], [93.7, 349.0], [93.8, 352.0], [93.9, 355.0], [94.0, 358.0], [94.1, 359.0], [94.2, 362.0], [94.3, 365.0], [94.4, 367.0], [94.5, 369.0], [94.6, 370.0], [94.7, 372.0], [94.8, 373.0], [94.9, 375.0], [95.0, 377.0], [95.1, 379.0], [95.2, 382.0], [95.3, 387.0], [95.4, 389.0], [95.5, 392.0], [95.6, 393.0], [95.7, 395.0], [95.8, 396.0], [95.9, 397.0], [96.0, 398.0], [96.1, 400.0], [96.2, 401.0], [96.3, 403.0], [96.4, 404.0], [96.5, 407.0], [96.6, 412.0], [96.7, 416.0], [96.8, 420.0], [96.9, 425.0], [97.0, 428.0], [97.1, 432.0], [97.2, 437.0], [97.3, 440.0], [97.4, 445.0], [97.5, 450.0], [97.6, 454.0], [97.7, 459.0], [97.8, 463.0], [97.9, 471.0], [98.0, 476.0], [98.1, 484.0], [98.2, 492.0], [98.3, 497.0], [98.4, 501.0], [98.5, 507.0], [98.6, 519.0], [98.7, 526.0], [98.8, 533.0], [98.9, 546.0], [99.0, 559.0], [99.1, 570.0], [99.2, 583.0], [99.3, 598.0], [99.4, 618.0], [99.5, 631.0], [99.6, 662.0], [99.7, 712.0], [99.8, 767.0], [99.9, 897.0], [100.0, 1257.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 100.0, "maxY": 16458.0, "series": [{"data": [[300.0, 1777.0], [600.0, 87.0], [1200.0, 1.0], [700.0, 44.0], [100.0, 16458.0], [400.0, 557.0], [200.0, 5503.0], [800.0, 14.0], [900.0, 14.0], [500.0, 238.0], [1000.0, 9.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 1200.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 6.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 24302.0, "series": [{"data": [[0.0, 24302.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 394.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 6.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 100.0, "minX": 1.70169937E12, "maxY": 100.0, "series": [{"data": [[1.70169947E12, 100.0], [1.701699855E12, 100.0], [1.701699425E12, 100.0], [1.70169981E12, 100.0], [1.701699945E12, 100.0], [1.701699605E12, 100.0], [1.701699515E12, 100.0], [1.7016999E12, 100.0], [1.70169956E12, 100.0], [1.70169963E12, 100.0], [1.701700015E12, 100.0], [1.701699585E12, 100.0], [1.70169997E12, 100.0], [1.70169938E12, 100.0], [1.701699765E12, 100.0], [1.701699675E12, 100.0], [1.70169972E12, 100.0], [1.701699875E12, 100.0], [1.701699535E12, 100.0], [1.70169992E12, 100.0], [1.70169983E12, 100.0], [1.70169949E12, 100.0], [1.701699625E12, 100.0], [1.70170001E12, 100.0], [1.70169958E12, 100.0], [1.701699965E12, 100.0], [1.701699695E12, 100.0], [1.70169999E12, 100.0], [1.70169965E12, 100.0], [1.701699785E12, 100.0], [1.701699445E12, 100.0], [1.70169974E12, 100.0], [1.7016994E12, 100.0], [1.701699385E12, 100.0], [1.70169977E12, 100.0], [1.701699725E12, 100.0], [1.701699475E12, 100.0], [1.70169986E12, 100.0], [1.70169952E12, 100.0], [1.70169943E12, 100.0], [1.701699815E12, 100.0], [1.701699545E12, 100.0], [1.70169993E12, 100.0], [1.7016995E12, 100.0], [1.701699885E12, 100.0], [1.701699635E12, 100.0], [1.70170002E12, 100.0], [1.70169968E12, 100.0], [1.70169959E12, 100.0], [1.701699975E12, 100.0], [1.70169979E12, 100.0], [1.70169945E12, 100.0], [1.701699745E12, 100.0], [1.701699405E12, 100.0], [1.70169954E12, 100.0], [1.701699925E12, 100.0], [1.701699835E12, 100.0], [1.701699495E12, 100.0], [1.70169988E12, 100.0], [1.70169995E12, 100.0], [1.70169961E12, 100.0], [1.701699905E12, 100.0], [1.701699565E12, 100.0], [1.7016997E12, 100.0], [1.701699995E12, 100.0], [1.701699655E12, 100.0], [1.701700025E12, 100.0], [1.701699685E12, 100.0], [1.701699595E12, 100.0], [1.70169998E12, 100.0], [1.70169964E12, 100.0], [1.70169939E12, 100.0], [1.701699775E12, 100.0], [1.70169973E12, 100.0], [1.70169946E12, 100.0], [1.701699845E12, 100.0], [1.701699755E12, 100.0], [1.701699415E12, 100.0], [1.7016998E12, 100.0], [1.70169955E12, 100.0], [1.701699935E12, 100.0], [1.701699505E12, 100.0], [1.70169989E12, 100.0], [1.701699705E12, 100.0], [1.70169966E12, 100.0], [1.701699795E12, 100.0], [1.701699455E12, 100.0], [1.70169984E12, 100.0], [1.70169975E12, 100.0], [1.70169941E12, 100.0], [1.701699865E12, 100.0], [1.701699525E12, 100.0], [1.701699435E12, 100.0], [1.70169982E12, 100.0], [1.70169948E12, 100.0], [1.701699955E12, 100.0], [1.701699615E12, 100.0], [1.7017E12, 100.0], [1.70169991E12, 100.0], [1.70169957E12, 100.0], [1.701699555E12, 100.0], [1.70169994E12, 100.0], [1.7016996E12, 100.0], [1.70169951E12, 100.0], [1.701699895E12, 100.0], [1.70170003E12, 100.0], [1.70169969E12, 100.0], [1.701699985E12, 100.0], [1.701699645E12, 100.0], [1.701699715E12, 100.0], [1.701699375E12, 100.0], [1.70169976E12, 100.0], [1.70169967E12, 100.0], [1.701699465E12, 100.0], [1.70169985E12, 100.0], [1.70169942E12, 100.0], [1.701699805E12, 100.0], [1.70169962E12, 100.0], [1.701700005E12, 100.0], [1.701699915E12, 100.0], [1.701699575E12, 100.0], [1.70169996E12, 100.0], [1.70169971E12, 100.0], [1.70169937E12, 100.0], [1.701699665E12, 100.0], [1.701699395E12, 100.0], [1.70169978E12, 100.0], [1.70169944E12, 100.0], [1.701699735E12, 100.0], [1.70169987E12, 100.0], [1.70169953E12, 100.0], [1.701699825E12, 100.0], [1.701699485E12, 100.0]], "isOverall": false, "label": "jp@gc - Ultimate Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 5000, "maxX": 1.70170003E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 190.38749898793668, "minX": 100.0, "maxY": 190.38749898793668, "series": [{"data": [[100.0, 190.38749898793668]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[100.0, 190.38749898793668]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 79.2, "minX": 1.70169937E12, "maxY": 5974323.4, "series": [{"data": [[1.70169947E12, 5521213.2], [1.701699855E12, 5492888.6], [1.701699425E12, 5521240.4], [1.70169981E12, 5606224.4], [1.701699945E12, 5606168.2], [1.701699605E12, 5521189.2], [1.701699515E12, 5492920.4], [1.7016999E12, 5606181.8], [1.70169956E12, 5492969.2], [1.70169963E12, 5606211.0], [1.701700015E12, 2774806.4], [1.701699585E12, 5606160.6], [1.70169997E12, 5492908.8], [1.70169938E12, 1868701.6], [1.701699765E12, 5606183.4], [1.701699675E12, 5549519.8], [1.70169972E12, 5492928.6], [1.701699875E12, 5521281.4], [1.701699535E12, 5606121.0], [1.70169992E12, 5974323.4], [1.70169983E12, 5549590.4], [1.70169949E12, 5266371.0], [1.701699625E12, 5606192.0], [1.70170001E12, 3850716.0], [1.70169958E12, 5662738.2], [1.701699965E12, 5464585.2], [1.701699695E12, 5662798.0], [1.70169999E12, 5492934.8], [1.70169965E12, 5577845.6], [1.701699785E12, 5492902.8], [1.701699445E12, 5436316.0], [1.70169974E12, 5521734.4], [1.7016994E12, 5464565.8], [1.701699385E12, 2831392.8], [1.70169977E12, 5492921.4], [1.701699725E12, 5549501.6], [1.701699475E12, 5634466.2], [1.70169986E12, 5634515.4], [1.70169952E12, 5606169.0], [1.70169943E12, 5521312.6], [1.701699815E12, 5408020.0], [1.701699545E12, 5521190.6], [1.70169993E12, 5634561.8], [1.7016995E12, 5521176.2], [1.701699885E12, 5634467.4], [1.701699635E12, 5464575.8], [1.70170002E12, 1868763.8], [1.70169968E12, 5606249.8], [1.70169959E12, 5492880.8], [1.701699975E12, 5606241.6], [1.70169979E12, 5492902.4], [1.70169945E12, 5634502.2], [1.701699745E12, 5407978.0], [1.701699405E12, 5577809.8], [1.70169954E12, 5606147.8], [1.701699925E12, 5549519.0], [1.701699835E12, 5578991.6], [1.701699495E12, 5861001.8], [1.70169988E12, 5662819.2], [1.70169995E12, 5606120.6], [1.70169961E12, 5634459.2], [1.701699905E12, 5521253.2], [1.701699565E12, 5549562.8], [1.7016997E12, 5323525.2], [1.701699995E12, 5436290.8], [1.701699655E12, 5492898.0], [1.701700025E12, 934370.2], [1.701699685E12, 5407999.6], [1.701699595E12, 5521208.8], [1.70169998E12, 5464577.4], [1.70169964E12, 5691088.0], [1.70169939E12, 3652481.8], [1.701699775E12, 5464630.6], [1.70169973E12, 5634467.0], [1.70169946E12, 5662731.6], [1.701699845E12, 5436314.8], [1.701699755E12, 5521325.6], [1.701699415E12, 5634478.0], [1.7016998E12, 5549556.2], [1.70169955E12, 5521222.6], [1.701699935E12, 5492892.2], [1.701699505E12, 5719434.0], [1.70169989E12, 5521196.4], [1.701699705E12, 5606150.8], [1.70169966E12, 5634444.8], [1.701699795E12, 5577835.6], [1.701699455E12, 5549456.2], [1.70169984E12, 5577894.2], [1.70169975E12, 5634451.4], [1.70169941E12, 5521223.6], [1.701699865E12, 5436350.6], [1.701699525E12, 5747711.8], [1.701699435E12, 5521159.4], [1.70169982E12, 5776115.8], [1.70169948E12, 5521159.2], [1.701699955E12, 5549518.6], [1.701699615E12, 5521191.8], [1.7017E12, 5577873.2], [1.70169991E12, 5577818.2], [1.70169957E12, 5436314.6], [1.701699555E12, 5549577.0], [1.70169994E12, 5662785.4], [1.7016996E12, 5549554.8], [1.70169951E12, 5606138.2], [1.701699895E12, 5577826.8], [1.70170003E12, 141564.8], [1.70169969E12, 5549507.6], [1.701699985E12, 5634469.6], [1.701699645E12, 5408002.8], [1.701699715E12, 5521268.4], [1.701699375E12, 84948.4], [1.70169976E12, 5492881.6], [1.70169967E12, 5492916.2], [1.701699465E12, 5492935.0], [1.70169985E12, 5634506.6], [1.70169942E12, 5577878.2], [1.701699805E12, 5492978.6], [1.70169962E12, 5606206.2], [1.701700005E12, 4643559.2], [1.701699915E12, 5181443.6], [1.701699575E12, 5662836.2], [1.70169996E12, 5492885.6], [1.70169971E12, 5549535.0], [1.70169937E12, 84936.0], [1.701699665E12, 5662778.8], [1.701699395E12, 4558500.4], [1.70169978E12, 5662831.4], [1.70169944E12, 5606155.2], [1.701699735E12, 5380166.6], [1.70169987E12, 5493479.2], [1.70169953E12, 5521195.2], [1.701699825E12, 5521227.6], [1.701699485E12, 5577862.8]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.70169947E12, 5148.0], [1.701699855E12, 5121.6], [1.701699425E12, 5148.0], [1.70169981E12, 5227.2], [1.701699945E12, 5227.2], [1.701699605E12, 5148.0], [1.701699515E12, 5121.6], [1.7016999E12, 5227.2], [1.70169956E12, 5121.6], [1.70169963E12, 5227.2], [1.701700015E12, 2587.2], [1.701699585E12, 5227.2], [1.70169997E12, 5121.6], [1.70169938E12, 1742.4], [1.701699765E12, 5227.2], [1.701699675E12, 5174.4], [1.70169972E12, 5121.6], [1.701699875E12, 5148.0], [1.701699535E12, 5227.2], [1.70169992E12, 5570.4], [1.70169983E12, 5174.4], [1.70169949E12, 4910.4], [1.701699625E12, 5227.2], [1.70170001E12, 3590.4], [1.70169958E12, 5280.0], [1.701699965E12, 5095.2], [1.701699695E12, 5280.0], [1.70169999E12, 5121.6], [1.70169965E12, 5200.8], [1.701699785E12, 5121.6], [1.701699445E12, 5068.8], [1.70169974E12, 5148.0], [1.7016994E12, 5095.2], [1.701699385E12, 2640.0], [1.70169977E12, 5121.6], [1.701699725E12, 5174.4], [1.701699475E12, 5253.6], [1.70169986E12, 5253.6], [1.70169952E12, 5227.2], [1.70169943E12, 5148.0], [1.701699815E12, 5042.4], [1.701699545E12, 5148.0], [1.70169993E12, 5253.6], [1.7016995E12, 5148.0], [1.701699885E12, 5253.6], [1.701699635E12, 5095.2], [1.70170002E12, 1742.4], [1.70169968E12, 5227.2], [1.70169959E12, 5121.6], [1.701699975E12, 5227.2], [1.70169979E12, 5121.6], [1.70169945E12, 5253.6], [1.701699745E12, 5042.4], [1.701699405E12, 5200.8], [1.70169954E12, 5227.2], [1.701699925E12, 5174.4], [1.701699835E12, 5200.8], [1.701699495E12, 5464.8], [1.70169988E12, 5280.0], [1.70169995E12, 5227.2], [1.70169961E12, 5253.6], [1.701699905E12, 5148.0], [1.701699565E12, 5174.4], [1.7016997E12, 4963.2], [1.701699995E12, 5068.8], [1.701699655E12, 5121.6], [1.701700025E12, 871.2], [1.701699685E12, 5042.4], [1.701699595E12, 5148.0], [1.70169998E12, 5095.2], [1.70169964E12, 5306.4], [1.70169939E12, 3405.6], [1.701699775E12, 5095.2], [1.70169973E12, 5253.6], [1.70169946E12, 5280.0], [1.701699845E12, 5068.8], [1.701699755E12, 5148.0], [1.701699415E12, 5253.6], [1.7016998E12, 5174.4], [1.70169955E12, 5148.0], [1.701699935E12, 5121.6], [1.701699505E12, 5332.8], [1.70169989E12, 5148.0], [1.701699705E12, 5227.2], [1.70169966E12, 5253.6], [1.701699795E12, 5200.8], [1.701699455E12, 5174.4], [1.70169984E12, 5200.8], [1.70169975E12, 5253.6], [1.70169941E12, 5148.0], [1.701699865E12, 5068.8], [1.701699525E12, 5359.2], [1.701699435E12, 5148.0], [1.70169982E12, 5385.6], [1.70169948E12, 5148.0], [1.701699955E12, 5174.4], [1.701699615E12, 5148.0], [1.7017E12, 5200.8], [1.70169991E12, 5200.8], [1.70169957E12, 5068.8], [1.701699555E12, 5174.4], [1.70169994E12, 5280.0], [1.7016996E12, 5174.4], [1.70169951E12, 5227.2], [1.701699895E12, 5200.8], [1.70170003E12, 132.0], [1.70169969E12, 5174.4], [1.701699985E12, 5253.6], [1.701699645E12, 5042.4], [1.701699715E12, 5148.0], [1.701699375E12, 79.2], [1.70169976E12, 5121.6], [1.70169967E12, 5121.6], [1.701699465E12, 5121.6], [1.70169985E12, 5253.6], [1.70169942E12, 5200.8], [1.701699805E12, 5121.6], [1.70169962E12, 5227.2], [1.701700005E12, 4329.6], [1.701699915E12, 4831.2], [1.701699575E12, 5280.0], [1.70169996E12, 5121.6], [1.70169971E12, 5174.4], [1.70169937E12, 79.2], [1.701699665E12, 5280.0], [1.701699395E12, 4250.4], [1.70169978E12, 5280.0], [1.70169944E12, 5227.2], [1.701699735E12, 5016.0], [1.70169987E12, 5121.6], [1.70169953E12, 5148.0], [1.701699825E12, 5148.0], [1.701699485E12, 5200.8]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 5000, "maxX": 1.70170003E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 116.8, "minX": 1.70169937E12, "maxY": 303.24489795918373, "series": [{"data": [[1.70169947E12, 169.48205128205126], [1.701699855E12, 215.1237113402062], [1.701699425E12, 168.27692307692314], [1.70169981E12, 233.11616161616155], [1.701699945E12, 161.51515151515144], [1.701699605E12, 192.34358974358972], [1.701699515E12, 188.3247422680413], [1.7016999E12, 155.85353535353522], [1.70169956E12, 177.22164948453613], [1.70169963E12, 199.68686868686868], [1.701700015E12, 133.45918367346945], [1.701699585E12, 147.76262626262624], [1.70169997E12, 206.65979381443293], [1.70169938E12, 126.59090909090905], [1.701699765E12, 151.65151515151507], [1.701699675E12, 243.56122448979585], [1.70169972E12, 189.81443298969074], [1.701699875E12, 255.58974358974365], [1.701699535E12, 190.30303030303028], [1.70169992E12, 178.7725118483413], [1.70169983E12, 169.00510204081633], [1.70169949E12, 199.1881720430107], [1.701699625E12, 177.22727272727272], [1.70170001E12, 137.02941176470588], [1.70169958E12, 170.98499999999996], [1.701699965E12, 153.08808290155432], [1.701699695E12, 154.86000000000007], [1.70169999E12, 175.07731958762892], [1.70169965E12, 215.5025380710659], [1.701699785E12, 188.06701030927832], [1.701699445E12, 189.89583333333326], [1.70169974E12, 303.24489795918373], [1.7016994E12, 157.88082901554404], [1.701699385E12, 126.24], [1.70169977E12, 151.8402061855669], [1.701699725E12, 187.64795918367352], [1.701699475E12, 176.09045226130647], [1.70169986E12, 190.63819095477393], [1.70169952E12, 178.97474747474735], [1.70169943E12, 206.92307692307693], [1.701699815E12, 196.9214659685864], [1.701699545E12, 138.29743589743595], [1.70169993E12, 219.06030150753764], [1.7016995E12, 154.95897435897433], [1.701699885E12, 189.8693467336683], [1.701699635E12, 154.4093264248705], [1.70170002E12, 122.12121212121214], [1.70169968E12, 205.0000000000001], [1.70169959E12, 140.2680412371134], [1.701699975E12, 178.88383838383845], [1.70169979E12, 199.56701030927834], [1.70169945E12, 189.39698492462318], [1.701699745E12, 289.39267015706815], [1.701699405E12, 182.91878172588835], [1.70169954E12, 195.58585858585866], [1.701699925E12, 209.66836734693877], [1.701699835E12, 203.1557788944724], [1.701699495E12, 183.7632850241546], [1.70169988E12, 247.53500000000022], [1.70169995E12, 160.49999999999997], [1.70169961E12, 205.8040201005025], [1.701699905E12, 169.94871794871784], [1.701699565E12, 206.28571428571428], [1.7016997E12, 234.22751322751327], [1.701699995E12, 184.6354166666666], [1.701699655E12, 275.40206185567], [1.701700025E12, 125.33333333333334], [1.701699685E12, 228.26178010471216], [1.701699595E12, 172.33333333333334], [1.70169998E12, 206.11398963730576], [1.70169964E12, 176.50248756218903], [1.70169939E12, 134.54263565891475], [1.701699775E12, 233.92746113989634], [1.70169973E12, 172.06532663316582], [1.70169946E12, 150.3349999999999], [1.701699845E12, 183.38541666666663], [1.701699755E12, 195.87692307692313], [1.701699415E12, 253.98492462311572], [1.7016998E12, 218.42346938775518], [1.70169955E12, 156.0564102564102], [1.701699935E12, 154.57216494845366], [1.701699505E12, 192.88613861386145], [1.70169989E12, 143.57435897435894], [1.701699705E12, 215.65151515151518], [1.70169966E12, 277.8994974874374], [1.701699795E12, 218.7360406091371], [1.701699455E12, 147.78061224489798], [1.70169984E12, 200.1725888324873], [1.70169975E12, 251.47738693467346], [1.70169941E12, 232.93846153846147], [1.701699865E12, 197.33333333333331], [1.701699525E12, 150.31034482758625], [1.701699435E12, 195.7076923076923], [1.70169982E12, 212.49509803921572], [1.70169948E12, 146.5641025641025], [1.701699955E12, 161.08163265306138], [1.701699615E12, 210.16410256410262], [1.7017E12, 208.01522842639596], [1.70169991E12, 166.17258883248712], [1.70169957E12, 211.29166666666666], [1.701699555E12, 195.41836734693877], [1.70169994E12, 158.35], [1.7016996E12, 186.43877551020407], [1.70169951E12, 156.54040404040416], [1.701699895E12, 173.4010152284264], [1.70170003E12, 116.8], [1.70169969E12, 188.4132653061224], [1.701699985E12, 204.72864321608037], [1.701699645E12, 196.12041884816753], [1.701699715E12, 208.72820512820508], [1.701699375E12, 122.66666666666667], [1.70169976E12, 203.26804123711344], [1.70169967E12, 212.05670103092783], [1.701699465E12, 160.6185567010309], [1.70169985E12, 193.00000000000003], [1.70169942E12, 186.25380710659903], [1.701699805E12, 241.06185567010314], [1.70169962E12, 166.040404040404], [1.701700005E12, 140.1707317073171], [1.701699915E12, 143.47540983606552], [1.701699575E12, 183.79500000000002], [1.70169996E12, 176.92783505154645], [1.70169971E12, 201.71428571428567], [1.70169937E12, 228.0], [1.701699665E12, 240.52], [1.701699395E12, 151.39130434782618], [1.70169978E12, 222.68499999999992], [1.70169944E12, 161.11111111111111], [1.701699735E12, 273.3612565445026], [1.70169987E12, 242.6153846153846], [1.70169953E12, 158.53846153846163], [1.701699825E12, 157.68717948717946], [1.701699485E12, 186.01522842639588]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 5000, "maxX": 1.70170003E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 55.0, "minX": 1.70169937E12, "maxY": 208.16326530612258, "series": [{"data": [[1.70169947E12, 95.97435897435896], [1.701699855E12, 128.68041237113394], [1.701699425E12, 96.49743589743589], [1.70169981E12, 157.97474747474743], [1.701699945E12, 92.59090909090905], [1.701699605E12, 118.34871794871795], [1.701699515E12, 116.01546391752578], [1.7016999E12, 87.52020202020199], [1.70169956E12, 107.41237113402062], [1.70169963E12, 124.90404040404037], [1.701700015E12, 67.21428571428571], [1.701699585E12, 80.39898989898991], [1.70169997E12, 133.57731958762878], [1.70169938E12, 62.62121212121212], [1.701699765E12, 82.92424242424248], [1.701699675E12, 152.34183673469389], [1.70169972E12, 118.90206185567013], [1.701699875E12, 177.17948717948713], [1.701699535E12, 118.23737373737382], [1.70169992E12, 102.7867298578199], [1.70169983E12, 99.24999999999999], [1.70169949E12, 115.20430107526884], [1.701699625E12, 104.23232323232327], [1.70170001E12, 69.91911764705881], [1.70169958E12, 100.715], [1.701699965E12, 83.98445595854925], [1.701699695E12, 86.00500000000001], [1.70169999E12, 103.71649484536084], [1.70169965E12, 137.96446700507613], [1.701699785E12, 118.25257731958759], [1.701699445E12, 119.05208333333337], [1.70169974E12, 208.16326530612258], [1.7016994E12, 89.56476683937825], [1.701699385E12, 61.46999999999999], [1.70169977E12, 82.48453608247421], [1.701699725E12, 108.8061224489796], [1.701699475E12, 106.91457286432161], [1.70169986E12, 118.27638190954778], [1.70169952E12, 106.52525252525253], [1.70169943E12, 117.4461538461538], [1.701699815E12, 123.49738219895285], [1.701699545E12, 70.61025641025641], [1.70169993E12, 144.58291457286433], [1.7016995E12, 85.72307692307692], [1.701699885E12, 116.1608040201005], [1.701699635E12, 87.02072538860104], [1.70170002E12, 58.515151515151516], [1.70169968E12, 129.22222222222217], [1.70169959E12, 74.21134020618555], [1.701699975E12, 110.47474747474742], [1.70169979E12, 126.60824742268039], [1.70169945E12, 116.53266331658288], [1.701699745E12, 205.83246073298432], [1.701699405E12, 108.56852791878171], [1.70169954E12, 123.54545454545456], [1.701699925E12, 134.04081632653057], [1.701699835E12, 123.27638190954781], [1.701699495E12, 109.60869565217394], [1.70169988E12, 172.22999999999996], [1.70169995E12, 90.49494949494954], [1.70169961E12, 130.57788944723617], [1.701699905E12, 98.47692307692304], [1.701699565E12, 128.62755102040816], [1.7016997E12, 151.91005291005277], [1.701699995E12, 114.86458333333333], [1.701699655E12, 197.7422680412371], [1.701700025E12, 62.78787878787878], [1.701699685E12, 155.39267015706815], [1.701699595E12, 102.58461538461543], [1.70169998E12, 122.41968911917088], [1.70169964E12, 105.5820895522388], [1.70169939E12, 69.32558139534885], [1.701699775E12, 161.4715025906736], [1.70169973E12, 98.45728643216083], [1.70169946E12, 82.71999999999997], [1.701699845E12, 110.31770833333334], [1.701699755E12, 121.25641025641028], [1.701699415E12, 175.81407035175886], [1.7016998E12, 140.94897959183683], [1.70169955E12, 86.76410256410257], [1.701699935E12, 86.10824742268042], [1.701699505E12, 115.57920792079209], [1.70169989E12, 75.48205128205129], [1.701699705E12, 142.7323232323233], [1.70169966E12, 191.96482412060294], [1.701699795E12, 135.5736040609138], [1.701699455E12, 80.67857142857143], [1.70169984E12, 126.4111675126903], [1.70169975E12, 172.28643216080405], [1.70169941E12, 150.574358974359], [1.701699865E12, 126.57812500000004], [1.701699525E12, 82.06896551724144], [1.701699435E12, 122.71282051282049], [1.70169982E12, 139.82843137254898], [1.70169948E12, 77.84102564102565], [1.701699955E12, 93.9234693877551], [1.701699615E12, 125.99999999999996], [1.7017E12, 135.2335025380711], [1.70169991E12, 96.29441624365482], [1.70169957E12, 135.31249999999997], [1.701699555E12, 114.13265306122445], [1.70169994E12, 89.35999999999997], [1.7016996E12, 114.74489795918366], [1.70169951E12, 87.71717171717171], [1.701699895E12, 102.8071065989848], [1.70170003E12, 55.0], [1.70169969E12, 114.25000000000006], [1.701699985E12, 134.65829145728648], [1.701699645E12, 123.05235602094241], [1.701699715E12, 136.64615384615385], [1.701699375E12, 61.333333333333336], [1.70169976E12, 128.6340206185568], [1.70169967E12, 140.30927835051554], [1.701699465E12, 92.06185567010318], [1.70169985E12, 120.96984924623115], [1.70169942E12, 113.51776649746192], [1.701699805E12, 164.95360824742264], [1.70169962E12, 96.69696969696969], [1.701700005E12, 72.84146341463415], [1.701699915E12, 72.40437158469943], [1.701699575E12, 111.3999999999999], [1.70169996E12, 107.36082474226805], [1.70169971E12, 127.57142857142851], [1.70169937E12, 126.66666666666666], [1.701699665E12, 163.49500000000006], [1.701699395E12, 83.81987577639754], [1.70169978E12, 147.59999999999994], [1.70169944E12, 92.53535353535358], [1.701699735E12, 175.19895287958127], [1.70169987E12, 163.774358974359], [1.70169953E12, 89.56410256410254], [1.701699825E12, 89.50256410256415], [1.701699485E12, 115.71065989847715]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 5000, "maxX": 1.70170003E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 23.955882352941188, "minX": 1.70169937E12, "maxY": 46.666666666666664, "series": [{"data": [[1.70169947E12, 25.005128205128205], [1.701699855E12, 32.025773195876276], [1.701699425E12, 24.558974358974357], [1.70169981E12, 24.752525252525253], [1.701699945E12, 24.242424242424246], [1.701699605E12, 24.999999999999993], [1.701699515E12, 25.298969072164944], [1.7016999E12, 24.787878787878782], [1.70169956E12, 24.59278350515464], [1.70169963E12, 24.838383838383848], [1.701700015E12, 24.81632653061224], [1.701699585E12, 24.77777777777777], [1.70169997E12, 24.73711340206186], [1.70169938E12, 24.242424242424242], [1.701699765E12, 24.929292929292924], [1.701699675E12, 35.64285714285715], [1.70169972E12, 24.623711340206196], [1.701699875E12, 24.902564102564096], [1.701699535E12, 24.98989898989899], [1.70169992E12, 30.630331753554486], [1.70169983E12, 24.484693877551013], [1.70169949E12, 29.881720430107524], [1.701699625E12, 24.737373737373737], [1.70170001E12, 23.955882352941188], [1.70169958E12, 24.79499999999999], [1.701699965E12, 24.766839378238345], [1.701699695E12, 24.539999999999996], [1.70169999E12, 24.407216494845354], [1.70169965E12, 24.670050761421315], [1.701699785E12, 25.077319587628867], [1.701699445E12, 24.65625000000001], [1.70169974E12, 24.857142857142854], [1.7016994E12, 24.606217616580324], [1.701699385E12, 24.070000000000004], [1.70169977E12, 24.613402061855684], [1.701699725E12, 26.2295918367347], [1.701699475E12, 24.638190954773858], [1.70169986E12, 24.98492462311556], [1.70169952E12, 25.060606060606066], [1.70169943E12, 31.92820512820512], [1.701699815E12, 24.659685863874355], [1.701699545E12, 24.64102564102566], [1.70169993E12, 24.9497487437186], [1.7016995E12, 25.056410256410253], [1.701699885E12, 24.517587939698494], [1.701699635E12, 24.69948186528497], [1.70170002E12, 24.15151515151516], [1.70169968E12, 24.838383838383834], [1.70169959E12, 24.902061855670095], [1.701699975E12, 24.661616161616177], [1.70169979E12, 24.737113402061844], [1.70169945E12, 24.683417085427138], [1.701699745E12, 25.204188481675388], [1.701699405E12, 24.49238578680203], [1.70169954E12, 24.843434343434353], [1.701699925E12, 24.724489795918366], [1.701699835E12, 24.432160804020107], [1.701699495E12, 27.772946859903367], [1.70169988E12, 24.785000000000007], [1.70169995E12, 24.757575757575754], [1.70169961E12, 24.6180904522613], [1.701699905E12, 24.943589743589747], [1.701699565E12, 24.78571428571429], [1.7016997E12, 24.65608465608466], [1.701699995E12, 24.588541666666668], [1.701699655E12, 24.546391752577314], [1.701700025E12, 24.75757575757575], [1.701699685E12, 24.92146596858639], [1.701699595E12, 24.605128205128214], [1.70169998E12, 30.715025906735757], [1.70169964E12, 24.89054726368159], [1.70169939E12, 24.31782945736433], [1.701699775E12, 24.84455958549222], [1.70169973E12, 24.64824120603015], [1.70169946E12, 24.96999999999999], [1.701699845E12, 24.802083333333332], [1.701699755E12, 24.707692307692298], [1.701699415E12, 25.291457286432163], [1.7016998E12, 24.642857142857146], [1.70169955E12, 24.538461538461533], [1.701699935E12, 24.582474226804123], [1.701699505E12, 24.816831683168303], [1.70169989E12, 24.851282051282055], [1.701699705E12, 24.671717171717177], [1.70169966E12, 24.7638190954774], [1.701699795E12, 34.08121827411167], [1.701699455E12, 24.811224489795915], [1.70169984E12, 24.776649746192895], [1.70169975E12, 24.92462311557789], [1.70169941E12, 24.66153846153844], [1.701699865E12, 24.729166666666668], [1.701699525E12, 24.901477832512303], [1.701699435E12, 24.95897435897437], [1.70169982E12, 24.906862745098042], [1.70169948E12, 24.62564102564102], [1.701699955E12, 24.596938775510196], [1.701699615E12, 30.6923076923077], [1.7017E12, 24.695431472081218], [1.70169991E12, 24.416243654822342], [1.70169957E12, 24.614583333333336], [1.701699555E12, 30.698979591836743], [1.70169994E12, 25.020000000000007], [1.7016996E12, 24.581632653061234], [1.70169951E12, 24.81313131313133], [1.701699895E12, 25.233502538071058], [1.70170003E12, 24.4], [1.70169969E12, 24.566326530612237], [1.701699985E12, 24.577889447236178], [1.701699645E12, 24.51832460732984], [1.701699715E12, 24.943589743589772], [1.701699375E12, 27.333333333333332], [1.70169976E12, 25.077319587628867], [1.70169967E12, 24.670103092783506], [1.701699465E12, 24.77319587628865], [1.70169985E12, 24.854271356783908], [1.70169942E12, 24.725888324873104], [1.701699805E12, 24.731958762886606], [1.70169962E12, 24.80808080808081], [1.701700005E12, 24.347560975609746], [1.701699915E12, 25.15300546448088], [1.701699575E12, 24.750000000000004], [1.70169996E12, 25.201030927835053], [1.70169971E12, 24.76530612244897], [1.70169937E12, 46.666666666666664], [1.701699665E12, 25.625000000000004], [1.701699395E12, 24.80745341614906], [1.70169978E12, 25.354999999999997], [1.70169944E12, 24.691919191919187], [1.701699735E12, 32.65968586387434], [1.70169987E12, 24.84102564102566], [1.70169953E12, 24.497435897435896], [1.701699825E12, 24.620512820512822], [1.701699485E12, 24.598984771573598]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 5000, "maxX": 1.70170003E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 109.0, "minX": 1.70169937E12, "maxY": 1257.0, "series": [{"data": [[1.70169947E12, 457.0], [1.701699855E12, 674.0], [1.701699425E12, 429.0], [1.70169981E12, 1015.0], [1.701699945E12, 435.0], [1.701699605E12, 631.0], [1.701699515E12, 507.0], [1.7016999E12, 340.0], [1.70169956E12, 459.0], [1.70169963E12, 766.0], [1.701700015E12, 371.0], [1.701699585E12, 304.0], [1.70169997E12, 564.0], [1.70169938E12, 221.0], [1.701699765E12, 380.0], [1.701699675E12, 921.0], [1.70169972E12, 505.0], [1.701699875E12, 940.0], [1.701699535E12, 506.0], [1.70169992E12, 583.0], [1.70169983E12, 400.0], [1.70169949E12, 566.0], [1.701699625E12, 540.0], [1.70170001E12, 264.0], [1.70169958E12, 389.0], [1.701699965E12, 405.0], [1.701699695E12, 510.0], [1.70169999E12, 487.0], [1.70169965E12, 573.0], [1.701699785E12, 605.0], [1.701699445E12, 695.0], [1.70169974E12, 1031.0], [1.7016994E12, 506.0], [1.701699385E12, 202.0], [1.70169977E12, 435.0], [1.701699725E12, 573.0], [1.701699475E12, 604.0], [1.70169986E12, 773.0], [1.70169952E12, 485.0], [1.70169943E12, 909.0], [1.701699815E12, 667.0], [1.701699545E12, 251.0], [1.70169993E12, 573.0], [1.7016995E12, 311.0], [1.701699885E12, 710.0], [1.701699635E12, 543.0], [1.70170002E12, 208.0], [1.70169968E12, 550.0], [1.70169959E12, 394.0], [1.701699975E12, 399.0], [1.70169979E12, 549.0], [1.70169945E12, 662.0], [1.701699745E12, 1044.0], [1.701699405E12, 523.0], [1.70169954E12, 592.0], [1.701699925E12, 523.0], [1.701699835E12, 561.0], [1.701699495E12, 769.0], [1.70169988E12, 685.0], [1.70169995E12, 472.0], [1.70169961E12, 712.0], [1.701699905E12, 397.0], [1.701699565E12, 633.0], [1.7016997E12, 636.0], [1.701699995E12, 590.0], [1.701699655E12, 941.0], [1.701700025E12, 179.0], [1.701699685E12, 735.0], [1.701699595E12, 533.0], [1.70169998E12, 544.0], [1.70169964E12, 941.0], [1.70169939E12, 472.0], [1.701699775E12, 739.0], [1.70169973E12, 679.0], [1.70169946E12, 396.0], [1.701699845E12, 533.0], [1.701699755E12, 653.0], [1.701699415E12, 902.0], [1.7016998E12, 930.0], [1.70169955E12, 324.0], [1.701699935E12, 404.0], [1.701699505E12, 698.0], [1.70169989E12, 326.0], [1.701699705E12, 630.0], [1.70169966E12, 864.0], [1.701699795E12, 564.0], [1.701699455E12, 358.0], [1.70169984E12, 448.0], [1.70169975E12, 731.0], [1.70169941E12, 992.0], [1.701699865E12, 472.0], [1.701699525E12, 318.0], [1.701699435E12, 634.0], [1.70169982E12, 522.0], [1.70169948E12, 306.0], [1.701699955E12, 331.0], [1.701699615E12, 930.0], [1.7017E12, 555.0], [1.70169991E12, 398.0], [1.70169957E12, 786.0], [1.701699555E12, 599.0], [1.70169994E12, 374.0], [1.7016996E12, 462.0], [1.70169951E12, 402.0], [1.701699895E12, 420.0], [1.70170003E12, 121.0], [1.70169969E12, 856.0], [1.701699985E12, 492.0], [1.701699645E12, 631.0], [1.701699715E12, 397.0], [1.701699375E12, 126.0], [1.70169976E12, 654.0], [1.70169967E12, 556.0], [1.701699465E12, 372.0], [1.70169985E12, 436.0], [1.70169942E12, 600.0], [1.701699805E12, 585.0], [1.70169962E12, 396.0], [1.701700005E12, 239.0], [1.701699915E12, 402.0], [1.701699575E12, 585.0], [1.70169996E12, 531.0], [1.70169971E12, 570.0], [1.70169937E12, 418.0], [1.701699665E12, 703.0], [1.701699395E12, 503.0], [1.70169978E12, 625.0], [1.70169944E12, 414.0], [1.701699735E12, 1257.0], [1.70169987E12, 587.0], [1.70169953E12, 396.0], [1.701699825E12, 385.0], [1.701699485E12, 685.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.70169947E12, 113.0], [1.701699855E12, 113.0], [1.701699425E12, 109.0], [1.70169981E12, 113.0], [1.701699945E12, 111.0], [1.701699605E12, 113.0], [1.701699515E12, 114.0], [1.7016999E12, 113.0], [1.70169956E12, 111.0], [1.70169963E12, 112.0], [1.701700015E12, 111.0], [1.701699585E12, 112.0], [1.70169997E12, 112.0], [1.70169938E12, 112.0], [1.701699765E12, 113.0], [1.701699675E12, 112.0], [1.70169972E12, 114.0], [1.701699875E12, 113.0], [1.701699535E12, 113.0], [1.70169992E12, 111.0], [1.70169983E12, 111.0], [1.70169949E12, 112.0], [1.701699625E12, 113.0], [1.70170001E12, 113.0], [1.70169958E12, 113.0], [1.701699965E12, 113.0], [1.701699695E12, 112.0], [1.70169999E12, 112.0], [1.70169965E12, 110.0], [1.701699785E12, 113.0], [1.701699445E12, 110.0], [1.70169974E12, 112.0], [1.7016994E12, 113.0], [1.701699385E12, 113.0], [1.70169977E12, 112.0], [1.701699725E12, 116.0], [1.701699475E12, 113.0], [1.70169986E12, 110.0], [1.70169952E12, 112.0], [1.70169943E12, 112.0], [1.701699815E12, 113.0], [1.701699545E12, 111.0], [1.70169993E12, 115.0], [1.7016995E12, 113.0], [1.701699885E12, 111.0], [1.701699635E12, 111.0], [1.70170002E12, 112.0], [1.70169968E12, 114.0], [1.70169959E12, 111.0], [1.701699975E12, 112.0], [1.70169979E12, 112.0], [1.70169945E12, 114.0], [1.701699745E12, 112.0], [1.701699405E12, 113.0], [1.70169954E12, 110.0], [1.701699925E12, 114.0], [1.701699835E12, 113.0], [1.701699495E12, 113.0], [1.70169988E12, 112.0], [1.70169995E12, 113.0], [1.70169961E12, 111.0], [1.701699905E12, 112.0], [1.701699565E12, 111.0], [1.7016997E12, 112.0], [1.701699995E12, 111.0], [1.701699655E12, 112.0], [1.701700025E12, 113.0], [1.701699685E12, 113.0], [1.701699595E12, 111.0], [1.70169998E12, 112.0], [1.70169964E12, 113.0], [1.70169939E12, 112.0], [1.701699775E12, 110.0], [1.70169973E12, 113.0], [1.70169946E12, 111.0], [1.701699845E12, 113.0], [1.701699755E12, 113.0], [1.701699415E12, 112.0], [1.7016998E12, 111.0], [1.70169955E12, 111.0], [1.701699935E12, 111.0], [1.701699505E12, 111.0], [1.70169989E12, 111.0], [1.701699705E12, 114.0], [1.70169966E12, 113.0], [1.701699795E12, 113.0], [1.701699455E12, 113.0], [1.70169984E12, 113.0], [1.70169975E12, 113.0], [1.70169941E12, 113.0], [1.701699865E12, 113.0], [1.701699525E12, 110.0], [1.701699435E12, 112.0], [1.70169982E12, 113.0], [1.70169948E12, 110.0], [1.701699955E12, 109.0], [1.701699615E12, 112.0], [1.7017E12, 111.0], [1.70169991E12, 111.0], [1.70169957E12, 112.0], [1.701699555E12, 111.0], [1.70169994E12, 111.0], [1.7016996E12, 111.0], [1.70169951E12, 110.0], [1.701699895E12, 111.0], [1.70170003E12, 113.0], [1.70169969E12, 110.0], [1.701699985E12, 111.0], [1.701699645E12, 112.0], [1.701699715E12, 113.0], [1.701699375E12, 120.0], [1.70169976E12, 113.0], [1.70169967E12, 113.0], [1.701699465E12, 109.0], [1.70169985E12, 113.0], [1.70169942E12, 113.0], [1.701699805E12, 110.0], [1.70169962E12, 113.0], [1.701700005E12, 113.0], [1.701699915E12, 114.0], [1.701699575E12, 112.0], [1.70169996E12, 113.0], [1.70169971E12, 115.0], [1.70169937E12, 119.0], [1.701699665E12, 111.0], [1.701699395E12, 111.0], [1.70169978E12, 113.0], [1.70169944E12, 112.0], [1.701699735E12, 115.0], [1.70169987E12, 114.0], [1.70169953E12, 109.0], [1.701699825E12, 115.0], [1.701699485E12, 111.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.70169947E12, 293.0], [1.701699855E12, 364.5], [1.701699425E12, 276.0], [1.70169981E12, 381.9], [1.701699945E12, 236.0], [1.701699605E12, 320.4], [1.701699515E12, 317.5], [1.7016999E12, 214.2], [1.70169956E12, 294.5], [1.70169963E12, 359.99999999999994], [1.701700015E12, 170.10000000000002], [1.701699585E12, 205.0], [1.70169997E12, 350.5], [1.70169938E12, 139.8], [1.701699765E12, 219.0], [1.701699675E12, 449.1000000000001], [1.70169972E12, 301.0], [1.701699875E12, 438.4], [1.701699535E12, 304.2], [1.70169992E12, 296.8], [1.70169983E12, 265.6], [1.70169949E12, 317.60000000000014], [1.701699625E12, 287.2], [1.70170001E12, 193.3], [1.70169958E12, 254.9], [1.701699965E12, 222.99999999999997], [1.701699695E12, 230.70000000000002], [1.70169999E12, 265.5], [1.70169965E12, 341.0000000000001], [1.701699785E12, 310.5], [1.701699445E12, 299.0], [1.70169974E12, 590.8000000000001], [1.7016994E12, 215.99999999999997], [1.701699385E12, 132.0], [1.70169977E12, 206.5], [1.701699725E12, 292.3], [1.701699475E12, 278.0], [1.70169986E12, 300.0], [1.70169952E12, 302.1], [1.70169943E12, 346.6], [1.701699815E12, 302.8], [1.701699545E12, 182.0], [1.70169993E12, 340.0], [1.7016995E12, 224.8], [1.701699885E12, 300.0], [1.701699635E12, 226.2], [1.70170002E12, 137.0], [1.70169968E12, 306.4], [1.70169959E12, 199.5], [1.701699975E12, 271.1], [1.70169979E12, 333.5], [1.70169945E12, 291.0], [1.701699745E12, 458.8000000000001], [1.701699405E12, 292.0], [1.70169954E12, 322.29999999999995], [1.701699925E12, 353.1000000000001], [1.701699835E12, 319.40000000000003], [1.701699495E12, 281.20000000000016], [1.70169988E12, 392.9], [1.70169995E12, 249.1], [1.70169961E12, 341.0], [1.701699905E12, 261.20000000000005], [1.701699565E12, 310.0], [1.7016997E12, 392.9], [1.701699995E12, 295.1], [1.701699655E12, 504.5], [1.701700025E12, 167.40000000000003], [1.701699685E12, 366.4000000000001], [1.701699595E12, 265.4], [1.70169998E12, 340.6], [1.70169964E12, 273.40000000000003], [1.70169939E12, 168.0], [1.701699775E12, 379.79999999999995], [1.70169973E12, 267.0], [1.70169946E12, 219.70000000000002], [1.701699845E12, 307.40000000000003], [1.701699755E12, 298.4], [1.701699415E12, 500.0], [1.7016998E12, 397.90000000000003], [1.70169955E12, 219.0], [1.701699935E12, 245.5], [1.701699505E12, 321.0], [1.70169989E12, 202.0], [1.701699705E12, 352.29999999999995], [1.70169966E12, 544.0], [1.701699795E12, 401.2000000000001], [1.701699455E12, 206.3], [1.70169984E12, 298.20000000000005], [1.70169975E12, 438.0], [1.70169941E12, 493.0], [1.701699865E12, 299.70000000000005], [1.701699525E12, 213.6], [1.701699435E12, 299.4], [1.70169982E12, 314.0], [1.70169948E12, 201.4], [1.701699955E12, 237.3], [1.701699615E12, 345.20000000000005], [1.7017E12, 309.20000000000005], [1.70169991E12, 261.40000000000003], [1.70169957E12, 323.70000000000005], [1.701699555E12, 317.0000000000001], [1.70169994E12, 244.9], [1.7016996E12, 283.4000000000001], [1.70169951E12, 230.29999999999998], [1.701699895E12, 253.60000000000005], [1.70170003E12, 121.0], [1.70169969E12, 291.20000000000005], [1.701699985E12, 319.0], [1.701699645E12, 331.40000000000015], [1.701699715E12, 307.8], [1.701699375E12, 126.0], [1.70169976E12, 376.0], [1.70169967E12, 308.5], [1.701699465E12, 250.5], [1.70169985E12, 299.0], [1.70169942E12, 290.20000000000005], [1.701699805E12, 400.5], [1.70169962E12, 245.1], [1.701700005E12, 198.0], [1.701699915E12, 198.0], [1.701699575E12, 281.6], [1.70169996E12, 277.0], [1.70169971E12, 307.0], [1.70169937E12, 418.0], [1.701699665E12, 434.8], [1.701699395E12, 204.8], [1.70169978E12, 397.70000000000005], [1.70169944E12, 228.1], [1.701699735E12, 458.30000000000007], [1.70169987E12, 381.5], [1.70169953E12, 259.4], [1.701699825E12, 227.4000000000001], [1.701699485E12, 316.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.70169947E12, 404.1999999999996], [1.701699855E12, 533.4000000000017], [1.701699425E12, 404.0399999999998], [1.70169981E12, 641.7699999999966], [1.701699945E12, 406.28999999999974], [1.701699605E12, 619.4799999999999], [1.701699515E12, 498.4500000000001], [1.7016999E12, 328.1199999999999], [1.70169956E12, 402.0000000000007], [1.70169963E12, 711.5499999999995], [1.701700015E12, 371.0], [1.701699585E12, 299.04999999999995], [1.70169997E12, 541.2000000000003], [1.70169938E12, 221.0], [1.701699765E12, 318.61999999999944], [1.701699675E12, 771.6200000000001], [1.70169972E12, 443.25000000000074], [1.701699875E12, 755.6799999999985], [1.701699535E12, 452.5399999999995], [1.70169992E12, 518.56], [1.70169983E12, 362.1700000000001], [1.70169949E12, 564.26], [1.701699625E12, 476.6399999999994], [1.70170001E12, 262.89], [1.70169958E12, 371.0], [1.701699965E12, 404.06], [1.701699695E12, 499.2500000000016], [1.70169999E12, 393.9000000000011], [1.70169965E12, 557.3200000000002], [1.701699785E12, 512.850000000001], [1.701699445E12, 539.6899999999989], [1.70169974E12, 982.9999999999995], [1.7016994E12, 458.0600000000001], [1.701699385E12, 201.93999999999997], [1.70169977E12, 354.25000000000097], [1.701699725E12, 502.19000000000005], [1.701699475E12, 486.0], [1.70169986E12, 570.0], [1.70169952E12, 452.3299999999997], [1.70169943E12, 734.2799999999986], [1.701699815E12, 623.7599999999993], [1.701699545E12, 251.0], [1.70169993E12, 527.0], [1.7016995E12, 304.28], [1.701699885E12, 498.0], [1.701699635E12, 458.4000000000002], [1.70170002E12, 208.0], [1.70169968E12, 537.1299999999999], [1.70169959E12, 277.1500000000014], [1.701699975E12, 334.6499999999994], [1.70169979E12, 511.95000000000044], [1.70169945E12, 432.0], [1.701699745E12, 812.159999999996], [1.701699405E12, 394.62000000000137], [1.70169954E12, 498.93999999999915], [1.701699925E12, 495.84000000000003], [1.701699835E12, 448.3000000000012], [1.701699495E12, 716.1999999999998], [1.70169988E12, 613.9900000000009], [1.70169995E12, 428.4399999999996], [1.70169961E12, 635.0], [1.701699905E12, 324.0399999999994], [1.701699565E12, 590.32], [1.7016997E12, 606.6299999999995], [1.701699995E12, 563.0299999999997], [1.701699655E12, 923.9000000000002], [1.701700025E12, 179.0], [1.701699685E12, 628.2799999999982], [1.701699595E12, 481.15999999999957], [1.70169998E12, 530.84], [1.70169964E12, 593.5799999999988], [1.70169939E12, 442.5999999999989], [1.701699775E12, 733.36], [1.70169973E12, 519.0], [1.70169946E12, 312.94000000000005], [1.701699845E12, 451.1599999999994], [1.701699755E12, 469.6399999999985], [1.701699415E12, 664.0], [1.7016998E12, 699.1400000000003], [1.70169955E12, 293.27999999999975], [1.701699935E12, 355.5500000000006], [1.701699505E12, 574.8299999999998], [1.70169989E12, 306.79999999999984], [1.701699705E12, 440.90999999999826], [1.70169966E12, 843.0], [1.701699795E12, 560.08], [1.701699455E12, 295.9200000000001], [1.70169984E12, 397.04000000000053], [1.70169975E12, 714.0], [1.70169941E12, 983.3599999999999], [1.701699865E12, 449.67999999999984], [1.701699525E12, 302.96000000000004], [1.701699435E12, 397.83999999999804], [1.70169982E12, 499.0], [1.70169948E12, 297.3599999999999], [1.701699955E12, 306.75], [1.701699615E12, 639.1199999999976], [1.7017E12, 552.0600000000001], [1.70169991E12, 395.06000000000006], [1.70169957E12, 602.7899999999986], [1.701699555E12, 560.2], [1.70169994E12, 338.97], [1.7016996E12, 434.84000000000003], [1.70169951E12, 334.6799999999994], [1.701699895E12, 399.4200000000002], [1.70170003E12, 121.0], [1.70169969E12, 605.7400000000002], [1.701699985E12, 484.0], [1.701699645E12, 561.0799999999988], [1.701699715E12, 391.23999999999995], [1.701699375E12, 126.0], [1.70169976E12, 599.8500000000006], [1.70169967E12, 547.45], [1.701699465E12, 369.15000000000003], [1.70169985E12, 407.0], [1.70169942E12, 568.6400000000003], [1.701699805E12, 562.2000000000003], [1.70169962E12, 346.49999999999955], [1.701700005E12, 226.6499999999999], [1.701699915E12, 399.48], [1.701699575E12, 571.3300000000006], [1.70169996E12, 418.90000000000134], [1.70169971E12, 494.3400000000001], [1.70169937E12, 418.0], [1.701699665E12, 649.8800000000001], [1.701699395E12, 425.49999999999943], [1.70169978E12, 619.8200000000002], [1.70169944E12, 305.099999999999], [1.701699735E12, 942.1400000000012], [1.70169987E12, 560.4000000000003], [1.70169953E12, 348.9599999999996], [1.701699825E12, 370.5999999999999], [1.701699485E12, 467.44000000000227]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.70169947E12, 131.0], [1.701699855E12, 180.0], [1.701699425E12, 137.0], [1.70169981E12, 204.0], [1.701699945E12, 139.0], [1.701699605E12, 149.0], [1.701699515E12, 165.0], [1.7016999E12, 132.5], [1.70169956E12, 156.5], [1.70169963E12, 143.0], [1.701700015E12, 121.0], [1.701699585E12, 128.0], [1.70169997E12, 182.0], [1.70169938E12, 120.5], [1.701699765E12, 128.5], [1.701699675E12, 201.0], [1.70169972E12, 172.0], [1.701699875E12, 215.0], [1.701699535E12, 172.0], [1.70169992E12, 132.0], [1.70169983E12, 136.0], [1.70169949E12, 165.5], [1.701699625E12, 155.0], [1.70170001E12, 122.0], [1.70169958E12, 140.0], [1.701699965E12, 128.0], [1.701699695E12, 126.0], [1.70169999E12, 153.5], [1.70169965E12, 200.0], [1.701699785E12, 166.5], [1.701699445E12, 170.5], [1.70169974E12, 239.0], [1.7016994E12, 130.0], [1.701699385E12, 121.0], [1.70169977E12, 127.5], [1.701699725E12, 165.5], [1.701699475E12, 147.0], [1.70169986E12, 157.0], [1.70169952E12, 145.5], [1.70169943E12, 161.0], [1.701699815E12, 170.0], [1.701699545E12, 124.0], [1.70169993E12, 199.0], [1.7016995E12, 133.0], [1.701699885E12, 151.0], [1.701699635E12, 126.0], [1.70170002E12, 117.0], [1.70169968E12, 197.0], [1.70169959E12, 124.5], [1.701699975E12, 174.0], [1.70169979E12, 173.0], [1.70169945E12, 175.0], [1.701699745E12, 263.0], [1.701699405E12, 165.0], [1.70169954E12, 167.5], [1.701699925E12, 188.0], [1.701699835E12, 172.0], [1.701699495E12, 137.0], [1.70169988E12, 224.0], [1.70169995E12, 129.0], [1.70169961E12, 175.0], [1.701699905E12, 150.0], [1.701699565E12, 190.5], [1.7016997E12, 200.0], [1.701699995E12, 151.0], [1.701699655E12, 244.5], [1.701700025E12, 119.0], [1.701699685E12, 207.0], [1.701699595E12, 141.0], [1.70169998E12, 169.0], [1.70169964E12, 142.0], [1.70169939E12, 121.0], [1.701699775E12, 208.0], [1.70169973E12, 147.0], [1.70169946E12, 126.0], [1.701699845E12, 151.0], [1.701699755E12, 189.0], [1.701699415E12, 202.0], [1.7016998E12, 176.5], [1.70169955E12, 135.0], [1.701699935E12, 127.0], [1.701699505E12, 165.5], [1.70169989E12, 126.0], [1.701699705E12, 198.0], [1.70169966E12, 222.0], [1.701699795E12, 177.0], [1.701699455E12, 127.0], [1.70169984E12, 197.0], [1.70169975E12, 215.0], [1.70169941E12, 149.0], [1.701699865E12, 185.5], [1.701699525E12, 129.0], [1.701699435E12, 192.0], [1.70169982E12, 197.5], [1.70169948E12, 130.0], [1.701699955E12, 134.0], [1.701699615E12, 170.0], [1.7017E12, 199.0], [1.70169991E12, 145.0], [1.70169957E12, 196.0], [1.701699555E12, 162.0], [1.70169994E12, 129.0], [1.7016996E12, 171.5], [1.70169951E12, 129.0], [1.701699895E12, 156.0], [1.70170003E12, 117.0], [1.70169969E12, 166.0], [1.701699985E12, 185.0], [1.701699645E12, 155.0], [1.701699715E12, 203.0], [1.701699375E12, 122.0], [1.70169976E12, 171.5], [1.70169967E12, 196.0], [1.701699465E12, 128.0], [1.70169985E12, 181.0], [1.70169942E12, 168.0], [1.701699805E12, 222.5], [1.70169962E12, 145.5], [1.701700005E12, 125.0], [1.701699915E12, 125.0], [1.701699575E12, 163.5], [1.70169996E12, 145.0], [1.70169971E12, 187.0], [1.70169937E12, 147.0], [1.701699665E12, 205.0], [1.701699395E12, 127.0], [1.70169978E12, 191.5], [1.70169944E12, 135.5], [1.701699735E12, 216.5], [1.70169987E12, 220.0], [1.70169953E12, 125.0], [1.701699825E12, 130.0], [1.701699485E12, 137.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.70169947E12, 304.2], [1.701699855E12, 439.5], [1.701699425E12, 297.2], [1.70169981E12, 454.7999999999997], [1.701699945E12, 282.3499999999999], [1.701699605E12, 384.9999999999999], [1.701699515E12, 372.75], [1.7016999E12, 272.54999999999984], [1.70169956E12, 323.25], [1.70169963E12, 475.99999999999966], [1.701700015E12, 198.25], [1.701699585E12, 228.0], [1.70169997E12, 404.5], [1.70169938E12, 201.3], [1.701699765E12, 265.09999999999997], [1.701699675E12, 532.3499999999998], [1.70169972E12, 326.0], [1.701699875E12, 578.3999999999997], [1.701699535E12, 368.39999999999986], [1.70169992E12, 376.79999999999984], [1.70169983E12, 301.15], [1.70169949E12, 452.7500000000001], [1.701699625E12, 309.15], [1.70170001E12, 206.95000000000007], [1.70169958E12, 298.95], [1.701699965E12, 267.29999999999995], [1.701699695E12, 270.9], [1.70169999E12, 297.0], [1.70169965E12, 382.2], [1.701699785E12, 362.5], [1.701699445E12, 329.0], [1.70169974E12, 795.2], [1.7016994E12, 277.19999999999976], [1.701699385E12, 181.19999999999982], [1.70169977E12, 284.0], [1.701699725E12, 329.89999999999986], [1.701699475E12, 348.0], [1.70169986E12, 396.0], [1.70169952E12, 357.74999999999943], [1.70169943E12, 454.59999999999997], [1.701699815E12, 393.4], [1.701699545E12, 208.2], [1.70169993E12, 399.0], [1.7016995E12, 252.7999999999999], [1.701699885E12, 395.0], [1.701699635E12, 300.29999999999984], [1.70170002E12, 160.85], [1.70169968E12, 365.2999999999999], [1.70169959E12, 217.75], [1.701699975E12, 296.09999999999997], [1.70169979E12, 396.0], [1.70169945E12, 313.0], [1.701699745E12, 635.1999999999999], [1.701699405E12, 335.29999999999995], [1.70169954E12, 370.19999999999993], [1.701699925E12, 397.29999999999995], [1.701699835E12, 365.1999999999998], [1.701699495E12, 361.5999999999998], [1.70169988E12, 447.79999999999995], [1.70169995E12, 317.04999999999995], [1.70169961E12, 477.0], [1.701699905E12, 281.9999999999998], [1.701699565E12, 398.0], [1.7016997E12, 476.84999999999957], [1.701699995E12, 355.35], [1.701699655E12, 589.25], [1.701700025E12, 178.3], [1.701699685E12, 437.1999999999995], [1.701699595E12, 299.2], [1.70169998E12, 449.19999999999993], [1.70169964E12, 324.79999999999995], [1.70169939E12, 212.0], [1.701699775E12, 410.39999999999986], [1.70169973E12, 323.0], [1.70169946E12, 264.4999999999999], [1.701699845E12, 346.4], [1.701699755E12, 329.4], [1.701699415E12, 610.0], [1.7016998E12, 480.3499999999998], [1.70169955E12, 242.39999999999998], [1.701699935E12, 293.0], [1.701699505E12, 377.44999999999993], [1.70169989E12, 240.5999999999999], [1.701699705E12, 394.19999999999993], [1.70169966E12, 686.0], [1.701699795E12, 471.59999999999997], [1.701699455E12, 230.79999999999973], [1.70169984E12, 330.1], [1.70169975E12, 510.0], [1.70169941E12, 628.4], [1.701699865E12, 327.7], [1.701699525E12, 242.0], [1.701699435E12, 330.2], [1.70169982E12, 393.25], [1.70169948E12, 218.39999999999998], [1.701699955E12, 273.15], [1.701699615E12, 456.7999999999997], [1.7017E12, 383.5], [1.70169991E12, 293.4], [1.70169957E12, 400.49999999999994], [1.701699555E12, 427.29999999999995], [1.70169994E12, 264.74999999999994], [1.7016996E12, 322.3499999999998], [1.70169951E12, 277.15], [1.701699895E12, 304.0], [1.70170003E12, 121.0], [1.70169969E12, 351.04999999999984], [1.701699985E12, 391.0], [1.701699645E12, 436.9999999999993], [1.701699715E12, 333.59999999999997], [1.701699375E12, 126.0], [1.70169976E12, 417.0], [1.70169967E12, 360.75], [1.701699465E12, 303.25], [1.70169985E12, 328.0], [1.70169942E12, 344.4], [1.701699805E12, 449.5], [1.70169962E12, 299.04999999999995], [1.701700005E12, 200.75], [1.701699915E12, 225.0], [1.701699575E12, 307.0], [1.70169996E12, 307.25], [1.70169971E12, 377.5499999999996], [1.70169937E12, 418.0], [1.701699665E12, 546.55], [1.701699395E12, 262.30000000000007], [1.70169978E12, 467.39999999999964], [1.70169944E12, 273.69999999999976], [1.701699735E12, 565.9], [1.70169987E12, 459.5], [1.70169953E12, 295.2], [1.701699825E12, 278.1999999999999], [1.701699485E12, 359.7999999999999]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 5000, "maxX": 1.70170003E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 116.5, "minX": 1.0, "maxY": 1028.0, "series": [{"data": [[2.0, 119.0], [32.0, 126.0], [33.0, 197.0], [34.0, 168.0], [35.0, 159.0], [37.0, 157.5], [36.0, 168.0], [39.0, 151.0], [38.0, 152.0], [41.0, 162.0], [40.0, 150.0], [43.0, 176.0], [42.0, 169.0], [44.0, 188.5], [45.0, 207.5], [46.0, 304.5], [3.0, 122.0], [49.0, 197.0], [48.0, 211.5], [50.0, 269.0], [54.0, 170.5], [4.0, 124.5], [5.0, 117.0], [7.0, 126.0], [8.0, 116.5], [9.0, 121.0], [10.0, 118.0], [12.0, 118.0], [14.0, 119.0], [1.0, 130.5], [16.0, 120.0], [18.0, 121.0], [19.0, 120.0], [20.0, 119.5], [22.0, 123.0], [23.0, 121.0], [24.0, 120.5], [25.0, 123.0], [26.0, 125.0], [27.0, 139.0], [28.0, 124.0], [29.0, 124.0], [30.0, 293.0], [31.0, 127.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[37.0, 1026.0], [41.0, 1028.0], [42.0, 1025.0], [44.0, 1025.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 54.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 199.0, "series": [{"data": [[2.0, 55.5], [32.0, 59.5], [33.0, 132.0], [34.0, 92.5], [35.0, 84.0], [37.0, 81.0], [36.0, 91.0], [39.0, 77.0], [38.0, 77.0], [41.0, 85.0], [40.0, 77.0], [43.0, 105.0], [42.0, 90.0], [44.0, 110.5], [45.0, 140.5], [46.0, 177.0], [3.0, 60.0], [49.0, 132.0], [48.0, 142.0], [50.0, 199.0], [54.0, 103.5], [4.0, 62.5], [5.0, 55.0], [7.0, 65.0], [8.0, 54.0], [9.0, 56.0], [10.0, 55.0], [12.0, 55.0], [14.0, 55.5], [1.0, 71.5], [16.0, 56.0], [18.0, 57.0], [19.0, 56.0], [20.0, 55.5], [22.0, 58.0], [23.0, 57.0], [24.0, 57.0], [25.0, 57.0], [26.0, 59.0], [27.0, 58.0], [28.0, 58.5], [29.0, 57.0], [30.0, 191.5], [31.0, 60.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[37.0, 0.0], [41.0, 0.0], [42.0, 0.0], [44.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 54.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.6, "minX": 1.70169937E12, "maxY": 40.0, "series": [{"data": [[1.70169947E12, 39.0], [1.701699855E12, 39.2], [1.701699425E12, 39.4], [1.70169981E12, 39.2], [1.701699945E12, 39.4], [1.701699605E12, 39.4], [1.701699515E12, 39.6], [1.7016999E12, 39.6], [1.70169956E12, 38.8], [1.70169963E12, 39.6], [1.701700015E12, 19.2], [1.701699585E12, 39.4], [1.70169997E12, 39.0], [1.70169938E12, 13.6], [1.701699765E12, 39.2], [1.701699675E12, 39.0], [1.70169972E12, 38.6], [1.701699875E12, 39.4], [1.701699535E12, 39.4], [1.70169992E12, 39.8], [1.70169983E12, 39.4], [1.70169949E12, 39.4], [1.701699625E12, 39.4], [1.70170001E12, 26.8], [1.70169958E12, 39.4], [1.701699965E12, 38.8], [1.701699695E12, 39.4], [1.70169999E12, 38.8], [1.70169965E12, 39.2], [1.701699785E12, 39.2], [1.701699445E12, 38.8], [1.70169974E12, 39.0], [1.7016994E12, 38.4], [1.701699385E12, 20.2], [1.70169977E12, 39.0], [1.701699725E12, 39.4], [1.701699475E12, 40.0], [1.70169986E12, 39.4], [1.70169952E12, 39.6], [1.70169943E12, 38.6], [1.701699815E12, 39.0], [1.701699545E12, 39.2], [1.70169993E12, 39.4], [1.7016995E12, 39.4], [1.701699885E12, 39.0], [1.701699635E12, 39.2], [1.70170002E12, 13.0], [1.70169968E12, 39.6], [1.70169959E12, 39.2], [1.701699975E12, 39.0], [1.70169979E12, 39.0], [1.70169945E12, 39.4], [1.701699745E12, 38.6], [1.701699405E12, 39.6], [1.70169954E12, 39.0], [1.701699925E12, 39.2], [1.701699835E12, 39.4], [1.701699495E12, 39.6], [1.70169988E12, 39.6], [1.70169995E12, 40.0], [1.70169961E12, 39.4], [1.701699905E12, 39.2], [1.701699565E12, 39.4], [1.7016997E12, 38.8], [1.701699995E12, 39.4], [1.701699655E12, 39.6], [1.701700025E12, 6.4], [1.701699685E12, 38.8], [1.701699595E12, 39.2], [1.70169998E12, 39.0], [1.70169964E12, 39.4], [1.70169939E12, 26.2], [1.701699775E12, 39.0], [1.70169973E12, 39.8], [1.70169946E12, 39.2], [1.701699845E12, 39.2], [1.701699755E12, 38.8], [1.701699415E12, 39.2], [1.7016998E12, 39.2], [1.70169955E12, 39.4], [1.701699935E12, 39.4], [1.701699505E12, 39.4], [1.70169989E12, 39.4], [1.701699705E12, 39.2], [1.70169966E12, 39.6], [1.701699795E12, 39.2], [1.701699455E12, 39.8], [1.70169984E12, 39.2], [1.70169975E12, 39.0], [1.70169941E12, 39.8], [1.701699865E12, 39.0], [1.701699525E12, 40.0], [1.701699435E12, 39.0], [1.70169982E12, 39.8], [1.70169948E12, 39.0], [1.701699955E12, 38.8], [1.701699615E12, 39.4], [1.7017E12, 38.4], [1.70169991E12, 39.2], [1.70169957E12, 39.0], [1.701699555E12, 39.0], [1.70169994E12, 39.2], [1.7016996E12, 39.0], [1.70169951E12, 39.6], [1.701699895E12, 39.2], [1.70170003E12, 1.0], [1.70169969E12, 38.8], [1.701699985E12, 39.6], [1.701699645E12, 38.8], [1.701699715E12, 39.0], [1.701699375E12, 0.6], [1.70169976E12, 39.0], [1.70169967E12, 39.0], [1.701699465E12, 39.2], [1.70169985E12, 39.4], [1.70169942E12, 39.0], [1.701699805E12, 39.0], [1.70169962E12, 39.4], [1.701700005E12, 32.6], [1.701699915E12, 39.6], [1.701699575E12, 39.4], [1.70169996E12, 39.2], [1.70169971E12, 39.0], [1.70169937E12, 0.6], [1.701699665E12, 39.6], [1.701699395E12, 32.6], [1.70169978E12, 39.4], [1.70169944E12, 39.4], [1.701699735E12, 38.8], [1.70169987E12, 38.6], [1.70169953E12, 39.6], [1.701699825E12, 39.4], [1.701699485E12, 39.2]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 5000, "maxX": 1.70170003E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.2, "minX": 1.70169937E12, "maxY": 42.2, "series": [{"data": [[1.70169947E12, 39.0], [1.701699855E12, 38.8], [1.701699425E12, 39.0], [1.70169981E12, 39.6], [1.701699945E12, 39.6], [1.701699605E12, 39.0], [1.701699515E12, 38.8], [1.7016999E12, 39.6], [1.70169956E12, 38.8], [1.70169963E12, 39.6], [1.701700015E12, 19.6], [1.701699585E12, 39.6], [1.70169997E12, 38.8], [1.70169938E12, 13.2], [1.701699765E12, 39.6], [1.701699675E12, 39.2], [1.70169972E12, 38.8], [1.701699875E12, 39.0], [1.701699535E12, 39.6], [1.70169992E12, 42.2], [1.70169983E12, 39.2], [1.70169949E12, 37.2], [1.701699625E12, 39.6], [1.70170001E12, 27.2], [1.70169958E12, 40.0], [1.701699965E12, 38.6], [1.701699695E12, 40.0], [1.70169999E12, 38.8], [1.70169965E12, 39.4], [1.701699785E12, 38.8], [1.701699445E12, 38.4], [1.70169974E12, 39.0], [1.7016994E12, 38.6], [1.701699385E12, 20.0], [1.70169977E12, 38.8], [1.701699725E12, 39.2], [1.701699475E12, 39.8], [1.70169986E12, 39.8], [1.70169952E12, 39.6], [1.70169943E12, 39.0], [1.701699815E12, 38.2], [1.701699545E12, 39.0], [1.70169993E12, 39.8], [1.7016995E12, 39.0], [1.701699885E12, 39.8], [1.701699635E12, 38.6], [1.70170002E12, 13.2], [1.70169968E12, 39.6], [1.70169959E12, 38.8], [1.701699975E12, 39.6], [1.70169979E12, 38.8], [1.70169945E12, 39.8], [1.701699745E12, 38.2], [1.701699405E12, 39.4], [1.70169954E12, 39.6], [1.701699925E12, 39.2], [1.701699835E12, 39.4], [1.701699495E12, 41.4], [1.70169988E12, 40.0], [1.70169995E12, 39.6], [1.70169961E12, 39.8], [1.701699905E12, 39.0], [1.701699565E12, 39.2], [1.7016997E12, 37.6], [1.701699995E12, 38.4], [1.701699655E12, 38.8], [1.701700025E12, 6.6], [1.701699685E12, 38.2], [1.701699595E12, 39.0], [1.70169998E12, 38.6], [1.70169964E12, 40.2], [1.70169939E12, 25.8], [1.701699775E12, 38.6], [1.70169973E12, 39.8], [1.70169946E12, 40.0], [1.701699845E12, 38.4], [1.701699755E12, 39.0], [1.701699415E12, 39.8], [1.7016998E12, 39.2], [1.70169955E12, 39.0], [1.701699935E12, 38.8], [1.701699505E12, 40.4], [1.70169989E12, 39.0], [1.701699705E12, 39.6], [1.70169966E12, 39.8], [1.701699795E12, 39.4], [1.701699455E12, 39.2], [1.70169984E12, 39.4], [1.70169975E12, 39.8], [1.70169941E12, 39.0], [1.701699865E12, 38.4], [1.701699525E12, 40.6], [1.701699435E12, 39.0], [1.70169982E12, 40.8], [1.70169948E12, 39.0], [1.701699955E12, 39.2], [1.701699615E12, 39.0], [1.7017E12, 39.4], [1.70169991E12, 39.4], [1.70169957E12, 38.4], [1.701699555E12, 39.2], [1.70169994E12, 40.0], [1.7016996E12, 39.2], [1.70169951E12, 39.6], [1.701699895E12, 39.4], [1.70170003E12, 1.0], [1.70169969E12, 39.2], [1.701699985E12, 39.8], [1.701699645E12, 38.2], [1.701699715E12, 39.0], [1.701699375E12, 0.6], [1.70169976E12, 38.8], [1.70169967E12, 38.8], [1.701699465E12, 38.8], [1.70169985E12, 39.8], [1.70169942E12, 39.4], [1.701699805E12, 38.8], [1.70169962E12, 39.6], [1.701700005E12, 32.8], [1.701699915E12, 36.6], [1.701699575E12, 40.0], [1.70169996E12, 38.8], [1.70169971E12, 39.2], [1.70169937E12, 0.6], [1.701699665E12, 40.0], [1.701699395E12, 32.2], [1.70169978E12, 40.0], [1.70169944E12, 39.6], [1.701699735E12, 38.0], [1.70169987E12, 38.8], [1.70169953E12, 39.0], [1.701699825E12, 39.0], [1.701699485E12, 39.4]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.701699735E12, 0.2], [1.70169987E12, 0.2], [1.7016997E12, 0.2], [1.701699835E12, 0.4], [1.70169974E12, 0.2]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketTimeoutException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 5000, "maxX": 1.70170003E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.2, "minX": 1.70169937E12, "maxY": 42.2, "series": [{"data": [[1.70169947E12, 39.0], [1.701699855E12, 38.8], [1.701699425E12, 39.0], [1.70169981E12, 39.6], [1.701699945E12, 39.6], [1.701699605E12, 39.0], [1.701699515E12, 38.8], [1.7016999E12, 39.6], [1.70169956E12, 38.8], [1.70169963E12, 39.6], [1.701700015E12, 19.6], [1.701699585E12, 39.6], [1.70169997E12, 38.8], [1.70169938E12, 13.2], [1.701699765E12, 39.6], [1.701699675E12, 39.2], [1.70169972E12, 38.8], [1.701699875E12, 39.0], [1.701699535E12, 39.6], [1.70169992E12, 42.2], [1.70169983E12, 39.2], [1.70169949E12, 37.2], [1.701699625E12, 39.6], [1.70170001E12, 27.2], [1.70169958E12, 40.0], [1.701699965E12, 38.6], [1.701699695E12, 40.0], [1.70169999E12, 38.8], [1.70169965E12, 39.4], [1.701699785E12, 38.8], [1.701699445E12, 38.4], [1.70169974E12, 39.0], [1.7016994E12, 38.6], [1.701699385E12, 20.0], [1.70169977E12, 38.8], [1.701699725E12, 39.2], [1.701699475E12, 39.8], [1.70169986E12, 39.8], [1.70169952E12, 39.6], [1.70169943E12, 39.0], [1.701699815E12, 38.2], [1.701699545E12, 39.0], [1.70169993E12, 39.8], [1.7016995E12, 39.0], [1.701699885E12, 39.8], [1.701699635E12, 38.6], [1.70170002E12, 13.2], [1.70169968E12, 39.6], [1.70169959E12, 38.8], [1.701699975E12, 39.6], [1.70169979E12, 38.8], [1.70169945E12, 39.8], [1.701699745E12, 38.2], [1.701699405E12, 39.4], [1.70169954E12, 39.6], [1.701699925E12, 39.2], [1.701699835E12, 39.4], [1.701699495E12, 41.4], [1.70169988E12, 40.0], [1.70169995E12, 39.6], [1.70169961E12, 39.8], [1.701699905E12, 39.0], [1.701699565E12, 39.2], [1.7016997E12, 37.6], [1.701699995E12, 38.4], [1.701699655E12, 38.8], [1.701700025E12, 6.6], [1.701699685E12, 38.2], [1.701699595E12, 39.0], [1.70169998E12, 38.6], [1.70169964E12, 40.2], [1.70169939E12, 25.8], [1.701699775E12, 38.6], [1.70169973E12, 39.8], [1.70169946E12, 40.0], [1.701699845E12, 38.4], [1.701699755E12, 39.0], [1.701699415E12, 39.8], [1.7016998E12, 39.2], [1.70169955E12, 39.0], [1.701699935E12, 38.8], [1.701699505E12, 40.4], [1.70169989E12, 39.0], [1.701699705E12, 39.6], [1.70169966E12, 39.8], [1.701699795E12, 39.4], [1.701699455E12, 39.2], [1.70169984E12, 39.4], [1.70169975E12, 39.8], [1.70169941E12, 39.0], [1.701699865E12, 38.4], [1.701699525E12, 40.6], [1.701699435E12, 39.0], [1.70169982E12, 40.8], [1.70169948E12, 39.0], [1.701699955E12, 39.2], [1.701699615E12, 39.0], [1.7017E12, 39.4], [1.70169991E12, 39.4], [1.70169957E12, 38.4], [1.701699555E12, 39.2], [1.70169994E12, 40.0], [1.7016996E12, 39.2], [1.70169951E12, 39.6], [1.701699895E12, 39.4], [1.70170003E12, 1.0], [1.70169969E12, 39.2], [1.701699985E12, 39.8], [1.701699645E12, 38.2], [1.701699715E12, 39.0], [1.701699375E12, 0.6], [1.70169976E12, 38.8], [1.70169967E12, 38.8], [1.701699465E12, 38.8], [1.70169985E12, 39.8], [1.70169942E12, 39.4], [1.701699805E12, 38.8], [1.70169962E12, 39.6], [1.701700005E12, 32.8], [1.701699915E12, 36.6], [1.701699575E12, 40.0], [1.70169996E12, 38.8], [1.70169971E12, 39.2], [1.70169937E12, 0.6], [1.701699665E12, 40.0], [1.701699395E12, 32.2], [1.70169978E12, 40.0], [1.70169944E12, 39.6], [1.701699735E12, 38.0], [1.70169987E12, 38.8], [1.70169953E12, 39.0], [1.701699825E12, 39.0], [1.701699485E12, 39.4]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.701699735E12, 0.2], [1.70169987E12, 0.2], [1.7016997E12, 0.2], [1.701699835E12, 0.4], [1.70169974E12, 0.2]], "isOverall": false, "label": "HTTP Request-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 5000, "maxX": 1.70170003E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.2, "minX": 1.70169937E12, "maxY": 42.2, "series": [{"data": [[1.70169947E12, 39.0], [1.701699855E12, 38.8], [1.701699425E12, 39.0], [1.70169981E12, 39.6], [1.701699945E12, 39.6], [1.701699605E12, 39.0], [1.701699515E12, 38.8], [1.7016999E12, 39.6], [1.70169956E12, 38.8], [1.70169963E12, 39.6], [1.701700015E12, 19.6], [1.701699585E12, 39.6], [1.70169997E12, 38.8], [1.70169938E12, 13.2], [1.701699765E12, 39.6], [1.701699675E12, 39.2], [1.70169972E12, 38.8], [1.701699875E12, 39.0], [1.701699535E12, 39.6], [1.70169992E12, 42.2], [1.70169983E12, 39.2], [1.70169949E12, 37.2], [1.701699625E12, 39.6], [1.70170001E12, 27.2], [1.70169958E12, 40.0], [1.701699965E12, 38.6], [1.701699695E12, 40.0], [1.70169999E12, 38.8], [1.70169965E12, 39.4], [1.701699785E12, 38.8], [1.701699445E12, 38.4], [1.70169974E12, 39.0], [1.7016994E12, 38.6], [1.701699385E12, 20.0], [1.70169977E12, 38.8], [1.701699725E12, 39.2], [1.701699475E12, 39.8], [1.70169986E12, 39.8], [1.70169952E12, 39.6], [1.70169943E12, 39.0], [1.701699815E12, 38.2], [1.701699545E12, 39.0], [1.70169993E12, 39.8], [1.7016995E12, 39.0], [1.701699885E12, 39.8], [1.701699635E12, 38.6], [1.70170002E12, 13.2], [1.70169968E12, 39.6], [1.70169959E12, 38.8], [1.701699975E12, 39.6], [1.70169979E12, 38.8], [1.70169945E12, 39.8], [1.701699745E12, 38.2], [1.701699405E12, 39.4], [1.70169954E12, 39.6], [1.701699925E12, 39.2], [1.701699835E12, 39.4], [1.701699495E12, 41.4], [1.70169988E12, 40.0], [1.70169995E12, 39.6], [1.70169961E12, 39.8], [1.701699905E12, 39.0], [1.701699565E12, 39.2], [1.7016997E12, 37.6], [1.701699995E12, 38.4], [1.701699655E12, 38.8], [1.701700025E12, 6.6], [1.701699685E12, 38.2], [1.701699595E12, 39.0], [1.70169998E12, 38.6], [1.70169964E12, 40.2], [1.70169939E12, 25.8], [1.701699775E12, 38.6], [1.70169973E12, 39.8], [1.70169946E12, 40.0], [1.701699845E12, 38.4], [1.701699755E12, 39.0], [1.701699415E12, 39.8], [1.7016998E12, 39.2], [1.70169955E12, 39.0], [1.701699935E12, 38.8], [1.701699505E12, 40.4], [1.70169989E12, 39.0], [1.701699705E12, 39.6], [1.70169966E12, 39.8], [1.701699795E12, 39.4], [1.701699455E12, 39.2], [1.70169984E12, 39.4], [1.70169975E12, 39.8], [1.70169941E12, 39.0], [1.701699865E12, 38.4], [1.701699525E12, 40.6], [1.701699435E12, 39.0], [1.70169982E12, 40.8], [1.70169948E12, 39.0], [1.701699955E12, 39.2], [1.701699615E12, 39.0], [1.7017E12, 39.4], [1.70169991E12, 39.4], [1.70169957E12, 38.4], [1.701699555E12, 39.2], [1.70169994E12, 40.0], [1.7016996E12, 39.2], [1.70169951E12, 39.6], [1.701699895E12, 39.4], [1.70170003E12, 1.0], [1.70169969E12, 39.2], [1.701699985E12, 39.8], [1.701699645E12, 38.2], [1.701699715E12, 39.0], [1.701699375E12, 0.6], [1.70169976E12, 38.8], [1.70169967E12, 38.8], [1.701699465E12, 38.8], [1.70169985E12, 39.8], [1.70169942E12, 39.4], [1.701699805E12, 38.8], [1.70169962E12, 39.6], [1.701700005E12, 32.8], [1.701699915E12, 36.6], [1.701699575E12, 40.0], [1.70169996E12, 38.8], [1.70169971E12, 39.2], [1.70169937E12, 0.6], [1.701699665E12, 40.0], [1.701699395E12, 32.2], [1.70169978E12, 40.0], [1.70169944E12, 39.6], [1.701699735E12, 38.0], [1.70169987E12, 38.8], [1.70169953E12, 39.0], [1.701699825E12, 39.0], [1.701699485E12, 39.4]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.701699735E12, 0.2], [1.70169987E12, 0.2], [1.7016997E12, 0.2], [1.701699835E12, 0.4], [1.70169974E12, 0.2]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 5000, "maxX": 1.70170003E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

