/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 42.0, "minX": 0.0, "maxY": 60029.0, "series": [{"data": [[0.0, 42.0], [0.1, 43.0], [0.2, 43.0], [0.3, 43.0], [0.4, 43.0], [0.5, 43.0], [0.6, 43.0], [0.7, 43.0], [0.8, 44.0], [0.9, 44.0], [1.0, 44.0], [1.1, 44.0], [1.2, 44.0], [1.3, 44.0], [1.4, 44.0], [1.5, 44.0], [1.6, 45.0], [1.7, 45.0], [1.8, 45.0], [1.9, 45.0], [2.0, 45.0], [2.1, 45.0], [2.2, 45.0], [2.3, 45.0], [2.4, 45.0], [2.5, 45.0], [2.6, 45.0], [2.7, 45.0], [2.8, 45.0], [2.9, 45.0], [3.0, 45.0], [3.1, 45.0], [3.2, 45.0], [3.3, 45.0], [3.4, 45.0], [3.5, 45.0], [3.6, 46.0], [3.7, 46.0], [3.8, 46.0], [3.9, 46.0], [4.0, 46.0], [4.1, 46.0], [4.2, 46.0], [4.3, 46.0], [4.4, 46.0], [4.5, 46.0], [4.6, 46.0], [4.7, 46.0], [4.8, 46.0], [4.9, 46.0], [5.0, 46.0], [5.1, 46.0], [5.2, 46.0], [5.3, 46.0], [5.4, 46.0], [5.5, 46.0], [5.6, 47.0], [5.7, 47.0], [5.8, 47.0], [5.9, 47.0], [6.0, 47.0], [6.1, 48.0], [6.2, 48.0], [6.3, 48.0], [6.4, 48.0], [6.5, 49.0], [6.6, 49.0], [6.7, 49.0], [6.8, 53.0], [6.9, 395.0], [7.0, 405.0], [7.1, 405.0], [7.2, 406.0], [7.3, 408.0], [7.4, 410.0], [7.5, 413.0], [7.6, 415.0], [7.7, 416.0], [7.8, 417.0], [7.9, 419.0], [8.0, 422.0], [8.1, 422.0], [8.2, 424.0], [8.3, 424.0], [8.4, 426.0], [8.5, 428.0], [8.6, 431.0], [8.7, 433.0], [8.8, 433.0], [8.9, 436.0], [9.0, 438.0], [9.1, 439.0], [9.2, 440.0], [9.3, 441.0], [9.4, 442.0], [9.5, 444.0], [9.6, 446.0], [9.7, 446.0], [9.8, 447.0], [9.9, 447.0], [10.0, 449.0], [10.1, 449.0], [10.2, 450.0], [10.3, 451.0], [10.4, 452.0], [10.5, 452.0], [10.6, 453.0], [10.7, 455.0], [10.8, 455.0], [10.9, 456.0], [11.0, 456.0], [11.1, 457.0], [11.2, 458.0], [11.3, 459.0], [11.4, 462.0], [11.5, 463.0], [11.6, 464.0], [11.7, 464.0], [11.8, 465.0], [11.9, 465.0], [12.0, 466.0], [12.1, 467.0], [12.2, 468.0], [12.3, 470.0], [12.4, 471.0], [12.5, 472.0], [12.6, 472.0], [12.7, 473.0], [12.8, 474.0], [12.9, 475.0], [13.0, 475.0], [13.1, 476.0], [13.2, 476.0], [13.3, 477.0], [13.4, 478.0], [13.5, 480.0], [13.6, 481.0], [13.7, 482.0], [13.8, 482.0], [13.9, 483.0], [14.0, 483.0], [14.1, 484.0], [14.2, 485.0], [14.3, 486.0], [14.4, 486.0], [14.5, 487.0], [14.6, 487.0], [14.7, 489.0], [14.8, 490.0], [14.9, 490.0], [15.0, 491.0], [15.1, 493.0], [15.2, 494.0], [15.3, 496.0], [15.4, 496.0], [15.5, 497.0], [15.6, 499.0], [15.7, 500.0], [15.8, 504.0], [15.9, 505.0], [16.0, 505.0], [16.1, 506.0], [16.2, 506.0], [16.3, 507.0], [16.4, 508.0], [16.5, 508.0], [16.6, 509.0], [16.7, 510.0], [16.8, 510.0], [16.9, 511.0], [17.0, 511.0], [17.1, 511.0], [17.2, 512.0], [17.3, 513.0], [17.4, 514.0], [17.5, 515.0], [17.6, 515.0], [17.7, 517.0], [17.8, 517.0], [17.9, 518.0], [18.0, 519.0], [18.1, 520.0], [18.2, 521.0], [18.3, 523.0], [18.4, 527.0], [18.5, 527.0], [18.6, 529.0], [18.7, 529.0], [18.8, 529.0], [18.9, 530.0], [19.0, 530.0], [19.1, 532.0], [19.2, 532.0], [19.3, 532.0], [19.4, 533.0], [19.5, 534.0], [19.6, 536.0], [19.7, 537.0], [19.8, 539.0], [19.9, 541.0], [20.0, 541.0], [20.1, 544.0], [20.2, 544.0], [20.3, 545.0], [20.4, 546.0], [20.5, 546.0], [20.6, 546.0], [20.7, 547.0], [20.8, 548.0], [20.9, 548.0], [21.0, 549.0], [21.1, 550.0], [21.2, 551.0], [21.3, 552.0], [21.4, 552.0], [21.5, 553.0], [21.6, 554.0], [21.7, 554.0], [21.8, 555.0], [21.9, 555.0], [22.0, 555.0], [22.1, 557.0], [22.2, 558.0], [22.3, 559.0], [22.4, 559.0], [22.5, 560.0], [22.6, 560.0], [22.7, 561.0], [22.8, 562.0], [22.9, 564.0], [23.0, 569.0], [23.1, 569.0], [23.2, 572.0], [23.3, 573.0], [23.4, 575.0], [23.5, 576.0], [23.6, 577.0], [23.7, 577.0], [23.8, 578.0], [23.9, 580.0], [24.0, 581.0], [24.1, 581.0], [24.2, 582.0], [24.3, 582.0], [24.4, 586.0], [24.5, 588.0], [24.6, 588.0], [24.7, 589.0], [24.8, 590.0], [24.9, 593.0], [25.0, 594.0], [25.1, 595.0], [25.2, 597.0], [25.3, 597.0], [25.4, 598.0], [25.5, 599.0], [25.6, 603.0], [25.7, 605.0], [25.8, 606.0], [25.9, 606.0], [26.0, 607.0], [26.1, 607.0], [26.2, 610.0], [26.3, 612.0], [26.4, 613.0], [26.5, 613.0], [26.6, 615.0], [26.7, 616.0], [26.8, 616.0], [26.9, 618.0], [27.0, 618.0], [27.1, 619.0], [27.2, 621.0], [27.3, 621.0], [27.4, 623.0], [27.5, 623.0], [27.6, 626.0], [27.7, 626.0], [27.8, 627.0], [27.9, 627.0], [28.0, 628.0], [28.1, 630.0], [28.2, 631.0], [28.3, 632.0], [28.4, 633.0], [28.5, 636.0], [28.6, 636.0], [28.7, 637.0], [28.8, 639.0], [28.9, 640.0], [29.0, 640.0], [29.1, 641.0], [29.2, 642.0], [29.3, 643.0], [29.4, 644.0], [29.5, 645.0], [29.6, 647.0], [29.7, 647.0], [29.8, 648.0], [29.9, 649.0], [30.0, 650.0], [30.1, 652.0], [30.2, 653.0], [30.3, 653.0], [30.4, 655.0], [30.5, 655.0], [30.6, 657.0], [30.7, 660.0], [30.8, 660.0], [30.9, 661.0], [31.0, 662.0], [31.1, 663.0], [31.2, 667.0], [31.3, 667.0], [31.4, 667.0], [31.5, 669.0], [31.6, 670.0], [31.7, 674.0], [31.8, 675.0], [31.9, 676.0], [32.0, 676.0], [32.1, 678.0], [32.2, 680.0], [32.3, 681.0], [32.4, 683.0], [32.5, 684.0], [32.6, 684.0], [32.7, 687.0], [32.8, 689.0], [32.9, 690.0], [33.0, 690.0], [33.1, 692.0], [33.2, 694.0], [33.3, 694.0], [33.4, 696.0], [33.5, 696.0], [33.6, 696.0], [33.7, 698.0], [33.8, 699.0], [33.9, 701.0], [34.0, 701.0], [34.1, 703.0], [34.2, 703.0], [34.3, 704.0], [34.4, 706.0], [34.5, 707.0], [34.6, 710.0], [34.7, 710.0], [34.8, 711.0], [34.9, 712.0], [35.0, 713.0], [35.1, 714.0], [35.2, 715.0], [35.3, 717.0], [35.4, 717.0], [35.5, 718.0], [35.6, 718.0], [35.7, 719.0], [35.8, 721.0], [35.9, 722.0], [36.0, 723.0], [36.1, 724.0], [36.2, 726.0], [36.3, 726.0], [36.4, 730.0], [36.5, 734.0], [36.6, 735.0], [36.7, 736.0], [36.8, 737.0], [36.9, 737.0], [37.0, 739.0], [37.1, 740.0], [37.2, 742.0], [37.3, 744.0], [37.4, 746.0], [37.5, 747.0], [37.6, 747.0], [37.7, 749.0], [37.8, 750.0], [37.9, 751.0], [38.0, 752.0], [38.1, 753.0], [38.2, 755.0], [38.3, 757.0], [38.4, 761.0], [38.5, 761.0], [38.6, 764.0], [38.7, 766.0], [38.8, 769.0], [38.9, 770.0], [39.0, 772.0], [39.1, 772.0], [39.2, 775.0], [39.3, 776.0], [39.4, 777.0], [39.5, 777.0], [39.6, 779.0], [39.7, 782.0], [39.8, 784.0], [39.9, 788.0], [40.0, 788.0], [40.1, 789.0], [40.2, 790.0], [40.3, 792.0], [40.4, 792.0], [40.5, 793.0], [40.6, 794.0], [40.7, 794.0], [40.8, 795.0], [40.9, 797.0], [41.0, 797.0], [41.1, 800.0], [41.2, 802.0], [41.3, 804.0], [41.4, 807.0], [41.5, 811.0], [41.6, 812.0], [41.7, 814.0], [41.8, 814.0], [41.9, 816.0], [42.0, 819.0], [42.1, 820.0], [42.2, 822.0], [42.3, 824.0], [42.4, 824.0], [42.5, 825.0], [42.6, 826.0], [42.7, 827.0], [42.8, 829.0], [42.9, 830.0], [43.0, 830.0], [43.1, 831.0], [43.2, 833.0], [43.3, 834.0], [43.4, 835.0], [43.5, 837.0], [43.6, 840.0], [43.7, 843.0], [43.8, 845.0], [43.9, 848.0], [44.0, 848.0], [44.1, 850.0], [44.2, 852.0], [44.3, 858.0], [44.4, 860.0], [44.5, 866.0], [44.6, 868.0], [44.7, 868.0], [44.8, 869.0], [44.9, 870.0], [45.0, 872.0], [45.1, 872.0], [45.2, 874.0], [45.3, 876.0], [45.4, 877.0], [45.5, 879.0], [45.6, 879.0], [45.7, 883.0], [45.8, 884.0], [45.9, 888.0], [46.0, 890.0], [46.1, 892.0], [46.2, 892.0], [46.3, 895.0], [46.4, 897.0], [46.5, 898.0], [46.6, 899.0], [46.7, 899.0], [46.8, 900.0], [46.9, 900.0], [47.0, 901.0], [47.1, 902.0], [47.2, 904.0], [47.3, 905.0], [47.4, 906.0], [47.5, 907.0], [47.6, 908.0], [47.7, 908.0], [47.8, 913.0], [47.9, 916.0], [48.0, 921.0], [48.1, 923.0], [48.2, 923.0], [48.3, 924.0], [48.4, 924.0], [48.5, 927.0], [48.6, 931.0], [48.7, 934.0], [48.8, 937.0], [48.9, 940.0], [49.0, 943.0], [49.1, 946.0], [49.2, 947.0], [49.3, 947.0], [49.4, 952.0], [49.5, 952.0], [49.6, 953.0], [49.7, 955.0], [49.8, 956.0], [49.9, 958.0], [50.0, 960.0], [50.1, 961.0], [50.2, 964.0], [50.3, 967.0], [50.4, 970.0], [50.5, 975.0], [50.6, 975.0], [50.7, 976.0], [50.8, 978.0], [50.9, 979.0], [51.0, 981.0], [51.1, 983.0], [51.2, 984.0], [51.3, 986.0], [51.4, 990.0], [51.5, 991.0], [51.6, 993.0], [51.7, 998.0], [51.8, 1001.0], [51.9, 1003.0], [52.0, 1003.0], [52.1, 1007.0], [52.2, 1009.0], [52.3, 1012.0], [52.4, 1013.0], [52.5, 1015.0], [52.6, 1017.0], [52.7, 1019.0], [52.8, 1020.0], [52.9, 1021.0], [53.0, 1026.0], [53.1, 1026.0], [53.2, 1028.0], [53.3, 1029.0], [53.4, 1032.0], [53.5, 1033.0], [53.6, 1034.0], [53.7, 1036.0], [53.8, 1038.0], [53.9, 1039.0], [54.0, 1048.0], [54.1, 1050.0], [54.2, 1053.0], [54.3, 1056.0], [54.4, 1056.0], [54.5, 1062.0], [54.6, 1064.0], [54.7, 1067.0], [54.8, 1074.0], [54.9, 1076.0], [55.0, 1079.0], [55.1, 1080.0], [55.2, 1080.0], [55.3, 1085.0], [55.4, 1086.0], [55.5, 1087.0], [55.6, 1088.0], [55.7, 1091.0], [55.8, 1093.0], [55.9, 1095.0], [56.0, 1097.0], [56.1, 1097.0], [56.2, 1100.0], [56.3, 1101.0], [56.4, 1102.0], [56.5, 1103.0], [56.6, 1104.0], [56.7, 1105.0], [56.8, 1107.0], [56.9, 1109.0], [57.0, 1111.0], [57.1, 1112.0], [57.2, 1113.0], [57.3, 1113.0], [57.4, 1116.0], [57.5, 1119.0], [57.6, 1121.0], [57.7, 1123.0], [57.8, 1131.0], [57.9, 1133.0], [58.0, 1136.0], [58.1, 1137.0], [58.2, 1140.0], [58.3, 1142.0], [58.4, 1145.0], [58.5, 1147.0], [58.6, 1153.0], [58.7, 1158.0], [58.8, 1158.0], [58.9, 1161.0], [59.0, 1162.0], [59.1, 1165.0], [59.2, 1171.0], [59.3, 1175.0], [59.4, 1176.0], [59.5, 1176.0], [59.6, 1178.0], [59.7, 1181.0], [59.8, 1183.0], [59.9, 1184.0], [60.0, 1185.0], [60.1, 1186.0], [60.2, 1189.0], [60.3, 1192.0], [60.4, 1193.0], [60.5, 1194.0], [60.6, 1196.0], [60.7, 1197.0], [60.8, 1198.0], [60.9, 1199.0], [61.0, 1200.0], [61.1, 1202.0], [61.2, 1203.0], [61.3, 1205.0], [61.4, 1212.0], [61.5, 1214.0], [61.6, 1215.0], [61.7, 1218.0], [61.8, 1220.0], [61.9, 1222.0], [62.0, 1229.0], [62.1, 1231.0], [62.2, 1232.0], [62.3, 1236.0], [62.4, 1238.0], [62.5, 1243.0], [62.6, 1253.0], [62.7, 1254.0], [62.8, 1263.0], [62.9, 1272.0], [63.0, 1273.0], [63.1, 1277.0], [63.2, 1279.0], [63.3, 1283.0], [63.4, 1287.0], [63.5, 1288.0], [63.6, 1288.0], [63.7, 1291.0], [63.8, 1294.0], [63.9, 1295.0], [64.0, 1296.0], [64.1, 1300.0], [64.2, 1302.0], [64.3, 1302.0], [64.4, 1304.0], [64.5, 1306.0], [64.6, 1307.0], [64.7, 1310.0], [64.8, 1311.0], [64.9, 1313.0], [65.0, 1314.0], [65.1, 1314.0], [65.2, 1316.0], [65.3, 1322.0], [65.4, 1323.0], [65.5, 1326.0], [65.6, 1329.0], [65.7, 1336.0], [65.8, 1337.0], [65.9, 1340.0], [66.0, 1341.0], [66.1, 1341.0], [66.2, 1344.0], [66.3, 1350.0], [66.4, 1352.0], [66.5, 1352.0], [66.6, 1357.0], [66.7, 1359.0], [66.8, 1364.0], [66.9, 1368.0], [67.0, 1368.0], [67.1, 1371.0], [67.2, 1373.0], [67.3, 1374.0], [67.4, 1376.0], [67.5, 1378.0], [67.6, 1379.0], [67.7, 1381.0], [67.8, 1386.0], [67.9, 1386.0], [68.0, 1389.0], [68.1, 1391.0], [68.2, 1392.0], [68.3, 1394.0], [68.4, 1396.0], [68.5, 1402.0], [68.6, 1402.0], [68.7, 1403.0], [68.8, 1404.0], [68.9, 1404.0], [69.0, 1406.0], [69.1, 1407.0], [69.2, 1408.0], [69.3, 1410.0], [69.4, 1411.0], [69.5, 1412.0], [69.6, 1415.0], [69.7, 1417.0], [69.8, 1419.0], [69.9, 1425.0], [70.0, 1430.0], [70.1, 1433.0], [70.2, 1438.0], [70.3, 1448.0], [70.4, 1449.0], [70.5, 1457.0], [70.6, 1460.0], [70.7, 1460.0], [70.8, 1464.0], [70.9, 1466.0], [71.0, 1467.0], [71.1, 1474.0], [71.2, 1475.0], [71.3, 1483.0], [71.4, 1486.0], [71.5, 1487.0], [71.6, 1491.0], [71.7, 1495.0], [71.8, 1499.0], [71.9, 1500.0], [72.0, 1501.0], [72.1, 1506.0], [72.2, 1511.0], [72.3, 1515.0], [72.4, 1517.0], [72.5, 1519.0], [72.6, 1523.0], [72.7, 1524.0], [72.8, 1529.0], [72.9, 1538.0], [73.0, 1543.0], [73.1, 1547.0], [73.2, 1559.0], [73.3, 1562.0], [73.4, 1565.0], [73.5, 1568.0], [73.6, 1570.0], [73.7, 1571.0], [73.8, 1572.0], [73.9, 1575.0], [74.0, 1577.0], [74.1, 1579.0], [74.2, 1582.0], [74.3, 1593.0], [74.4, 1595.0], [74.5, 1598.0], [74.6, 1602.0], [74.7, 1603.0], [74.8, 1604.0], [74.9, 1605.0], [75.0, 1607.0], [75.1, 1608.0], [75.2, 1612.0], [75.3, 1614.0], [75.4, 1624.0], [75.5, 1630.0], [75.6, 1633.0], [75.7, 1635.0], [75.8, 1642.0], [75.9, 1644.0], [76.0, 1647.0], [76.1, 1666.0], [76.2, 1674.0], [76.3, 1677.0], [76.4, 1679.0], [76.5, 1680.0], [76.6, 1682.0], [76.7, 1691.0], [76.8, 1695.0], [76.9, 1698.0], [77.0, 1701.0], [77.1, 1702.0], [77.2, 1703.0], [77.3, 1705.0], [77.4, 1708.0], [77.5, 1708.0], [77.6, 1719.0], [77.7, 1721.0], [77.8, 1729.0], [77.9, 1732.0], [78.0, 1750.0], [78.1, 1753.0], [78.2, 1765.0], [78.3, 1775.0], [78.4, 1790.0], [78.5, 1795.0], [78.6, 1796.0], [78.7, 1805.0], [78.8, 1808.0], [78.9, 1813.0], [79.0, 1830.0], [79.1, 1833.0], [79.2, 1838.0], [79.3, 1846.0], [79.4, 1852.0], [79.5, 1861.0], [79.6, 1869.0], [79.7, 1873.0], [79.8, 1878.0], [79.9, 1879.0], [80.0, 1885.0], [80.1, 1893.0], [80.2, 1909.0], [80.3, 1910.0], [80.4, 1914.0], [80.5, 1916.0], [80.6, 1920.0], [80.7, 1925.0], [80.8, 1928.0], [80.9, 1932.0], [81.0, 1939.0], [81.1, 1959.0], [81.2, 1969.0], [81.3, 1982.0], [81.4, 1982.0], [81.5, 1987.0], [81.6, 1991.0], [81.7, 1997.0], [81.8, 2001.0], [81.9, 2002.0], [82.0, 2007.0], [82.1, 2015.0], [82.2, 2021.0], [82.3, 2046.0], [82.4, 2070.0], [82.5, 2072.0], [82.6, 2079.0], [82.7, 2085.0], [82.8, 2086.0], [82.9, 2092.0], [83.0, 2098.0], [83.1, 2112.0], [83.2, 2124.0], [83.3, 2144.0], [83.4, 2234.0], [83.5, 2285.0], [83.6, 2285.0], [83.7, 2293.0], [83.8, 2300.0], [83.9, 2364.0], [84.0, 2415.0], [84.1, 2554.0], [84.2, 3128.0], [84.3, 3176.0], [84.4, 3198.0], [84.5, 3224.0], [84.6, 3300.0], [84.7, 3307.0], [84.8, 3657.0], [84.9, 3769.0], [85.0, 3818.0], [85.1, 3881.0], [85.2, 3885.0], [85.3, 3894.0], [85.4, 3898.0], [85.5, 3901.0], [85.6, 3906.0], [85.7, 3984.0], [85.8, 3988.0], [85.9, 3998.0], [86.0, 4092.0], [86.1, 4104.0], [86.2, 4129.0], [86.3, 4145.0], [86.4, 4179.0], [86.5, 4266.0], [86.6, 4370.0], [86.7, 4509.0], [86.8, 4518.0], [86.9, 4595.0], [87.0, 5210.0], [87.1, 5270.0], [87.2, 5297.0], [87.3, 5399.0], [87.4, 5404.0], [87.5, 5553.0], [87.6, 5707.0], [87.7, 5857.0], [87.8, 16377.0], [87.9, 16548.0], [88.0, 16562.0], [88.1, 16782.0], [88.2, 16847.0], [88.3, 17086.0], [88.4, 17399.0], [88.5, 17495.0], [88.6, 17616.0], [88.7, 17707.0], [88.8, 17992.0], [88.9, 18192.0], [89.0, 18309.0], [89.1, 18335.0], [89.2, 18476.0], [89.3, 18504.0], [89.4, 18768.0], [89.5, 18824.0], [89.6, 18862.0], [89.7, 18862.0], [89.8, 19134.0], [89.9, 19148.0], [90.0, 19360.0], [90.1, 19497.0], [90.2, 19525.0], [90.3, 19602.0], [90.4, 19641.0], [90.5, 19642.0], [90.6, 19828.0], [90.7, 20232.0], [90.8, 20304.0], [90.9, 20304.0], [91.0, 20951.0], [91.1, 22411.0], [91.2, 22835.0], [91.3, 22968.0], [91.4, 23278.0], [91.5, 23453.0], [91.6, 23544.0], [91.7, 23650.0], [91.8, 23887.0], [91.9, 24081.0], [92.0, 29771.0], [92.1, 30066.0], [92.2, 30194.0], [92.3, 30360.0], [92.4, 30449.0], [92.5, 30535.0], [92.6, 30716.0], [92.7, 30811.0], [92.8, 30887.0], [92.9, 30956.0], [93.0, 31022.0], [93.1, 31443.0], [93.2, 31727.0], [93.3, 32152.0], [93.4, 32241.0], [93.5, 32433.0], [93.6, 33591.0], [93.7, 34483.0], [93.8, 35176.0], [93.9, 35979.0], [94.0, 36026.0], [94.1, 36479.0], [94.2, 36620.0], [94.3, 37088.0], [94.4, 37580.0], [94.5, 37750.0], [94.6, 38123.0], [94.7, 38397.0], [94.8, 39101.0], [94.9, 39187.0], [95.0, 39673.0], [95.1, 40242.0], [95.2, 40389.0], [95.3, 40620.0], [95.4, 40771.0], [95.5, 41498.0], [95.6, 41894.0], [95.7, 42190.0], [95.8, 42688.0], [95.9, 43052.0], [96.0, 43799.0], [96.1, 44237.0], [96.2, 44487.0], [96.3, 44627.0], [96.4, 44679.0], [96.5, 44833.0], [96.6, 44958.0], [96.7, 45033.0], [96.8, 45108.0], [96.9, 45108.0], [97.0, 45327.0], [97.1, 45559.0], [97.2, 45649.0], [97.3, 46761.0], [97.4, 49673.0], [97.5, 53448.0], [97.6, 55282.0], [97.7, 56630.0], [97.8, 58482.0], [97.9, 58483.0], [98.0, 60022.0], [98.1, 60023.0], [98.2, 60023.0], [98.3, 60024.0], [98.4, 60024.0], [98.5, 60024.0], [98.6, 60024.0], [98.7, 60025.0], [98.8, 60025.0], [98.9, 60025.0], [99.0, 60025.0], [99.1, 60025.0], [99.2, 60025.0], [99.3, 60026.0], [99.4, 60026.0], [99.5, 60026.0], [99.6, 60026.0], [99.7, 60027.0], [99.8, 60027.0], [99.9, 60029.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 179.0, "series": [{"data": [[0.0, 125.0], [33500.0, 1.0], [34700.0, 1.0], [35100.0, 1.0], [36500.0, 1.0], [35900.0, 1.0], [36700.0, 1.0], [38100.0, 1.0], [37700.0, 2.0], [37100.0, 1.0], [37500.0, 1.0], [38300.0, 1.0], [39100.0, 3.0], [40700.0, 1.0], [40300.0, 1.0], [42100.0, 1.0], [42500.0, 1.0], [41100.0, 1.0], [44900.0, 2.0], [43700.0, 1.0], [43900.0, 1.0], [44700.0, 1.0], [44500.0, 1.0], [46700.0, 1.0], [45300.0, 2.0], [45100.0, 3.0], [45500.0, 1.0], [47300.0, 1.0], [51100.0, 1.0], [57900.0, 1.0], [59900.0, 1.0], [300.0, 2.0], [400.0, 158.0], [500.0, 179.0], [600.0, 152.0], [700.0, 130.0], [800.0, 104.0], [900.0, 90.0], [1000.0, 81.0], [1100.0, 87.0], [1200.0, 57.0], [1300.0, 80.0], [1400.0, 61.0], [1500.0, 49.0], [1600.0, 44.0], [1700.0, 31.0], [1800.0, 28.0], [1900.0, 28.0], [2000.0, 23.0], [2100.0, 7.0], [2300.0, 4.0], [2200.0, 7.0], [2400.0, 1.0], [2500.0, 1.0], [2600.0, 1.0], [3100.0, 5.0], [3300.0, 2.0], [3200.0, 3.0], [3600.0, 2.0], [3700.0, 3.0], [3800.0, 9.0], [3900.0, 8.0], [4000.0, 3.0], [4100.0, 6.0], [4200.0, 3.0], [4300.0, 1.0], [4500.0, 5.0], [4800.0, 1.0], [5200.0, 5.0], [5300.0, 2.0], [5600.0, 1.0], [5500.0, 1.0], [5400.0, 2.0], [5800.0, 2.0], [5700.0, 1.0], [16100.0, 1.0], [16300.0, 1.0], [17200.0, 1.0], [16700.0, 2.0], [16400.0, 1.0], [16500.0, 2.0], [17300.0, 1.0], [17000.0, 1.0], [17400.0, 1.0], [16800.0, 2.0], [16900.0, 1.0], [18200.0, 1.0], [17900.0, 1.0], [18000.0, 1.0], [18100.0, 1.0], [18300.0, 3.0], [17700.0, 2.0], [17600.0, 2.0], [18400.0, 2.0], [17500.0, 1.0], [19000.0, 1.0], [19100.0, 3.0], [19400.0, 1.0], [18800.0, 4.0], [19300.0, 2.0], [19200.0, 1.0], [18700.0, 3.0], [18500.0, 1.0], [19600.0, 6.0], [19800.0, 1.0], [19500.0, 2.0], [20300.0, 4.0], [20200.0, 1.0], [20900.0, 2.0], [20500.0, 1.0], [22400.0, 2.0], [23500.0, 3.0], [22800.0, 1.0], [23200.0, 2.0], [23400.0, 1.0], [23300.0, 1.0], [22900.0, 1.0], [24000.0, 1.0], [23600.0, 1.0], [23800.0, 1.0], [23900.0, 1.0], [24100.0, 1.0], [29700.0, 1.0], [30000.0, 1.0], [29900.0, 1.0], [30700.0, 1.0], [30600.0, 1.0], [30500.0, 1.0], [30400.0, 2.0], [30300.0, 1.0], [30200.0, 1.0], [30100.0, 2.0], [30800.0, 4.0], [31000.0, 2.0], [31400.0, 3.0], [31700.0, 1.0], [30900.0, 1.0], [32400.0, 2.0], [32200.0, 1.0], [32100.0, 2.0], [32000.0, 1.0], [34400.0, 1.0], [34200.0, 1.0], [35800.0, 1.0], [36600.0, 1.0], [36200.0, 1.0], [36000.0, 1.0], [36400.0, 1.0], [37000.0, 1.0], [38400.0, 1.0], [38200.0, 1.0], [40200.0, 2.0], [40600.0, 2.0], [39600.0, 1.0], [39200.0, 1.0], [40400.0, 1.0], [41800.0, 2.0], [42600.0, 1.0], [42800.0, 1.0], [43000.0, 1.0], [41400.0, 1.0], [44400.0, 1.0], [43600.0, 1.0], [44200.0, 1.0], [44600.0, 3.0], [45000.0, 1.0], [44800.0, 2.0], [45400.0, 1.0], [45600.0, 2.0], [49600.0, 1.0], [53400.0, 1.0], [55000.0, 1.0], [55200.0, 1.0], [56600.0, 1.0], [55600.0, 1.0], [58400.0, 2.0], [60000.0, 37.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 60000.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 161.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1021.0, "series": [{"data": [[0.0, 161.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 1021.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 350.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 286.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 9.0, "minX": 1.701271569E12, "maxY": 100.0, "series": [{"data": [[1.701271764E12, 100.0], [1.701271846E12, 100.0], [1.701271633E12, 100.0], [1.701271592E12, 100.0], [1.701271805E12, 100.0], [1.701271715E12, 100.0], [1.701271674E12, 100.0], [1.701271756E12, 100.0], [1.701271625E12, 100.0], [1.701271584E12, 100.0], [1.701271797E12, 100.0], [1.701271707E12, 100.0], [1.701271666E12, 100.0], [1.701271748E12, 100.0], [1.70127183E12, 100.0], [1.701271617E12, 100.0], [1.701271789E12, 100.0], [1.701271699E12, 100.0], [1.701271658E12, 100.0], [1.701271871E12, 98.3], [1.70127174E12, 100.0], [1.701271609E12, 100.0], [1.701271781E12, 100.0], [1.701271691E12, 100.0], [1.70127165E12, 100.0], [1.701271863E12, 100.0], [1.701271732E12, 100.0], [1.701271814E12, 100.0], [1.701271601E12, 100.0], [1.701271773E12, 100.0], [1.701271683E12, 100.0], [1.701271642E12, 100.0], [1.701271855E12, 100.0], [1.701271724E12, 100.0], [1.701271763E12, 100.0], [1.701271722E12, 100.0], [1.701271804E12, 100.0], [1.701271591E12, 100.0], [1.701271673E12, 100.0], [1.701271632E12, 100.0], [1.701271845E12, 100.0], [1.701271755E12, 100.0], [1.701271714E12, 100.0], [1.701271796E12, 100.0], [1.701271583E12, 100.0], [1.701271665E12, 100.0], [1.701271624E12, 100.0], [1.701271747E12, 100.0], [1.701271706E12, 100.0], [1.701271788E12, 100.0], [1.701271575E12, 100.0], [1.701271657E12, 100.0], [1.701271616E12, 100.0], [1.701271829E12, 100.0], [1.701271739E12, 100.0], [1.701271698E12, 100.0], [1.70127178E12, 100.0], [1.701271862E12, 100.0], [1.701271649E12, 100.0], [1.701271608E12, 100.0], [1.701271731E12, 100.0], [1.70127169E12, 100.0], [1.701271772E12, 100.0], [1.701271854E12, 100.0], [1.701271641E12, 100.0], [1.7012716E12, 100.0], [1.701271813E12, 100.0], [1.701271723E12, 100.0], [1.701271682E12, 100.0], [1.701271721E12, 100.0], [1.70127168E12, 100.0], [1.70127159E12, 100.0], [1.701271803E12, 100.0], [1.701271762E12, 100.0], [1.701271844E12, 100.0], [1.701271631E12, 100.0], [1.701271713E12, 100.0], [1.701271672E12, 100.0], [1.701271582E12, 100.0], [1.701271795E12, 100.0], [1.701271754E12, 100.0], [1.701271836E12, 100.0], [1.701271623E12, 100.0], [1.701271705E12, 100.0], [1.701271664E12, 100.0], [1.701271574E12, 100.0], [1.701271787E12, 100.0], [1.701271746E12, 100.0], [1.701271615E12, 100.0], [1.701271697E12, 100.0], [1.701271656E12, 100.0], [1.701271869E12, 100.0], [1.701271779E12, 100.0], [1.701271738E12, 100.0], [1.701271607E12, 100.0], [1.701271689E12, 100.0], [1.701271648E12, 100.0], [1.701271861E12, 100.0], [1.701271771E12, 100.0], [1.70127173E12, 100.0], [1.701271812E12, 100.0], [1.701271599E12, 100.0], [1.701271681E12, 100.0], [1.70127164E12, 100.0], [1.701271853E12, 100.0], [1.701271679E12, 100.0], [1.701271761E12, 100.0], [1.70127172E12, 100.0], [1.70127163E12, 100.0], [1.701271802E12, 100.0], [1.701271589E12, 100.0], [1.701271671E12, 100.0], [1.701271753E12, 100.0], [1.701271712E12, 100.0], [1.701271622E12, 100.0], [1.701271835E12, 100.0], [1.701271794E12, 100.0], [1.701271581E12, 100.0], [1.701271663E12, 100.0], [1.701271745E12, 100.0], [1.701271704E12, 100.0], [1.701271614E12, 100.0], [1.701271786E12, 100.0], [1.701271573E12, 100.0], [1.701271655E12, 100.0], [1.701271737E12, 100.0], [1.701271696E12, 100.0], [1.701271606E12, 100.0], [1.701271778E12, 100.0], [1.70127186E12, 100.0], [1.701271647E12, 100.0], [1.701271729E12, 100.0], [1.701271688E12, 100.0], [1.701271901E12, 9.0], [1.701271598E12, 100.0], [1.701271811E12, 100.0], [1.70127177E12, 100.0], [1.701271639E12, 100.0], [1.701271678E12, 100.0], [1.70127185E12, 100.0], [1.701271637E12, 100.0], [1.701271719E12, 100.0], [1.701271588E12, 100.0], [1.701271801E12, 100.0], [1.70127176E12, 100.0], [1.70127167E12, 100.0], [1.701271629E12, 100.0], [1.701271711E12, 100.0], [1.70127158E12, 100.0], [1.701271793E12, 100.0], [1.701271752E12, 100.0], [1.701271662E12, 100.0], [1.701271834E12, 100.0], [1.701271621E12, 100.0], [1.701271703E12, 100.0], [1.701271572E12, 100.0], [1.701271785E12, 100.0], [1.701271744E12, 100.0], [1.701271654E12, 100.0], [1.701271867E12, 100.0], [1.701271613E12, 100.0], [1.701271695E12, 100.0], [1.701271777E12, 100.0], [1.701271736E12, 100.0], [1.701271646E12, 100.0], [1.701271859E12, 100.0], [1.701271605E12, 100.0], [1.701271687E12, 100.0], [1.701271769E12, 100.0], [1.701271728E12, 100.0], [1.701271638E12, 100.0], [1.701271851E12, 100.0], [1.70127181E12, 100.0], [1.701271597E12, 100.0], [1.701271849E12, 100.0], [1.701271808E12, 100.0], [1.701271718E12, 100.0], [1.70127189E12, 11.0], [1.701271677E12, 100.0], [1.701271587E12, 100.0], [1.701271759E12, 100.0], [1.701271628E12, 100.0], [1.701271841E12, 100.0], [1.7012718E12, 100.0], [1.70127171E12, 100.0], [1.701271669E12, 100.0], [1.701271751E12, 100.0], [1.70127162E12, 100.0], [1.701271833E12, 100.0], [1.701271792E12, 100.0], [1.701271702E12, 100.0], [1.701271661E12, 100.0], [1.701271571E12, 100.0], [1.701271743E12, 100.0], [1.701271612E12, 100.0], [1.701271784E12, 100.0], [1.701271694E12, 100.0], [1.701271866E12, 100.0], [1.701271653E12, 100.0], [1.701271735E12, 100.0], [1.701271604E12, 100.0], [1.701271776E12, 100.0], [1.701271686E12, 100.0], [1.701271858E12, 100.0], [1.701271645E12, 100.0], [1.701271727E12, 100.0], [1.701271596E12, 100.0], [1.701271809E12, 100.0], [1.701271768E12, 100.0], [1.701271635E12, 100.0], [1.701271594E12, 100.0], [1.701271676E12, 100.0], [1.701271848E12, 100.0], [1.701271758E12, 100.0], [1.701271717E12, 100.0], [1.701271627E12, 100.0], [1.701271586E12, 100.0], [1.701271799E12, 100.0], [1.701271668E12, 100.0], [1.70127184E12, 100.0], [1.70127175E12, 100.0], [1.701271709E12, 100.0], [1.701271619E12, 100.0], [1.701271791E12, 100.0], [1.70127166E12, 100.0], [1.701271873E12, 60.444444444444436], [1.701271832E12, 100.0], [1.701271742E12, 100.0], [1.701271701E12, 100.0], [1.701271611E12, 100.0], [1.701271783E12, 100.0], [1.701271652E12, 100.0], [1.701271865E12, 100.0], [1.701271734E12, 100.0], [1.701271693E12, 100.0], [1.701271603E12, 100.0], [1.701271775E12, 100.0], [1.701271644E12, 100.0], [1.701271857E12, 100.0], [1.701271726E12, 100.0], [1.701271685E12, 100.0], [1.701271595E12, 100.0], [1.701271767E12, 100.0], [1.701271806E12, 100.0], [1.701271593E12, 100.0], [1.701271765E12, 100.0], [1.701271675E12, 100.0], [1.701271634E12, 100.0], [1.701271716E12, 100.0], [1.701271888E12, 20.8125], [1.701271798E12, 100.0], [1.701271585E12, 100.0], [1.701271757E12, 100.0], [1.701271667E12, 100.0], [1.701271626E12, 100.0], [1.701271839E12, 100.0], [1.701271708E12, 100.0], [1.70127188E12, 52.0], [1.70127179E12, 100.0], [1.701271749E12, 100.0], [1.701271659E12, 100.0], [1.701271618E12, 100.0], [1.701271831E12, 100.0], [1.7012717E12, 100.0], [1.701271872E12, 77.16000000000001], [1.701271782E12, 100.0], [1.701271569E12, 100.0], [1.701271741E12, 100.0], [1.701271651E12, 100.0], [1.70127161E12, 100.0], [1.701271692E12, 100.0], [1.701271864E12, 100.0], [1.701271774E12, 100.0], [1.701271733E12, 100.0], [1.701271643E12, 100.0], [1.701271602E12, 100.0], [1.701271815E12, 100.0], [1.701271684E12, 100.0], [1.701271766E12, 100.0], [1.701271725E12, 100.0]], "isOverall": false, "label": "jp@gc - Ultimate Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.701271901E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 44.0, "minX": 9.0, "maxY": 42630.291666666664, "series": [{"data": [[53.0, 38255.0], [52.0, 42630.291666666664], [55.0, 38397.0], [54.0, 38472.0], [56.0, 44.0], [59.0, 9273.5], [58.0, 45.0], [60.0, 17495.0], [65.0, 47.166666666666664], [64.0, 10529.222222222223], [81.0, 18225.85], [99.0, 28410.416666666668], [98.0, 17845.0], [100.0, 3928.822904368358], [9.0, 33631.88888888889], [10.0, 23572.0], [11.0, 20549.0], [12.0, 22411.0], [13.0, 23544.0], [14.0, 17585.0], [15.0, 16847.0], [18.0, 21435.333333333332], [19.0, 16747.0], [20.0, 22968.0], [21.0, 23905.0], [22.0, 23887.0], [24.0, 20106.0], [26.0, 20086.0], [27.0, 23453.0], [28.0, 24081.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[97.33828382838287, 5362.800880088005]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.701271569E12, "maxY": 2389562.0, "series": [{"data": [[1.701271764E12, 1493497.0], [1.701271846E12, 1792204.0], [1.701271633E12, 746743.0], [1.701271592E12, 298668.0], [1.701271805E12, 896210.0], [1.701271715E12, 1045445.0], [1.701271674E12, 746728.0], [1.701271756E12, 1493469.0], [1.701271625E12, 597353.0], [1.701271584E12, 298710.0], [1.701271797E12, 1045438.0], [1.701271707E12, 1194785.0], [1.701271666E12, 597377.0], [1.701271748E12, 896120.0], [1.70127183E12, 448053.0], [1.701271617E12, 448051.0], [1.701271789E12, 1045436.0], [1.701271699E12, 1344122.0], [1.701271658E12, 896094.0], [1.701271871E12, 6268.0], [1.70127174E12, 1045418.0], [1.701271609E12, 448012.0], [1.701271781E12, 1941506.0], [1.701271691E12, 1045439.0], [1.70127165E12, 1194780.0], [1.701271863E12, 10203.0], [1.701271732E12, 1045443.0], [1.701271814E12, 746736.0], [1.701271601E12, 298726.0], [1.701271773E12, 1045413.0], [1.701271683E12, 896082.0], [1.701271642E12, 746714.0], [1.701271855E12, 13395.0], [1.701271724E12, 1493484.0], [1.701271763E12, 1642818.0], [1.701271722E12, 1194750.0], [1.701271804E12, 1045401.0], [1.701271591E12, 149340.0], [1.701271673E12, 746755.0], [1.701271632E12, 448050.0], [1.701271845E12, 898773.0], [1.701271755E12, 896064.0], [1.701271714E12, 1344103.0], [1.701271796E12, 1642790.0], [1.701271583E12, 149348.0], [1.701271665E12, 1045434.0], [1.701271624E12, 597364.0], [1.701271747E12, 1642799.0], [1.701271706E12, 1045382.0], [1.701271788E12, 1493472.0], [1.701271575E12, 298701.0], [1.701271657E12, 896030.0], [1.701271616E12, 746741.0], [1.701271829E12, 154693.0], [1.701271739E12, 448017.0], [1.701271698E12, 896102.0], [1.70127178E12, 746734.0], [1.701271862E12, 14136.0], [1.701271649E12, 746743.0], [1.701271608E12, 298675.0], [1.701271731E12, 1344113.0], [1.70127169E12, 1045443.0], [1.701271772E12, 1344134.0], [1.701271854E12, 1944171.0], [1.701271641E12, 896040.0], [1.7012716E12, 298675.0], [1.701271813E12, 597369.0], [1.701271723E12, 1642805.0], [1.701271682E12, 1045436.0], [1.701271721E12, 746769.0], [1.70127168E12, 597369.0], [1.70127159E12, 298692.0], [1.701271803E12, 1344138.0], [1.701271762E12, 1493472.0], [1.701271844E12, 298690.0], [1.701271631E12, 597396.0], [1.701271713E12, 597392.0], [1.701271672E12, 1194770.0], [1.701271582E12, 149367.0], [1.701271795E12, 896100.0], [1.701271754E12, 1493477.0], [1.701271836E12, 597387.0], [1.701271623E12, 149340.0], [1.701271705E12, 1493429.0], [1.701271664E12, 597387.0], [1.701271574E12, 149353.0], [1.701271787E12, 1941504.0], [1.701271746E12, 1045415.0], [1.701271615E12, 298688.0], [1.701271697E12, 746737.0], [1.701271656E12, 597357.0], [1.701271869E12, 2679.0], [1.701271779E12, 2240219.0], [1.701271738E12, 1642840.0], [1.701271607E12, 448020.0], [1.701271689E12, 896032.0], [1.701271648E12, 597387.0], [1.701271861E12, 9348.0], [1.701271771E12, 1194778.0], [1.70127173E12, 1642757.0], [1.701271812E12, 1344154.0], [1.701271599E12, 298689.0], [1.701271681E12, 1045461.0], [1.70127164E12, 149347.0], [1.701271853E12, 899021.0], [1.701271679E12, 1045417.0], [1.701271761E12, 746736.0], [1.70127172E12, 746751.0], [1.70127163E12, 597381.0], [1.701271802E12, 1194757.0], [1.701271589E12, 149349.0], [1.701271671E12, 746713.0], [1.701271753E12, 1642802.0], [1.701271712E12, 1045411.0], [1.701271622E12, 597378.0], [1.701271835E12, 898941.0], [1.701271794E12, 746865.0], [1.701271581E12, 149347.0], [1.701271663E12, 746740.0], [1.701271745E12, 1792168.0], [1.701271704E12, 1045427.0], [1.701271614E12, 149342.0], [1.701271786E12, 1493437.0], [1.701271573E12, 298690.0], [1.701271655E12, 746751.0], [1.701271737E12, 1194800.0], [1.701271696E12, 896057.0], [1.701271606E12, 298695.0], [1.701271778E12, 1493483.0], [1.70127186E12, 14991.0], [1.701271647E12, 896093.0], [1.701271729E12, 1344115.0], [1.701271688E12, 746730.0], [1.701271901E12, 2565.0], [1.701271598E12, 448035.0], [1.701271811E12, 896092.0], [1.70127177E12, 1642807.0], [1.701271639E12, 448056.0], [1.701271678E12, 597392.0], [1.70127185E12, 1642823.0], [1.701271637E12, 746715.0], [1.701271719E12, 1642817.0], [1.701271588E12, 298723.0], [1.701271801E12, 1045455.0], [1.70127176E12, 896038.0], [1.70127167E12, 746741.0], [1.701271629E12, 597363.0], [1.701271711E12, 1045426.0], [1.70127158E12, 298699.0], [1.701271793E12, 1493480.0], [1.701271752E12, 746746.0], [1.701271662E12, 597380.0], [1.701271834E12, 450722.0], [1.701271621E12, 746778.0], [1.701271703E12, 1493426.0], [1.701271572E12, 149350.0], [1.701271785E12, 896072.0], [1.701271744E12, 1642835.0], [1.701271654E12, 448030.0], [1.701271867E12, 2679.0], [1.701271613E12, 597430.0], [1.701271695E12, 896087.0], [1.701271777E12, 1792121.0], [1.701271736E12, 1194822.0], [1.701271646E12, 597383.0], [1.701271859E12, 4275.0], [1.701271605E12, 448052.0], [1.701271687E12, 746735.0], [1.701271769E12, 1045466.0], [1.701271728E12, 1344141.0], [1.701271638E12, 448062.0], [1.701271851E12, 155911.0], [1.70127181E12, 896108.0], [1.701271597E12, 149361.0], [1.701271849E12, 602732.0], [1.701271808E12, 597360.0], [1.701271718E12, 1045416.0], [1.70127189E12, 448047.0], [1.701271677E12, 746709.0], [1.701271587E12, 298668.0], [1.701271759E12, 1493455.0], [1.701271628E12, 298724.0], [1.701271841E12, 1045422.0], [1.7012718E12, 896105.0], [1.70127171E12, 1493501.0], [1.701271669E12, 896069.0], [1.701271751E12, 1344151.0], [1.70127162E12, 298681.0], [1.701271833E12, 450708.0], [1.701271792E12, 1941471.0], [1.701271702E12, 448048.0], [1.701271661E12, 746678.0], [1.701271571E12, 298700.0], [1.701271743E12, 1045463.0], [1.701271612E12, 597371.0], [1.701271784E12, 1344111.0], [1.701271694E12, 896029.0], [1.701271866E12, 2679.0], [1.701271653E12, 597393.0], [1.701271735E12, 1045389.0], [1.701271604E12, 298701.0], [1.701271776E12, 448028.0], [1.701271686E12, 896031.0], [1.701271858E12, 4275.0], [1.701271645E12, 597366.0], [1.701271727E12, 1194779.0], [1.701271596E12, 896078.0], [1.701271809E12, 896082.0], [1.701271768E12, 1045404.0], [1.701271635E12, 448030.0], [1.701271594E12, 149341.0], [1.701271676E12, 1045462.0], [1.701271848E12, 746703.0], [1.701271758E12, 1194808.0], [1.701271717E12, 1045418.0], [1.701271627E12, 597445.0], [1.701271586E12, 149347.0], [1.701271799E12, 896093.0], [1.701271668E12, 597396.0], [1.70127184E12, 157373.0], [1.70127175E12, 1045437.0], [1.701271709E12, 597395.0], [1.701271619E12, 597391.0], [1.701271791E12, 896105.0], [1.70127166E12, 896075.0], [1.701271873E12, 451154.0], [1.701271832E12, 301389.0], [1.701271742E12, 1493445.0], [1.701271701E12, 896117.0], [1.701271611E12, 448022.0], [1.701271783E12, 1792151.0], [1.701271652E12, 746736.0], [1.701271865E12, 285.0], [1.701271734E12, 1194756.0], [1.701271693E12, 1194779.0], [1.701271603E12, 298669.0], [1.701271775E12, 1045422.0], [1.701271644E12, 298698.0], [1.701271857E12, 12027.0], [1.701271726E12, 1194767.0], [1.701271685E12, 1045459.0], [1.701271595E12, 149347.0], [1.701271767E12, 1792183.0], [1.701271806E12, 448290.0], [1.701271593E12, 298683.0], [1.701271765E12, 896088.0], [1.701271675E12, 597390.0], [1.701271634E12, 298678.0], [1.701271716E12, 1194751.0], [1.701271888E12, 2389562.0], [1.701271798E12, 1344142.0], [1.701271585E12, 298687.0], [1.701271757E12, 1493444.0], [1.701271667E12, 896076.0], [1.701271626E12, 448082.0], [1.701271839E12, 448155.0], [1.701271708E12, 896060.0], [1.70127188E12, 6840.0], [1.70127179E12, 1642828.0], [1.701271749E12, 1792167.0], [1.701271659E12, 298663.0], [1.701271618E12, 448049.0], [1.701271831E12, 298681.0], [1.7012717E12, 1344100.0], [1.701271872E12, 3952.0], [1.701271782E12, 1642842.0], [1.701271569E12, 298714.0], [1.701271741E12, 1642849.0], [1.701271651E12, 597396.0], [1.70127161E12, 298677.0], [1.701271692E12, 1045434.0], [1.701271864E12, 1425.0], [1.701271774E12, 1493513.0], [1.701271733E12, 1194770.0], [1.701271643E12, 597331.0], [1.701271602E12, 746709.0], [1.701271815E12, 149346.0], [1.701271684E12, 746721.0], [1.701271766E12, 1194746.0], [1.701271725E12, 1045427.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.701271764E12, 1390.0], [1.701271846E12, 1668.0], [1.701271633E12, 695.0], [1.701271592E12, 278.0], [1.701271805E12, 973.0], [1.701271715E12, 973.0], [1.701271674E12, 695.0], [1.701271756E12, 1390.0], [1.701271625E12, 556.0], [1.701271584E12, 278.0], [1.701271797E12, 973.0], [1.701271707E12, 1112.0], [1.701271666E12, 556.0], [1.701271748E12, 834.0], [1.70127183E12, 417.0], [1.701271617E12, 417.0], [1.701271789E12, 973.0], [1.701271699E12, 1251.0], [1.701271658E12, 834.0], [1.701271871E12, 4031.0], [1.70127174E12, 973.0], [1.701271609E12, 417.0], [1.701271781E12, 1807.0], [1.701271691E12, 973.0], [1.70127165E12, 1112.0], [1.701271863E12, 2363.0], [1.701271732E12, 973.0], [1.701271814E12, 695.0], [1.701271601E12, 278.0], [1.701271773E12, 973.0], [1.701271683E12, 834.0], [1.701271642E12, 695.0], [1.701271855E12, 0.0], [1.701271724E12, 1390.0], [1.701271763E12, 1529.0], [1.701271722E12, 1112.0], [1.701271804E12, 973.0], [1.701271591E12, 139.0], [1.701271673E12, 695.0], [1.701271632E12, 417.0], [1.701271845E12, 834.0], [1.701271755E12, 834.0], [1.701271714E12, 1251.0], [1.701271796E12, 1529.0], [1.701271583E12, 139.0], [1.701271665E12, 973.0], [1.701271624E12, 556.0], [1.701271747E12, 1529.0], [1.701271706E12, 973.0], [1.701271788E12, 1390.0], [1.701271575E12, 278.0], [1.701271657E12, 834.0], [1.701271616E12, 695.0], [1.701271829E12, 139.0], [1.701271739E12, 417.0], [1.701271698E12, 834.0], [1.70127178E12, 695.0], [1.701271862E12, 1668.0], [1.701271649E12, 695.0], [1.701271608E12, 278.0], [1.701271731E12, 1251.0], [1.70127169E12, 973.0], [1.701271772E12, 1251.0], [1.701271854E12, 1807.0], [1.701271641E12, 834.0], [1.7012716E12, 278.0], [1.701271813E12, 556.0], [1.701271723E12, 1529.0], [1.701271682E12, 973.0], [1.701271721E12, 695.0], [1.70127168E12, 556.0], [1.70127159E12, 278.0], [1.701271803E12, 1251.0], [1.701271762E12, 1390.0], [1.701271844E12, 278.0], [1.701271631E12, 556.0], [1.701271713E12, 556.0], [1.701271672E12, 1112.0], [1.701271582E12, 139.0], [1.701271795E12, 834.0], [1.701271754E12, 1390.0], [1.701271836E12, 556.0], [1.701271623E12, 139.0], [1.701271705E12, 1390.0], [1.701271664E12, 556.0], [1.701271574E12, 139.0], [1.701271787E12, 1807.0], [1.701271746E12, 973.0], [1.701271615E12, 278.0], [1.701271697E12, 695.0], [1.701271656E12, 556.0], [1.701271869E12, 0.0], [1.701271779E12, 2085.0], [1.701271738E12, 1529.0], [1.701271607E12, 417.0], [1.701271689E12, 834.0], [1.701271648E12, 556.0], [1.701271861E12, 1946.0], [1.701271771E12, 1112.0], [1.70127173E12, 1529.0], [1.701271812E12, 1251.0], [1.701271599E12, 278.0], [1.701271681E12, 973.0], [1.70127164E12, 139.0], [1.701271853E12, 973.0], [1.701271679E12, 973.0], [1.701271761E12, 695.0], [1.70127172E12, 695.0], [1.70127163E12, 556.0], [1.701271802E12, 1112.0], [1.701271589E12, 139.0], [1.701271671E12, 695.0], [1.701271753E12, 1529.0], [1.701271712E12, 973.0], [1.701271622E12, 556.0], [1.701271835E12, 2224.0], [1.701271794E12, 834.0], [1.701271581E12, 139.0], [1.701271663E12, 695.0], [1.701271745E12, 1668.0], [1.701271704E12, 973.0], [1.701271614E12, 139.0], [1.701271786E12, 1390.0], [1.701271573E12, 278.0], [1.701271655E12, 695.0], [1.701271737E12, 1112.0], [1.701271696E12, 834.0], [1.701271606E12, 278.0], [1.701271778E12, 1390.0], [1.70127186E12, 2085.0], [1.701271647E12, 834.0], [1.701271729E12, 1251.0], [1.701271688E12, 695.0], [1.701271901E12, 1251.0], [1.701271598E12, 417.0], [1.701271811E12, 834.0], [1.70127177E12, 1529.0], [1.701271639E12, 417.0], [1.701271678E12, 556.0], [1.70127185E12, 1529.0], [1.701271637E12, 695.0], [1.701271719E12, 1529.0], [1.701271588E12, 278.0], [1.701271801E12, 973.0], [1.70127176E12, 834.0], [1.70127167E12, 695.0], [1.701271629E12, 556.0], [1.701271711E12, 973.0], [1.70127158E12, 278.0], [1.701271793E12, 1390.0], [1.701271752E12, 695.0], [1.701271662E12, 556.0], [1.701271834E12, 417.0], [1.701271621E12, 695.0], [1.701271703E12, 1390.0], [1.701271572E12, 139.0], [1.701271785E12, 834.0], [1.701271744E12, 1529.0], [1.701271654E12, 417.0], [1.701271867E12, 0.0], [1.701271613E12, 556.0], [1.701271695E12, 834.0], [1.701271777E12, 1668.0], [1.701271736E12, 1112.0], [1.701271646E12, 556.0], [1.701271859E12, 2085.0], [1.701271605E12, 417.0], [1.701271687E12, 695.0], [1.701271769E12, 973.0], [1.701271728E12, 1251.0], [1.701271638E12, 417.0], [1.701271851E12, 3336.0], [1.70127181E12, 834.0], [1.701271597E12, 139.0], [1.701271849E12, 556.0], [1.701271808E12, 556.0], [1.701271718E12, 973.0], [1.70127189E12, 417.0], [1.701271677E12, 695.0], [1.701271587E12, 278.0], [1.701271759E12, 1390.0], [1.701271628E12, 278.0], [1.701271841E12, 973.0], [1.7012718E12, 834.0], [1.70127171E12, 1390.0], [1.701271669E12, 834.0], [1.701271751E12, 1251.0], [1.70127162E12, 278.0], [1.701271833E12, 417.0], [1.701271792E12, 1807.0], [1.701271702E12, 417.0], [1.701271661E12, 695.0], [1.701271571E12, 278.0], [1.701271743E12, 973.0], [1.701271612E12, 556.0], [1.701271784E12, 1251.0], [1.701271694E12, 834.0], [1.701271866E12, 0.0], [1.701271653E12, 556.0], [1.701271735E12, 973.0], [1.701271604E12, 278.0], [1.701271776E12, 417.0], [1.701271686E12, 834.0], [1.701271858E12, 2085.0], [1.701271645E12, 556.0], [1.701271727E12, 1112.0], [1.701271596E12, 834.0], [1.701271809E12, 834.0], [1.701271768E12, 973.0], [1.701271635E12, 417.0], [1.701271594E12, 139.0], [1.701271676E12, 973.0], [1.701271848E12, 695.0], [1.701271758E12, 1112.0], [1.701271717E12, 973.0], [1.701271627E12, 556.0], [1.701271586E12, 139.0], [1.701271799E12, 834.0], [1.701271668E12, 556.0], [1.70127184E12, 139.0], [1.70127175E12, 973.0], [1.701271709E12, 556.0], [1.701271619E12, 556.0], [1.701271791E12, 834.0], [1.70127166E12, 834.0], [1.701271873E12, 2502.0], [1.701271832E12, 278.0], [1.701271742E12, 1390.0], [1.701271701E12, 834.0], [1.701271611E12, 417.0], [1.701271783E12, 1668.0], [1.701271652E12, 695.0], [1.701271865E12, 139.0], [1.701271734E12, 1112.0], [1.701271693E12, 1112.0], [1.701271603E12, 278.0], [1.701271775E12, 973.0], [1.701271644E12, 278.0], [1.701271857E12, 1946.0], [1.701271726E12, 1112.0], [1.701271685E12, 973.0], [1.701271595E12, 139.0], [1.701271767E12, 1668.0], [1.701271806E12, 695.0], [1.701271593E12, 278.0], [1.701271765E12, 834.0], [1.701271675E12, 556.0], [1.701271634E12, 278.0], [1.701271716E12, 1112.0], [1.701271888E12, 2224.0], [1.701271798E12, 1251.0], [1.701271585E12, 278.0], [1.701271757E12, 1390.0], [1.701271667E12, 834.0], [1.701271626E12, 417.0], [1.701271839E12, 556.0], [1.701271708E12, 834.0], [1.70127188E12, 3336.0], [1.70127179E12, 1529.0], [1.701271749E12, 1668.0], [1.701271659E12, 278.0], [1.701271618E12, 417.0], [1.701271831E12, 278.0], [1.7012717E12, 1251.0], [1.701271872E12, 3475.0], [1.701271782E12, 1529.0], [1.701271569E12, 278.0], [1.701271741E12, 1529.0], [1.701271651E12, 556.0], [1.70127161E12, 278.0], [1.701271692E12, 973.0], [1.701271864E12, 695.0], [1.701271774E12, 1390.0], [1.701271733E12, 1112.0], [1.701271643E12, 556.0], [1.701271602E12, 695.0], [1.701271815E12, 139.0], [1.701271684E12, 695.0], [1.701271766E12, 1112.0], [1.701271725E12, 973.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.701271901E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 45.266666666666666, "minX": 1.701271569E12, "maxY": 60025.0, "series": [{"data": [[1.701271764E12, 1120.1], [1.701271846E12, 23528.083333333336], [1.701271633E12, 687.0], [1.701271592E12, 976.5], [1.701271805E12, 5938.714285714285], [1.701271715E12, 903.7142857142857], [1.701271674E12, 608.6], [1.701271756E12, 955.2], [1.701271625E12, 620.75], [1.701271584E12, 857.5], [1.701271797E12, 2061.0], [1.701271707E12, 570.25], [1.701271666E12, 728.75], [1.701271748E12, 1008.5], [1.70127183E12, 829.6666666666666], [1.701271617E12, 461.6666666666667], [1.701271789E12, 1119.8571428571427], [1.701271699E12, 994.0], [1.701271658E12, 490.5], [1.701271871E12, 27110.266666666666], [1.70127174E12, 1233.5714285714287], [1.701271609E12, 615.3333333333334], [1.701271781E12, 1297.1538461538462], [1.701271691E12, 937.4285714285714], [1.70127165E12, 768.75], [1.701271863E12, 6359.368421052632], [1.701271732E12, 783.7142857142857], [1.701271814E12, 809.4], [1.701271601E12, 1027.5], [1.701271773E12, 1693.142857142857], [1.701271683E12, 633.3333333333334], [1.701271642E12, 545.8], [1.701271855E12, 60024.0], [1.701271724E12, 1172.7], [1.701271763E12, 942.1818181818181], [1.701271722E12, 1231.25], [1.701271804E12, 1601.2857142857142], [1.701271591E12, 983.0], [1.701271673E12, 563.0], [1.701271632E12, 511.0], [1.701271845E12, 22625.0], [1.701271755E12, 964.1666666666667], [1.701271714E12, 868.4444444444445], [1.701271796E12, 12872.0], [1.701271583E12, 576.0], [1.701271665E12, 553.5714285714286], [1.701271624E12, 949.75], [1.701271747E12, 1001.1818181818181], [1.701271706E12, 609.1428571428571], [1.701271788E12, 911.4], [1.701271575E12, 578.5], [1.701271657E12, 815.8333333333334], [1.701271616E12, 515.6], [1.701271829E12, 40243.66666666667], [1.701271739E12, 486.6666666666667], [1.701271698E12, 831.0], [1.70127178E12, 1447.6], [1.701271862E12, 15040.4375], [1.701271649E12, 967.4], [1.701271608E12, 673.0], [1.701271731E12, 689.6666666666666], [1.70127169E12, 856.5714285714286], [1.701271772E12, 1660.0], [1.701271854E12, 8046.928571428572], [1.701271641E12, 1022.3333333333334], [1.7012716E12, 560.5], [1.701271813E12, 941.5], [1.701271723E12, 1651.090909090909], [1.701271682E12, 739.0000000000001], [1.701271721E12, 1483.6], [1.70127168E12, 821.0], [1.70127159E12, 636.5], [1.701271803E12, 1770.4444444444443], [1.701271762E12, 1174.5], [1.701271844E12, 37452.5], [1.701271631E12, 565.0], [1.701271713E12, 995.75], [1.701271672E12, 621.75], [1.701271582E12, 1146.0], [1.701271795E12, 6296.666666666667], [1.701271754E12, 705.3000000000001], [1.701271836E12, 30478.5], [1.701271623E12, 696.0], [1.701271705E12, 595.1], [1.701271664E12, 592.0], [1.701271574E12, 636.0], [1.701271787E12, 1130.4615384615386], [1.701271746E12, 852.2857142857142], [1.701271615E12, 1339.0], [1.701271697E12, 725.8], [1.701271656E12, 829.0], [1.701271869E12, 60024.0], [1.701271779E12, 1581.0666666666666], [1.701271738E12, 737.0909090909091], [1.701271607E12, 544.3333333333334], [1.701271689E12, 757.5], [1.701271648E12, 761.25], [1.701271861E12, 7542.874999999999], [1.701271771E12, 1391.5], [1.70127173E12, 974.5454545454545], [1.701271812E12, 20008.88888888889], [1.701271599E12, 512.5], [1.701271681E12, 680.7142857142857], [1.70127164E12, 532.0], [1.701271853E12, 11013.75], [1.701271679E12, 733.0], [1.701271761E12, 1113.0], [1.70127172E12, 836.8], [1.70127163E12, 513.25], [1.701271802E12, 1912.5000000000002], [1.701271589E12, 789.0], [1.701271671E12, 660.2], [1.701271753E12, 1290.909090909091], [1.701271712E12, 619.1428571428571], [1.701271622E12, 511.0], [1.701271835E12, 31297.875], [1.701271794E12, 6507.666666666666], [1.701271581E12, 736.0], [1.701271663E12, 686.6], [1.701271745E12, 913.6666666666666], [1.701271704E12, 759.0000000000001], [1.701271614E12, 616.0], [1.701271786E12, 1442.2], [1.701271573E12, 597.5], [1.701271655E12, 621.0], [1.701271737E12, 808.125], [1.701271696E12, 703.6666666666666], [1.701271606E12, 643.5], [1.701271778E12, 1823.8999999999996], [1.70127186E12, 12672.210526315788], [1.701271647E12, 839.8333333333333], [1.701271729E12, 942.7777777777778], [1.701271688E12, 1130.0], [1.701271901E12, 33631.88888888889], [1.701271598E12, 632.6666666666666], [1.701271811E12, 4129.5], [1.70127177E12, 1209.0909090909092], [1.701271639E12, 567.0], [1.701271678E12, 872.25], [1.70127185E12, 3914.181818181818], [1.701271637E12, 1154.2], [1.701271719E12, 866.1818181818181], [1.701271588E12, 608.5], [1.701271801E12, 2000.1428571428573], [1.70127176E12, 889.0], [1.70127167E12, 622.6], [1.701271629E12, 590.75], [1.701271711E12, 593.4285714285714], [1.70127158E12, 624.0], [1.701271793E12, 1199.9], [1.701271752E12, 722.0], [1.701271662E12, 625.0], [1.701271834E12, 16074.0], [1.701271621E12, 633.8], [1.701271703E12, 910.8], [1.701271572E12, 794.0], [1.701271785E12, 1267.0], [1.701271744E12, 991.0000000000001], [1.701271654E12, 708.3333333333334], [1.701271867E12, 60023.0], [1.701271613E12, 563.25], [1.701271695E12, 816.6666666666666], [1.701271777E12, 1696.5], [1.701271736E12, 875.1249999999999], [1.701271646E12, 916.0], [1.701271859E12, 46.86666666666667], [1.701271605E12, 665.0], [1.701271687E12, 671.2], [1.701271769E12, 1270.5714285714284], [1.701271728E12, 1048.7777777777778], [1.701271638E12, 499.3333333333333], [1.701271851E12, 37888.166666666664], [1.70127181E12, 7154.833333333333], [1.701271597E12, 483.0], [1.701271849E12, 22701.666666666668], [1.701271808E12, 3209.75], [1.701271718E12, 1097.7142857142858], [1.70127189E12, 22177.333333333332], [1.701271677E12, 649.6], [1.701271587E12, 704.5], [1.701271759E12, 960.6999999999999], [1.701271628E12, 482.5], [1.701271841E12, 40266.857142857145], [1.7012718E12, 1758.0], [1.70127171E12, 784.7], [1.701271669E12, 634.8333333333333], [1.701271751E12, 838.0000000000001], [1.70127162E12, 825.5], [1.701271833E12, 15939.0], [1.701271792E12, 1601.6923076923078], [1.701271702E12, 936.0], [1.701271661E12, 684.0], [1.701271571E12, 732.5], [1.701271743E12, 1251.4285714285716], [1.701271612E12, 658.5], [1.701271784E12, 1182.6666666666667], [1.701271694E12, 648.3333333333333], [1.701271866E12, 60025.0], [1.701271653E12, 525.25], [1.701271735E12, 645.5714285714286], [1.701271604E12, 524.0], [1.701271776E12, 2038.0], [1.701271686E12, 648.0], [1.701271858E12, 45.266666666666666], [1.701271645E12, 649.0], [1.701271727E12, 1213.5], [1.701271596E12, 1186.1666666666667], [1.701271809E12, 3214.1666666666665], [1.701271768E12, 833.1428571428571], [1.701271635E12, 1334.3333333333333], [1.701271594E12, 1642.0], [1.701271676E12, 701.9999999999999], [1.701271848E12, 3769.6], [1.701271758E12, 906.875], [1.701271717E12, 911.5714285714286], [1.701271627E12, 649.5], [1.701271586E12, 750.0], [1.701271799E12, 1728.0], [1.701271668E12, 713.75], [1.70127184E12, 46323.5], [1.70127175E12, 784.4285714285714], [1.701271709E12, 618.0], [1.701271619E12, 572.75], [1.701271791E12, 1239.3333333333333], [1.70127166E12, 810.8333333333334], [1.701271873E12, 13670.166666666668], [1.701271832E12, 20452.666666666664], [1.701271742E12, 1149.1], [1.701271701E12, 539.6666666666666], [1.701271611E12, 541.6666666666666], [1.701271783E12, 1170.5], [1.701271652E12, 448.4], [1.701271865E12, 47.0], [1.701271734E12, 592.5], [1.701271693E12, 752.75], [1.701271603E12, 550.0], [1.701271775E12, 1691.2857142857142], [1.701271644E12, 797.5], [1.701271857E12, 10629.764705882353], [1.701271726E12, 1163.875], [1.701271685E12, 712.0], [1.701271595E12, 550.0], [1.701271767E12, 1172.75], [1.701271806E12, 13908.4], [1.701271593E12, 691.5], [1.701271765E12, 1077.3333333333335], [1.701271675E12, 664.75], [1.701271634E12, 768.0], [1.701271716E12, 1062.25], [1.701271888E12, 21106.687499999996], [1.701271798E12, 1850.7777777777778], [1.701271585E12, 518.0], [1.701271757E12, 1078.4], [1.701271667E12, 582.8333333333334], [1.701271626E12, 606.6666666666666], [1.701271839E12, 12519.25], [1.701271708E12, 590.8333333333333], [1.70127188E12, 42630.291666666664], [1.70127179E12, 1370.8181818181818], [1.701271749E12, 926.6666666666667], [1.701271659E12, 666.0], [1.701271618E12, 618.0], [1.701271831E12, 857.0], [1.7012717E12, 750.7777777777778], [1.701271872E12, 14589.88], [1.701271782E12, 1057.9999999999998], [1.701271569E12, 508.0], [1.701271741E12, 1152.7272727272725], [1.701271651E12, 462.75], [1.70127161E12, 710.5], [1.701271692E12, 859.7142857142857], [1.701271864E12, 45.6], [1.701271774E12, 1846.8], [1.701271733E12, 843.625], [1.701271643E12, 542.25], [1.701271602E12, 491.2], [1.701271815E12, 455.0], [1.701271684E12, 721.8], [1.701271766E12, 1120.25], [1.701271725E12, 1206.2857142857142]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.701271901E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.701271569E12, "maxY": 42630.291666666664, "series": [{"data": [[1.701271764E12, 1052.3], [1.701271846E12, 23461.83333333334], [1.701271633E12, 620.0], [1.701271592E12, 911.5], [1.701271805E12, 5881.428571428572], [1.701271715E12, 837.7142857142858], [1.701271674E12, 538.4], [1.701271756E12, 889.0], [1.701271625E12, 553.25], [1.701271584E12, 791.5], [1.701271797E12, 1981.7142857142858], [1.701271707E12, 505.75], [1.701271666E12, 663.75], [1.701271748E12, 931.6666666666666], [1.70127183E12, 762.3333333333334], [1.701271617E12, 395.6666666666667], [1.701271789E12, 1052.2857142857142], [1.701271699E12, 928.0], [1.701271658E12, 422.16666666666663], [1.701271871E12, 25109.43333333333], [1.70127174E12, 1164.5714285714284], [1.701271609E12, 548.3333333333334], [1.701271781E12, 1232.076923076923], [1.701271691E12, 869.5714285714286], [1.70127165E12, 703.375], [1.701271863E12, 40.84210526315789], [1.701271732E12, 713.8571428571428], [1.701271814E12, 745.6], [1.701271601E12, 961.5], [1.701271773E12, 1627.4285714285713], [1.701271683E12, 568.0], [1.701271642E12, 479.0], [1.701271855E12, 0.0], [1.701271724E12, 1105.3999999999999], [1.701271763E12, 874.9999999999999], [1.701271722E12, 1158.625], [1.701271804E12, 1534.4285714285716], [1.701271591E12, 918.0], [1.701271673E12, 495.4], [1.701271632E12, 444.3333333333333], [1.701271845E12, 13976.000000000002], [1.701271755E12, 896.6666666666666], [1.701271714E12, 802.5555555555555], [1.701271796E12, 12805.090909090908], [1.701271583E12, 511.0], [1.701271665E12, 487.2857142857143], [1.701271624E12, 884.0], [1.701271747E12, 936.0909090909091], [1.701271706E12, 544.2857142857143], [1.701271788E12, 845.2], [1.701271575E12, 512.5], [1.701271657E12, 748.3333333333334], [1.701271616E12, 444.6], [1.701271829E12, 204.33333333333334], [1.701271739E12, 421.3333333333333], [1.701271698E12, 763.0], [1.70127178E12, 1379.2], [1.701271862E12, 34.0], [1.701271649E12, 901.8], [1.701271608E12, 606.5], [1.701271731E12, 621.2222222222223], [1.70127169E12, 788.0], [1.701271772E12, 1588.5555555555554], [1.701271854E12, 3686.214285714286], [1.701271641E12, 952.8333333333334], [1.7012716E12, 496.5], [1.701271813E12, 875.75], [1.701271723E12, 1582.272727272727], [1.701271682E12, 669.7142857142858], [1.701271721E12, 1413.4], [1.70127168E12, 755.5], [1.70127159E12, 568.0], [1.701271803E12, 1702.0], [1.701271762E12, 1108.2], [1.701271844E12, 37386.0], [1.701271631E12, 498.5], [1.701271713E12, 927.5], [1.701271672E12, 551.9999999999999], [1.701271582E12, 1080.0], [1.701271795E12, 6231.5], [1.701271754E12, 637.8000000000001], [1.701271836E12, 30410.0], [1.701271623E12, 631.0], [1.701271705E12, 528.9], [1.701271664E12, 526.5], [1.701271574E12, 565.0], [1.701271787E12, 1066.0], [1.701271746E12, 779.8571428571429], [1.701271615E12, 1272.0], [1.701271697E12, 660.0], [1.701271656E12, 758.0], [1.701271869E12, 0.0], [1.701271779E12, 1507.466666666667], [1.701271738E12, 670.5454545454545], [1.701271607E12, 478.0], [1.701271689E12, 686.0], [1.701271648E12, 690.5], [1.701271861E12, 39.68749999999999], [1.701271771E12, 1324.5], [1.70127173E12, 908.0000000000001], [1.701271812E12, 19937.88888888889], [1.701271599E12, 446.5], [1.701271681E12, 613.5714285714286], [1.70127164E12, 466.0], [1.701271853E12, 3460.25], [1.701271679E12, 664.5714285714286], [1.701271761E12, 1047.6], [1.70127172E12, 770.8], [1.70127163E12, 448.0], [1.701271802E12, 1831.25], [1.701271589E12, 724.0], [1.701271671E12, 591.6], [1.701271753E12, 1225.0909090909092], [1.701271712E12, 553.5714285714286], [1.701271622E12, 446.25], [1.701271835E12, 31272.5], [1.701271794E12, 6449.833333333334], [1.701271581E12, 670.0], [1.701271663E12, 618.2], [1.701271745E12, 846.3333333333334], [1.701271704E12, 693.4285714285714], [1.701271614E12, 551.0], [1.701271786E12, 1376.0], [1.701271573E12, 530.0], [1.701271655E12, 493.2], [1.701271737E12, 742.75], [1.701271696E12, 623.5], [1.701271606E12, 568.0], [1.701271778E12, 1754.5], [1.70127186E12, 35.315789473684205], [1.701271647E12, 770.8333333333334], [1.701271729E12, 877.6666666666666], [1.701271688E12, 1053.2], [1.701271901E12, 33631.88888888889], [1.701271598E12, 565.6666666666666], [1.701271811E12, 4064.3333333333335], [1.70127177E12, 1143.3636363636363], [1.701271639E12, 498.0], [1.701271678E12, 801.25], [1.70127185E12, 3847.9999999999995], [1.701271637E12, 1082.6], [1.701271719E12, 799.6363636363636], [1.701271588E12, 543.5], [1.701271801E12, 1933.7142857142858], [1.70127176E12, 824.1666666666666], [1.70127167E12, 550.2], [1.701271629E12, 524.25], [1.701271711E12, 523.5714285714286], [1.70127158E12, 560.5], [1.701271793E12, 1133.6], [1.701271752E12, 652.8], [1.701271662E12, 556.5], [1.701271834E12, 1010.5], [1.701271621E12, 568.0], [1.701271703E12, 845.8000000000001], [1.701271572E12, 724.0], [1.701271785E12, 1198.1666666666665], [1.701271744E12, 925.9999999999999], [1.701271654E12, 638.6666666666666], [1.701271867E12, 0.0], [1.701271613E12, 496.0], [1.701271695E12, 745.8333333333334], [1.701271777E12, 1583.6666666666667], [1.701271736E12, 805.75], [1.701271646E12, 852.25], [1.701271859E12, 46.86666666666667], [1.701271605E12, 598.0], [1.701271687E12, 601.6], [1.701271769E12, 1202.4285714285716], [1.701271728E12, 983.4444444444445], [1.701271638E12, 431.6666666666667], [1.701271851E12, 37885.33333333334], [1.70127181E12, 7089.5], [1.701271597E12, 420.0], [1.701271849E12, 2649.1666666666665], [1.701271808E12, 3130.0], [1.701271718E12, 1031.7142857142858], [1.70127189E12, 22082.333333333332], [1.701271677E12, 580.4], [1.701271587E12, 639.5], [1.701271759E12, 894.5], [1.701271628E12, 415.5], [1.701271841E12, 40185.57142857143], [1.7012718E12, 1680.0], [1.70127171E12, 719.0], [1.701271669E12, 570.1666666666667], [1.701271751E12, 770.5555555555555], [1.70127162E12, 760.5], [1.701271833E12, 882.75], [1.701271792E12, 1533.1538461538462], [1.701271702E12, 868.3333333333334], [1.701271661E12, 615.6], [1.701271571E12, 666.0], [1.701271743E12, 1183.857142857143], [1.701271612E12, 591.5], [1.701271784E12, 1118.2222222222222], [1.701271694E12, 583.8333333333334], [1.701271866E12, 0.0], [1.701271653E12, 457.5], [1.701271735E12, 578.2857142857142], [1.701271604E12, 461.0], [1.701271776E12, 1925.6666666666667], [1.701271686E12, 578.8333333333334], [1.701271858E12, 45.266666666666666], [1.701271645E12, 582.25], [1.701271727E12, 1148.0], [1.701271596E12, 1115.0], [1.701271809E12, 3148.833333333333], [1.701271768E12, 763.1428571428572], [1.701271635E12, 1269.0], [1.701271594E12, 1306.0], [1.701271676E12, 630.2857142857142], [1.701271848E12, 3699.6], [1.701271758E12, 841.7500000000001], [1.701271717E12, 844.7142857142857], [1.701271627E12, 583.0], [1.701271586E12, 683.0], [1.701271799E12, 1659.5], [1.701271668E12, 649.5], [1.70127184E12, 1279.5], [1.70127175E12, 719.2857142857143], [1.701271709E12, 551.5], [1.701271619E12, 507.5], [1.701271791E12, 1172.6666666666665], [1.70127166E12, 741.8333333333334], [1.701271873E12, 13659.277777777781], [1.701271832E12, 398.6666666666667], [1.701271742E12, 1080.1], [1.701271701E12, 472.3333333333333], [1.701271611E12, 470.6666666666667], [1.701271783E12, 1103.3333333333335], [1.701271652E12, 379.6], [1.701271865E12, 47.0], [1.701271734E12, 524.0], [1.701271693E12, 675.875], [1.701271603E12, 482.5], [1.701271775E12, 1625.142857142857], [1.701271644E12, 732.5], [1.701271857E12, 36.88235294117647], [1.701271726E12, 1088.375], [1.701271685E12, 645.0], [1.701271595E12, 486.0], [1.701271767E12, 1104.0], [1.701271806E12, 13868.2], [1.701271593E12, 627.0], [1.701271765E12, 1000.0], [1.701271675E12, 596.0], [1.701271634E12, 701.5], [1.701271716E12, 877.625], [1.701271888E12, 20529.6875], [1.701271798E12, 1783.111111111111], [1.701271585E12, 445.0], [1.701271757E12, 1012.6], [1.701271667E12, 517.8333333333334], [1.701271626E12, 541.3333333333334], [1.701271839E12, 12471.5], [1.701271708E12, 525.8333333333334], [1.70127188E12, 42630.291666666664], [1.70127179E12, 1304.4545454545455], [1.701271749E12, 860.8333333333333], [1.701271659E12, 598.0], [1.701271618E12, 554.3333333333334], [1.701271831E12, 791.5], [1.7012717E12, 685.2222222222222], [1.701271872E12, 14589.88], [1.701271782E12, 992.1818181818182], [1.701271569E12, 444.0], [1.701271741E12, 1087.0], [1.701271651E12, 397.0], [1.70127161E12, 641.0], [1.701271692E12, 791.7142857142857], [1.701271864E12, 45.6], [1.701271774E12, 1779.5], [1.701271733E12, 779.375], [1.701271643E12, 467.75], [1.701271602E12, 426.0], [1.701271815E12, 391.0], [1.701271684E12, 652.0], [1.701271766E12, 1053.5], [1.701271725E12, 1133.857142857143]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.701271901E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 22.0, "minX": 1.701271569E12, "maxY": 69.60000000000001, "series": [{"data": [[1.701271764E12, 23.700000000000003], [1.701271846E12, 23.833333333333332], [1.701271633E12, 23.4], [1.701271592E12, 23.0], [1.701271805E12, 24.28571428571429], [1.701271715E12, 23.142857142857142], [1.701271674E12, 23.8], [1.701271756E12, 25.9], [1.701271625E12, 23.0], [1.701271584E12, 23.0], [1.701271797E12, 24.42857142857143], [1.701271707E12, 23.625], [1.701271666E12, 23.75], [1.701271748E12, 24.666666666666664], [1.70127183E12, 23.333333333333332], [1.701271617E12, 22.333333333333332], [1.701271789E12, 23.857142857142858], [1.701271699E12, 25.11111111111111], [1.701271658E12, 23.833333333333336], [1.701271871E12, 24.766666666666662], [1.70127174E12, 23.857142857142854], [1.701271609E12, 23.666666666666668], [1.701271781E12, 24.76923076923077], [1.701271691E12, 23.571428571428573], [1.70127165E12, 24.25], [1.701271863E12, 23.842105263157894], [1.701271732E12, 24.142857142857146], [1.701271814E12, 24.8], [1.701271601E12, 24.5], [1.701271773E12, 24.571428571428573], [1.701271683E12, 23.166666666666664], [1.701271642E12, 23.2], [1.701271855E12, 23.4], [1.701271724E12, 25.400000000000002], [1.701271763E12, 24.090909090909093], [1.701271722E12, 24.749999999999996], [1.701271804E12, 24.285714285714285], [1.701271591E12, 23.0], [1.701271673E12, 23.0], [1.701271632E12, 24.0], [1.701271845E12, 24.999999999999996], [1.701271755E12, 23.5], [1.701271714E12, 26.11111111111111], [1.701271796E12, 25.999999999999996], [1.701271583E12, 23.0], [1.701271665E12, 23.571428571428573], [1.701271624E12, 24.25], [1.701271747E12, 24.454545454545457], [1.701271706E12, 23.71428571428571], [1.701271788E12, 24.1], [1.701271575E12, 24.5], [1.701271657E12, 23.166666666666664], [1.701271616E12, 23.2], [1.701271829E12, 25.333333333333332], [1.701271739E12, 23.666666666666668], [1.701271698E12, 25.0], [1.70127178E12, 24.2], [1.701271862E12, 23.6875], [1.701271649E12, 23.2], [1.701271608E12, 23.5], [1.701271731E12, 24.11111111111111], [1.70127169E12, 24.999999999999996], [1.701271772E12, 23.666666666666668], [1.701271854E12, 23.92857142857143], [1.701271641E12, 23.833333333333336], [1.7012716E12, 23.5], [1.701271813E12, 23.75], [1.701271723E12, 24.27272727272727], [1.701271682E12, 23.142857142857142], [1.701271721E12, 23.6], [1.70127168E12, 23.75], [1.70127159E12, 24.0], [1.701271803E12, 24.111111111111107], [1.701271762E12, 23.2], [1.701271844E12, 23.5], [1.701271631E12, 23.5], [1.701271713E12, 24.5], [1.701271672E12, 25.25], [1.701271582E12, 24.0], [1.701271795E12, 23.666666666666668], [1.701271754E12, 24.8], [1.701271836E12, 23.25], [1.701271623E12, 23.0], [1.701271705E12, 25.099999999999998], [1.701271664E12, 24.0], [1.701271574E12, 23.0], [1.701271787E12, 23.846153846153847], [1.701271746E12, 24.428571428571427], [1.701271615E12, 23.0], [1.701271697E12, 25.6], [1.701271656E12, 54.75], [1.701271869E12, 23.0], [1.701271779E12, 24.13333333333333], [1.701271738E12, 24.90909090909091], [1.701271607E12, 23.0], [1.701271689E12, 24.333333333333336], [1.701271648E12, 23.75], [1.701271861E12, 23.3125], [1.701271771E12, 23.875], [1.70127173E12, 23.727272727272723], [1.701271812E12, 23.555555555555557], [1.701271599E12, 23.5], [1.701271681E12, 23.857142857142858], [1.70127164E12, 23.0], [1.701271853E12, 23.25], [1.701271679E12, 24.857142857142854], [1.701271761E12, 26.0], [1.70127172E12, 23.8], [1.70127163E12, 26.0], [1.701271802E12, 25.124999999999996], [1.701271589E12, 23.0], [1.701271671E12, 23.8], [1.701271753E12, 23.545454545454547], [1.701271712E12, 23.0], [1.701271622E12, 24.0], [1.701271835E12, 24.187500000000004], [1.701271794E12, 23.833333333333336], [1.701271581E12, 22.0], [1.701271663E12, 22.8], [1.701271745E12, 24.0], [1.701271704E12, 26.000000000000004], [1.701271614E12, 22.0], [1.701271786E12, 25.4], [1.701271573E12, 24.0], [1.701271655E12, 24.8], [1.701271737E12, 24.75], [1.701271696E12, 24.833333333333336], [1.701271606E12, 23.5], [1.701271778E12, 69.60000000000001], [1.70127186E12, 23.263157894736842], [1.701271647E12, 23.333333333333332], [1.701271729E12, 23.444444444444443], [1.701271688E12, 24.6], [1.701271901E12, 25.000000000000004], [1.701271598E12, 23.0], [1.701271811E12, 23.5], [1.70127177E12, 24.272727272727273], [1.701271639E12, 23.666666666666668], [1.701271678E12, 25.5], [1.70127185E12, 24.545454545454543], [1.701271637E12, 25.2], [1.701271719E12, 24.818181818181817], [1.701271588E12, 23.5], [1.701271801E12, 23.28571428571429], [1.70127176E12, 23.833333333333332], [1.70127167E12, 23.8], [1.701271629E12, 24.0], [1.701271711E12, 25.857142857142858], [1.70127158E12, 25.0], [1.701271793E12, 23.9], [1.701271752E12, 23.6], [1.701271662E12, 22.5], [1.701271834E12, 23.0], [1.701271621E12, 24.2], [1.701271703E12, 24.3], [1.701271572E12, 24.0], [1.701271785E12, 24.833333333333332], [1.701271744E12, 23.18181818181818], [1.701271654E12, 24.0], [1.701271867E12, 22.0], [1.701271613E12, 23.25], [1.701271695E12, 23.5], [1.701271777E12, 23.75], [1.701271736E12, 23.874999999999996], [1.701271646E12, 24.0], [1.701271859E12, 24.333333333333336], [1.701271605E12, 24.666666666666668], [1.701271687E12, 24.2], [1.701271769E12, 23.285714285714285], [1.701271728E12, 24.22222222222222], [1.701271638E12, 23.333333333333332], [1.701271851E12, 24.583333333333332], [1.70127181E12, 23.833333333333336], [1.701271597E12, 23.0], [1.701271849E12, 23.833333333333332], [1.701271808E12, 23.5], [1.701271718E12, 24.142857142857142], [1.70127189E12, 25.0], [1.701271677E12, 24.0], [1.701271587E12, 23.0], [1.701271759E12, 25.2], [1.701271628E12, 23.5], [1.701271841E12, 23.714285714285715], [1.7012718E12, 24.333333333333332], [1.70127171E12, 24.1], [1.701271669E12, 23.166666666666664], [1.701271751E12, 23.88888888888889], [1.70127162E12, 23.0], [1.701271833E12, 24.0], [1.701271792E12, 24.153846153846153], [1.701271702E12, 24.0], [1.701271661E12, 23.6], [1.701271571E12, 28.0], [1.701271743E12, 23.428571428571427], [1.701271612E12, 24.5], [1.701271784E12, 23.444444444444443], [1.701271694E12, 23.333333333333332], [1.701271866E12, 24.0], [1.701271653E12, 23.5], [1.701271735E12, 23.142857142857142], [1.701271604E12, 23.5], [1.701271776E12, 28.0], [1.701271686E12, 26.166666666666668], [1.701271858E12, 23.466666666666665], [1.701271645E12, 25.0], [1.701271727E12, 23.5], [1.701271596E12, 23.5], [1.701271809E12, 23.666666666666664], [1.701271768E12, 24.142857142857142], [1.701271635E12, 24.0], [1.701271594E12, 26.0], [1.701271676E12, 24.000000000000004], [1.701271848E12, 23.4], [1.701271758E12, 24.5], [1.701271717E12, 26.285714285714285], [1.701271627E12, 23.25], [1.701271586E12, 23.0], [1.701271799E12, 26.5], [1.701271668E12, 24.0], [1.70127184E12, 23.0], [1.70127175E12, 23.714285714285715], [1.701271709E12, 22.25], [1.701271619E12, 24.25], [1.701271791E12, 23.666666666666664], [1.70127166E12, 23.5], [1.701271873E12, 23.555555555555554], [1.701271832E12, 23.333333333333332], [1.701271742E12, 23.900000000000002], [1.701271701E12, 23.0], [1.701271611E12, 24.0], [1.701271783E12, 23.5], [1.701271652E12, 23.6], [1.701271865E12, 25.0], [1.701271734E12, 24.875], [1.701271693E12, 23.625], [1.701271603E12, 25.0], [1.701271775E12, 23.571428571428573], [1.701271644E12, 24.0], [1.701271857E12, 23.411764705882348], [1.701271726E12, 23.5], [1.701271685E12, 23.142857142857142], [1.701271595E12, 23.0], [1.701271767E12, 25.0], [1.701271806E12, 24.0], [1.701271593E12, 24.0], [1.701271765E12, 23.333333333333332], [1.701271675E12, 25.0], [1.701271634E12, 25.0], [1.701271716E12, 24.499999999999996], [1.701271888E12, 25.25], [1.701271798E12, 24.888888888888893], [1.701271585E12, 24.0], [1.701271757E12, 24.3], [1.701271667E12, 23.5], [1.701271626E12, 24.0], [1.701271839E12, 23.5], [1.701271708E12, 23.0], [1.70127188E12, 23.958333333333332], [1.70127179E12, 23.18181818181818], [1.701271749E12, 23.666666666666668], [1.701271659E12, 23.5], [1.701271618E12, 23.333333333333332], [1.701271831E12, 23.5], [1.7012717E12, 23.11111111111111], [1.701271872E12, 23.88], [1.701271782E12, 23.999999999999996], [1.701271569E12, 36.0], [1.701271741E12, 23.727272727272727], [1.701271651E12, 25.0], [1.70127161E12, 22.5], [1.701271692E12, 24.0], [1.701271864E12, 23.6], [1.701271774E12, 28.2], [1.701271733E12, 24.499999999999996], [1.701271643E12, 24.25], [1.701271602E12, 23.4], [1.701271815E12, 25.0], [1.701271684E12, 23.0], [1.701271766E12, 24.25], [1.701271725E12, 24.142857142857142]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.701271901E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 395.0, "minX": 1.701271569E12, "maxY": 53448.0, "series": [{"data": [[1.701271764E12, 1562.0], [1.701271846E12, 53448.0], [1.701271633E12, 927.0], [1.701271592E12, 978.0], [1.701271805E12, 2006.0], [1.701271715E12, 1291.0], [1.701271674E12, 800.0], [1.701271756E12, 1200.0], [1.701271625E12, 819.0], [1.701271584E12, 1034.0], [1.701271797E12, 2293.0], [1.701271707E12, 698.0], [1.701271666E12, 907.0], [1.701271748E12, 1352.0], [1.70127183E12, 888.0], [1.701271617E12, 541.0], [1.701271789E12, 1460.0], [1.701271699E12, 1368.0], [1.701271658E12, 653.0], [1.70127174E12, 1381.0], [1.701271609E12, 710.0], [1.701271781E12, 1635.0], [1.701271691E12, 1500.0], [1.70127165E12, 1197.0], [1.701271732E12, 1194.0], [1.701271814E12, 879.0], [1.701271601E12, 1029.0], [1.701271773E12, 2297.0], [1.701271683E12, 807.0], [1.701271642E12, 637.0], [1.701271724E12, 1759.0], [1.701271763E12, 1838.0], [1.701271722E12, 2325.0], [1.701271804E12, 1991.0], [1.701271591E12, 983.0], [1.701271673E12, 830.0], [1.701271632E12, 612.0], [1.701271845E12, 37714.0], [1.701271755E12, 1254.0], [1.701271714E12, 1243.0], [1.701271796E12, 30066.0], [1.701271583E12, 576.0], [1.701271665E12, 698.0], [1.701271624E12, 1184.0], [1.701271747E12, 1501.0], [1.701271706E12, 814.0], [1.701271788E12, 1158.0], [1.701271575E12, 605.0], [1.701271657E12, 1123.0], [1.701271616E12, 573.0], [1.701271829E12, 682.0], [1.701271739E12, 514.0], [1.701271698E12, 1178.0], [1.70127178E12, 1721.0], [1.701271649E12, 1107.0], [1.701271608E12, 761.0], [1.701271731E12, 805.0], [1.70127169E12, 1475.0], [1.701271772E12, 1991.0], [1.701271854E12, 4266.0], [1.701271641E12, 1340.0], [1.7012716E12, 649.0], [1.701271813E12, 1012.0], [1.701271723E12, 2619.0], [1.701271682E12, 1063.0], [1.701271721E12, 1796.0], [1.70127168E12, 1106.0], [1.70127159E12, 670.0], [1.701271803E12, 2000.0], [1.701271762E12, 1932.0], [1.701271844E12, 37750.0], [1.701271631E12, 621.0], [1.701271713E12, 1172.0], [1.701271672E12, 717.0], [1.701271582E12, 1146.0], [1.701271795E12, 29771.0], [1.701271754E12, 898.0], [1.701271836E12, 30612.0], [1.701271623E12, 696.0], [1.701271705E12, 821.0], [1.701271664E12, 675.0], [1.701271574E12, 636.0], [1.701271787E12, 1485.0], [1.701271746E12, 1242.0], [1.701271615E12, 1342.0], [1.701271697E12, 979.0], [1.701271656E12, 924.0], [1.701271779E12, 1731.0], [1.701271738E12, 901.0], [1.701271607E12, 640.0], [1.701271689E12, 979.0], [1.701271648E12, 1065.0], [1.701271771E12, 1668.0], [1.70127173E12, 1464.0], [1.701271812E12, 35818.0], [1.701271599E12, 518.0], [1.701271681E12, 1007.0], [1.70127164E12, 532.0], [1.701271853E12, 4595.0], [1.701271679E12, 1145.0], [1.701271761E12, 2072.0], [1.70127172E12, 1198.0], [1.70127163E12, 555.0], [1.701271802E12, 2098.0], [1.701271589E12, 789.0], [1.701271671E12, 726.0], [1.701271753E12, 2015.0], [1.701271712E12, 764.0], [1.701271622E12, 546.0], [1.701271835E12, 31022.0], [1.701271794E12, 1886.0], [1.701271581E12, 736.0], [1.701271663E12, 898.0], [1.701271745E12, 1309.0], [1.701271704E12, 903.0], [1.701271614E12, 616.0], [1.701271786E12, 1794.0], [1.701271573E12, 607.0], [1.701271655E12, 866.0], [1.701271737E12, 991.0], [1.701271696E12, 1085.0], [1.701271606E12, 644.0], [1.701271778E12, 2364.0], [1.701271647E12, 981.0], [1.701271729E12, 1517.0], [1.701271688E12, 1376.0], [1.701271598E12, 647.0], [1.701271811E12, 18192.0], [1.70127177E12, 1708.0], [1.701271639E12, 699.0], [1.701271678E12, 1109.0], [1.70127185E12, 4099.0], [1.701271637E12, 1318.0], [1.701271719E12, 1389.0], [1.701271588E12, 718.0], [1.701271801E12, 2102.0], [1.70127176E12, 1302.0], [1.70127167E12, 757.0], [1.701271629E12, 647.0], [1.701271711E12, 688.0], [1.70127158E12, 627.0], [1.701271793E12, 1750.0], [1.701271752E12, 835.0], [1.701271662E12, 899.0], [1.701271834E12, 1515.0], [1.701271621E12, 794.0], [1.701271703E12, 1226.0], [1.701271572E12, 794.0], [1.701271785E12, 1614.0], [1.701271744E12, 1378.0], [1.701271654E12, 876.0], [1.701271613E12, 581.0], [1.701271695E12, 1196.0], [1.701271777E12, 2138.0], [1.701271736E12, 1215.0], [1.701271646E12, 1079.0], [1.701271605E12, 785.0], [1.701271687E12, 906.0], [1.701271769E12, 1570.0], [1.701271728E12, 1357.0], [1.701271638E12, 555.0], [1.701271851E12, 4281.0], [1.70127181E12, 18045.0], [1.701271597E12, 483.0], [1.701271849E12, 4179.0], [1.701271808E12, 3300.0], [1.701271718E12, 1547.0], [1.70127189E12, 23572.0], [1.701271677E12, 905.0], [1.701271587E12, 742.0], [1.701271759E12, 1389.0], [1.701271628E12, 516.0], [1.701271841E12, 44487.0], [1.7012718E12, 1939.0], [1.70127171E12, 1137.0], [1.701271669E12, 934.0], [1.701271751E12, 1091.0], [1.70127162E12, 826.0], [1.701271833E12, 1311.0], [1.701271792E12, 1869.0], [1.701271702E12, 1261.0], [1.701271661E12, 797.0], [1.701271571E12, 921.0], [1.701271743E12, 1833.0], [1.701271612E12, 850.0], [1.701271784E12, 1466.0], [1.701271694E12, 692.0], [1.701271653E12, 591.0], [1.701271735E12, 959.0], [1.701271604E12, 606.0], [1.701271776E12, 2234.0], [1.701271686E12, 777.0], [1.701271645E12, 823.0], [1.701271727E12, 1503.0], [1.701271596E12, 1583.0], [1.701271809E12, 3307.0], [1.701271768E12, 1300.0], [1.701271635E12, 1359.0], [1.701271594E12, 1642.0], [1.701271676E12, 931.0], [1.701271848E12, 3899.0], [1.701271758E12, 1202.0], [1.701271717E12, 1277.0], [1.701271627E12, 871.0], [1.701271586E12, 750.0], [1.701271799E12, 1997.0], [1.701271668E12, 900.0], [1.70127184E12, 5221.0], [1.70127175E12, 923.0], [1.701271709E12, 902.0], [1.701271619E12, 819.0], [1.701271791E12, 1873.0], [1.70127166E12, 1055.0], [1.701271873E12, 38472.0], [1.701271832E12, 707.0], [1.701271742E12, 1982.0], [1.701271701E12, 750.0], [1.701271611E12, 616.0], [1.701271783E12, 1582.0], [1.701271652E12, 494.0], [1.701271734E12, 736.0], [1.701271693E12, 1184.0], [1.701271603E12, 554.0], [1.701271775E12, 1911.0], [1.701271644E12, 801.0], [1.701271726E12, 1376.0], [1.701271685E12, 960.0], [1.701271595E12, 550.0], [1.701271767E12, 1725.0], [1.701271806E12, 2056.0], [1.701271593E12, 694.0], [1.701271765E12, 1406.0], [1.701271675E12, 890.0], [1.701271634E12, 860.0], [1.701271716E12, 1380.0], [1.701271888E12, 24111.0], [1.701271798E12, 2073.0], [1.701271585E12, 532.0], [1.701271757E12, 1467.0], [1.701271667E12, 696.0], [1.701271626E12, 655.0], [1.701271839E12, 5290.0], [1.701271708E12, 710.0], [1.70127179E12, 1680.0], [1.701271749E12, 1296.0], [1.701271659E12, 868.0], [1.701271618E12, 620.0], [1.701271831E12, 953.0], [1.7012717E12, 1180.0], [1.701271782E12, 1453.0], [1.701271569E12, 549.0], [1.701271741E12, 1753.0], [1.701271651E12, 489.0], [1.70127161E12, 718.0], [1.701271692E12, 1406.0], [1.701271774E12, 2285.0], [1.701271733E12, 1133.0], [1.701271643E12, 667.0], [1.701271602E12, 541.0], [1.701271815E12, 455.0], [1.701271684E12, 825.0], [1.701271766E12, 1402.0], [1.701271725E12, 1419.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.701271764E12, 486.0], [1.701271846E12, 5270.0], [1.701271633E12, 398.0], [1.701271592E12, 975.0], [1.701271805E12, 1143.0], [1.701271715E12, 414.0], [1.701271674E12, 436.0], [1.701271756E12, 546.0], [1.701271625E12, 410.0], [1.701271584E12, 681.0], [1.701271797E12, 1893.0], [1.701271707E12, 481.0], [1.701271666E12, 537.0], [1.701271748E12, 800.0], [1.70127183E12, 789.0], [1.701271617E12, 405.0], [1.701271789E12, 595.0], [1.701271699E12, 569.0], [1.701271658E12, 422.0], [1.70127174E12, 718.0], [1.701271609E12, 530.0], [1.701271781E12, 663.0], [1.701271691E12, 436.0], [1.70127165E12, 544.0], [1.701271732E12, 479.0], [1.701271814E12, 736.0], [1.701271601E12, 1026.0], [1.701271773E12, 1028.0], [1.701271683E12, 458.0], [1.701271642E12, 453.0], [1.701271724E12, 696.0], [1.701271763E12, 496.0], [1.701271722E12, 876.0], [1.701271804E12, 1283.0], [1.701271591E12, 983.0], [1.701271673E12, 449.0], [1.701271632E12, 408.0], [1.701271845E12, 5669.0], [1.701271755E12, 659.0], [1.701271714E12, 487.0], [1.701271796E12, 1701.0], [1.701271583E12, 576.0], [1.701271665E12, 484.0], [1.701271624E12, 422.0], [1.701271747E12, 577.0], [1.701271706E12, 405.0], [1.701271788E12, 662.0], [1.701271575E12, 552.0], [1.701271657E12, 506.0], [1.701271616E12, 476.0], [1.701271829E12, 682.0], [1.701271739E12, 440.0], [1.701271698E12, 589.0], [1.70127178E12, 1288.0], [1.701271649E12, 829.0], [1.701271608E12, 585.0], [1.701271731E12, 465.0], [1.70127169E12, 417.0], [1.701271772E12, 1138.0], [1.701271854E12, 3657.0], [1.701271641E12, 472.0], [1.7012716E12, 472.0], [1.701271813E12, 888.0], [1.701271723E12, 795.0], [1.701271682E12, 455.0], [1.701271721E12, 816.0], [1.70127168E12, 417.0], [1.70127159E12, 603.0], [1.701271803E12, 1500.0], [1.701271762E12, 614.0], [1.701271844E12, 37155.0], [1.701271631E12, 509.0], [1.701271713E12, 589.0], [1.701271672E12, 483.0], [1.701271582E12, 1146.0], [1.701271795E12, 1231.0], [1.701271754E12, 429.0], [1.701271836E12, 30286.0], [1.701271623E12, 696.0], [1.701271705E12, 472.0], [1.701271664E12, 452.0], [1.701271574E12, 636.0], [1.701271787E12, 952.0], [1.701271746E12, 559.0], [1.701271615E12, 1336.0], [1.701271697E12, 536.0], [1.701271656E12, 772.0], [1.701271779E12, 1395.0], [1.701271738E12, 569.0], [1.701271607E12, 405.0], [1.701271689E12, 452.0], [1.701271648E12, 426.0], [1.701271771E12, 1097.0], [1.70127173E12, 632.0], [1.701271812E12, 740.0], [1.701271599E12, 507.0], [1.701271681E12, 411.0], [1.70127164E12, 532.0], [1.701271853E12, 4370.0], [1.701271679E12, 456.0], [1.701271761E12, 495.0], [1.70127172E12, 446.0], [1.70127163E12, 473.0], [1.701271802E12, 1403.0], [1.701271589E12, 789.0], [1.701271671E12, 466.0], [1.701271753E12, 448.0], [1.701271712E12, 484.0], [1.701271622E12, 435.0], [1.701271835E12, 1596.0], [1.701271794E12, 596.0], [1.701271581E12, 736.0], [1.701271663E12, 425.0], [1.701271745E12, 464.0], [1.701271704E12, 446.0], [1.701271614E12, 616.0], [1.701271786E12, 1212.0], [1.701271573E12, 588.0], [1.701271655E12, 395.0], [1.701271737E12, 548.0], [1.701271696E12, 450.0], [1.701271606E12, 643.0], [1.701271778E12, 1404.0], [1.701271647E12, 529.0], [1.701271729E12, 458.0], [1.701271688E12, 439.0], [1.701271598E12, 610.0], [1.701271811E12, 899.0], [1.70127177E12, 715.0], [1.701271639E12, 487.0], [1.701271678E12, 424.0], [1.70127185E12, 3818.0], [1.701271637E12, 523.0], [1.701271719E12, 511.0], [1.701271588E12, 499.0], [1.701271801E12, 1897.0], [1.70127176E12, 639.0], [1.70127167E12, 485.0], [1.701271629E12, 533.0], [1.701271711E12, 475.0], [1.70127158E12, 621.0], [1.701271793E12, 628.0], [1.701271752E12, 593.0], [1.701271662E12, 447.0], [1.701271834E12, 1273.0], [1.701271621E12, 497.0], [1.701271703E12, 445.0], [1.701271572E12, 794.0], [1.701271785E12, 1021.0], [1.701271744E12, 439.0], [1.701271654E12, 422.0], [1.701271613E12, 519.0], [1.701271695E12, 457.0], [1.701271777E12, 1463.0], [1.701271736E12, 537.0], [1.701271646E12, 701.0], [1.701271605E12, 475.0], [1.701271687E12, 491.0], [1.701271769E12, 731.0], [1.701271728E12, 558.0], [1.701271638E12, 462.0], [1.701271851E12, 4281.0], [1.70127181E12, 1685.0], [1.701271597E12, 483.0], [1.701271849E12, 3912.0], [1.701271808E12, 3128.0], [1.701271718E12, 656.0], [1.70127189E12, 20549.0], [1.701271677E12, 433.0], [1.701271587E12, 667.0], [1.701271759E12, 428.0], [1.701271628E12, 449.0], [1.701271841E12, 34250.0], [1.7012718E12, 1538.0], [1.70127171E12, 462.0], [1.701271669E12, 450.0], [1.701271751E12, 444.0], [1.70127162E12, 825.0], [1.701271833E12, 1183.0], [1.701271792E12, 1162.0], [1.701271702E12, 438.0], [1.701271661E12, 532.0], [1.701271571E12, 544.0], [1.701271743E12, 637.0], [1.701271612E12, 473.0], [1.701271784E12, 613.0], [1.701271694E12, 564.0], [1.701271653E12, 474.0], [1.701271735E12, 432.0], [1.701271604E12, 442.0], [1.701271776E12, 1795.0], [1.701271686E12, 504.0], [1.701271645E12, 527.0], [1.701271727E12, 496.0], [1.701271596E12, 480.0], [1.701271809E12, 3176.0], [1.701271768E12, 525.0], [1.701271635E12, 1288.0], [1.701271594E12, 1642.0], [1.701271676E12, 451.0], [1.701271848E12, 3633.0], [1.701271758E12, 446.0], [1.701271717E12, 476.0], [1.701271627E12, 505.0], [1.701271586E12, 750.0], [1.701271799E12, 1487.0], [1.701271668E12, 547.0], [1.70127184E12, 5221.0], [1.70127175E12, 552.0], [1.701271709E12, 424.0], [1.701271619E12, 447.0], [1.701271791E12, 626.0], [1.70127166E12, 590.0], [1.701271873E12, 38255.0], [1.701271832E12, 626.0], [1.701271742E12, 456.0], [1.701271701E12, 427.0], [1.701271611E12, 455.0], [1.701271783E12, 471.0], [1.701271652E12, 407.0], [1.701271734E12, 482.0], [1.701271693E12, 618.0], [1.701271603E12, 546.0], [1.701271775E12, 1572.0], [1.701271644E12, 794.0], [1.701271726E12, 711.0], [1.701271685E12, 465.0], [1.701271595E12, 550.0], [1.701271767E12, 680.0], [1.701271806E12, 1575.0], [1.701271593E12, 689.0], [1.701271765E12, 605.0], [1.701271675E12, 422.0], [1.701271634E12, 676.0], [1.701271716E12, 564.0], [1.701271888E12, 16562.0], [1.701271798E12, 1565.0], [1.701271585E12, 504.0], [1.701271757E12, 483.0], [1.701271667E12, 416.0], [1.701271626E12, 515.0], [1.701271839E12, 4841.0], [1.701271708E12, 482.0], [1.70127179E12, 452.0], [1.701271749E12, 747.0], [1.701271659E12, 464.0], [1.701271618E12, 616.0], [1.701271831E12, 761.0], [1.7012717E12, 413.0], [1.701271782E12, 475.0], [1.701271569E12, 467.0], [1.701271741E12, 459.0], [1.701271651E12, 441.0], [1.70127161E12, 703.0], [1.701271692E12, 424.0], [1.701271774E12, 887.0], [1.701271733E12, 408.0], [1.701271643E12, 457.0], [1.701271602E12, 406.0], [1.701271815E12, 455.0], [1.701271684E12, 560.0], [1.701271766E12, 984.0], [1.701271725E12, 545.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.701271764E12, 1557.7], [1.701271846E12, 52769.100000000006], [1.701271633E12, 927.0], [1.701271592E12, 978.0], [1.701271805E12, 2006.0], [1.701271715E12, 1291.0], [1.701271674E12, 800.0], [1.701271756E12, 1196.1], [1.701271625E12, 819.0], [1.701271584E12, 1034.0], [1.701271797E12, 2293.0], [1.701271707E12, 698.0], [1.701271666E12, 907.0], [1.701271748E12, 1352.0], [1.70127183E12, 888.0], [1.701271617E12, 541.0], [1.701271789E12, 1460.0], [1.701271699E12, 1368.0], [1.701271658E12, 653.0], [1.70127174E12, 1381.0], [1.701271609E12, 710.0], [1.701271781E12, 1624.2], [1.701271691E12, 1500.0], [1.70127165E12, 1197.0], [1.701271732E12, 1194.0], [1.701271814E12, 879.0], [1.701271601E12, 1029.0], [1.701271773E12, 2297.0], [1.701271683E12, 807.0], [1.701271642E12, 637.0], [1.701271724E12, 1751.3], [1.701271763E12, 1756.4000000000003], [1.701271722E12, 2325.0], [1.701271804E12, 1991.0], [1.701271591E12, 983.0], [1.701271673E12, 830.0], [1.701271632E12, 612.0], [1.701271845E12, 37714.0], [1.701271755E12, 1254.0], [1.701271714E12, 1243.0], [1.701271796E12, 30036.8], [1.701271583E12, 576.0], [1.701271665E12, 698.0], [1.701271624E12, 1184.0], [1.701271747E12, 1499.4], [1.701271706E12, 814.0], [1.701271788E12, 1157.1], [1.701271575E12, 605.0], [1.701271657E12, 1123.0], [1.701271616E12, 573.0], [1.701271829E12, 682.0], [1.701271739E12, 514.0], [1.701271698E12, 1178.0], [1.70127178E12, 1721.0], [1.701271649E12, 1107.0], [1.701271608E12, 761.0], [1.701271731E12, 805.0], [1.70127169E12, 1475.0], [1.701271772E12, 1991.0], [1.701271854E12, 4261.6], [1.701271641E12, 1340.0], [1.7012716E12, 649.0], [1.701271813E12, 1012.0], [1.701271723E12, 2606.0], [1.701271682E12, 1063.0], [1.701271721E12, 1796.0], [1.70127168E12, 1106.0], [1.70127159E12, 670.0], [1.701271803E12, 2000.0], [1.701271762E12, 1930.8], [1.701271844E12, 37750.0], [1.701271631E12, 621.0], [1.701271713E12, 1172.0], [1.701271672E12, 717.0], [1.701271582E12, 1146.0], [1.701271795E12, 29771.0], [1.701271754E12, 896.6], [1.701271836E12, 30612.0], [1.701271623E12, 696.0], [1.701271705E12, 809.0], [1.701271664E12, 675.0], [1.701271574E12, 636.0], [1.701271787E12, 1404.6], [1.701271746E12, 1242.0], [1.701271615E12, 1342.0], [1.701271697E12, 979.0], [1.701271656E12, 924.0], [1.701271779E12, 1716.0], [1.701271738E12, 899.8], [1.701271607E12, 640.0], [1.701271689E12, 979.0], [1.701271648E12, 1065.0], [1.701271771E12, 1668.0], [1.70127173E12, 1436.8000000000002], [1.701271812E12, 35818.0], [1.701271599E12, 518.0], [1.701271681E12, 1007.0], [1.70127164E12, 532.0], [1.701271853E12, 4595.0], [1.701271679E12, 1145.0], [1.701271761E12, 2072.0], [1.70127172E12, 1198.0], [1.70127163E12, 555.0], [1.701271802E12, 2098.0], [1.701271589E12, 789.0], [1.701271671E12, 726.0], [1.701271753E12, 2014.6], [1.701271712E12, 764.0], [1.701271622E12, 546.0], [1.701271835E12, 31022.0], [1.701271794E12, 1886.0], [1.701271581E12, 736.0], [1.701271663E12, 898.0], [1.701271745E12, 1307.2], [1.701271704E12, 903.0], [1.701271614E12, 616.0], [1.701271786E12, 1786.5], [1.701271573E12, 607.0], [1.701271655E12, 866.0], [1.701271737E12, 991.0], [1.701271696E12, 1085.0], [1.701271606E12, 644.0], [1.701271778E12, 2356.1], [1.701271647E12, 981.0], [1.701271729E12, 1517.0], [1.701271688E12, 1376.0], [1.701271598E12, 647.0], [1.701271811E12, 18192.0], [1.70127177E12, 1707.0], [1.701271639E12, 699.0], [1.701271678E12, 1109.0], [1.70127185E12, 4077.6], [1.701271637E12, 1318.0], [1.701271719E12, 1352.0000000000002], [1.701271588E12, 718.0], [1.701271801E12, 2102.0], [1.70127176E12, 1302.0], [1.70127167E12, 757.0], [1.701271629E12, 647.0], [1.701271711E12, 688.0], [1.70127158E12, 627.0], [1.701271793E12, 1732.2], [1.701271752E12, 835.0], [1.701271662E12, 899.0], [1.701271834E12, 1515.0], [1.701271621E12, 794.0], [1.701271703E12, 1214.5], [1.701271572E12, 794.0], [1.701271785E12, 1614.0], [1.701271744E12, 1364.4], [1.701271654E12, 876.0], [1.701271613E12, 581.0], [1.701271695E12, 1196.0], [1.701271777E12, 2120.3], [1.701271736E12, 1215.0], [1.701271646E12, 1079.0], [1.701271605E12, 785.0], [1.701271687E12, 906.0], [1.701271769E12, 1570.0], [1.701271728E12, 1357.0], [1.701271638E12, 555.0], [1.701271851E12, 4281.0], [1.70127181E12, 18045.0], [1.701271597E12, 483.0], [1.701271849E12, 4179.0], [1.701271808E12, 3300.0], [1.701271718E12, 1547.0], [1.70127189E12, 23572.0], [1.701271677E12, 905.0], [1.701271587E12, 742.0], [1.701271759E12, 1387.2], [1.701271628E12, 516.0], [1.701271841E12, 44487.0], [1.7012718E12, 1939.0], [1.70127171E12, 1136.4], [1.701271669E12, 934.0], [1.701271751E12, 1091.0], [1.70127162E12, 826.0], [1.701271833E12, 1311.0], [1.701271792E12, 1862.2], [1.701271702E12, 1261.0], [1.701271661E12, 797.0], [1.701271571E12, 921.0], [1.701271743E12, 1833.0], [1.701271612E12, 850.0], [1.701271784E12, 1466.0], [1.701271694E12, 692.0], [1.701271653E12, 591.0], [1.701271735E12, 959.0], [1.701271604E12, 606.0], [1.701271776E12, 2234.0], [1.701271686E12, 777.0], [1.701271645E12, 823.0], [1.701271727E12, 1503.0], [1.701271596E12, 1583.0], [1.701271809E12, 3307.0], [1.701271768E12, 1300.0], [1.701271635E12, 1359.0], [1.701271594E12, 1642.0], [1.701271676E12, 931.0], [1.701271848E12, 3899.0], [1.701271758E12, 1202.0], [1.701271717E12, 1277.0], [1.701271627E12, 871.0], [1.701271586E12, 750.0], [1.701271799E12, 1997.0], [1.701271668E12, 900.0], [1.70127184E12, 5221.0], [1.70127175E12, 923.0], [1.701271709E12, 902.0], [1.701271619E12, 819.0], [1.701271791E12, 1873.0], [1.70127166E12, 1055.0], [1.701271873E12, 38472.0], [1.701271832E12, 707.0], [1.701271742E12, 1975.4], [1.701271701E12, 750.0], [1.701271611E12, 616.0], [1.701271783E12, 1561.9], [1.701271652E12, 494.0], [1.701271734E12, 736.0], [1.701271693E12, 1184.0], [1.701271603E12, 554.0], [1.701271775E12, 1911.0], [1.701271644E12, 801.0], [1.701271726E12, 1376.0], [1.701271685E12, 960.0], [1.701271595E12, 550.0], [1.701271767E12, 1701.6000000000001], [1.701271806E12, 2056.0], [1.701271593E12, 694.0], [1.701271765E12, 1406.0], [1.701271675E12, 890.0], [1.701271634E12, 860.0], [1.701271716E12, 1380.0], [1.701271888E12, 24090.0], [1.701271798E12, 2073.0], [1.701271585E12, 532.0], [1.701271757E12, 1463.6], [1.701271667E12, 696.0], [1.701271626E12, 655.0], [1.701271839E12, 5290.0], [1.701271708E12, 710.0], [1.70127179E12, 1665.8], [1.701271749E12, 1295.4], [1.701271659E12, 868.0], [1.701271618E12, 620.0], [1.701271831E12, 953.0], [1.7012717E12, 1180.0], [1.701271782E12, 1446.4], [1.701271569E12, 549.0], [1.701271741E12, 1693.8000000000002], [1.701271651E12, 489.0], [1.70127161E12, 718.0], [1.701271692E12, 1406.0], [1.701271774E12, 2276.1], [1.701271733E12, 1133.0], [1.701271643E12, 667.0], [1.701271602E12, 541.0], [1.701271815E12, 455.0], [1.701271684E12, 825.0], [1.701271766E12, 1402.0], [1.701271725E12, 1419.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.701271764E12, 1562.0], [1.701271846E12, 53448.0], [1.701271633E12, 927.0], [1.701271592E12, 978.0], [1.701271805E12, 2006.0], [1.701271715E12, 1291.0], [1.701271674E12, 800.0], [1.701271756E12, 1200.0], [1.701271625E12, 819.0], [1.701271584E12, 1034.0], [1.701271797E12, 2293.0], [1.701271707E12, 698.0], [1.701271666E12, 907.0], [1.701271748E12, 1352.0], [1.70127183E12, 888.0], [1.701271617E12, 541.0], [1.701271789E12, 1460.0], [1.701271699E12, 1368.0], [1.701271658E12, 653.0], [1.70127174E12, 1381.0], [1.701271609E12, 710.0], [1.701271781E12, 1635.0], [1.701271691E12, 1500.0], [1.70127165E12, 1197.0], [1.701271732E12, 1194.0], [1.701271814E12, 879.0], [1.701271601E12, 1029.0], [1.701271773E12, 2297.0], [1.701271683E12, 807.0], [1.701271642E12, 637.0], [1.701271724E12, 1759.0], [1.701271763E12, 1838.0], [1.701271722E12, 2325.0], [1.701271804E12, 1991.0], [1.701271591E12, 983.0], [1.701271673E12, 830.0], [1.701271632E12, 612.0], [1.701271845E12, 37714.0], [1.701271755E12, 1254.0], [1.701271714E12, 1243.0], [1.701271796E12, 30066.0], [1.701271583E12, 576.0], [1.701271665E12, 698.0], [1.701271624E12, 1184.0], [1.701271747E12, 1501.0], [1.701271706E12, 814.0], [1.701271788E12, 1158.0], [1.701271575E12, 605.0], [1.701271657E12, 1123.0], [1.701271616E12, 573.0], [1.701271829E12, 682.0], [1.701271739E12, 514.0], [1.701271698E12, 1178.0], [1.70127178E12, 1721.0], [1.701271649E12, 1107.0], [1.701271608E12, 761.0], [1.701271731E12, 805.0], [1.70127169E12, 1475.0], [1.701271772E12, 1991.0], [1.701271854E12, 4266.0], [1.701271641E12, 1340.0], [1.7012716E12, 649.0], [1.701271813E12, 1012.0], [1.701271723E12, 2619.0], [1.701271682E12, 1063.0], [1.701271721E12, 1796.0], [1.70127168E12, 1106.0], [1.70127159E12, 670.0], [1.701271803E12, 2000.0], [1.701271762E12, 1932.0], [1.701271844E12, 37750.0], [1.701271631E12, 621.0], [1.701271713E12, 1172.0], [1.701271672E12, 717.0], [1.701271582E12, 1146.0], [1.701271795E12, 29771.0], [1.701271754E12, 898.0], [1.701271836E12, 30612.0], [1.701271623E12, 696.0], [1.701271705E12, 821.0], [1.701271664E12, 675.0], [1.701271574E12, 636.0], [1.701271787E12, 1485.0], [1.701271746E12, 1242.0], [1.701271615E12, 1342.0], [1.701271697E12, 979.0], [1.701271656E12, 924.0], [1.701271779E12, 1731.0], [1.701271738E12, 901.0], [1.701271607E12, 640.0], [1.701271689E12, 979.0], [1.701271648E12, 1065.0], [1.701271771E12, 1668.0], [1.70127173E12, 1464.0], [1.701271812E12, 35818.0], [1.701271599E12, 518.0], [1.701271681E12, 1007.0], [1.70127164E12, 532.0], [1.701271853E12, 4595.0], [1.701271679E12, 1145.0], [1.701271761E12, 2072.0], [1.70127172E12, 1198.0], [1.70127163E12, 555.0], [1.701271802E12, 2098.0], [1.701271589E12, 789.0], [1.701271671E12, 726.0], [1.701271753E12, 2015.0], [1.701271712E12, 764.0], [1.701271622E12, 546.0], [1.701271835E12, 31022.0], [1.701271794E12, 1886.0], [1.701271581E12, 736.0], [1.701271663E12, 898.0], [1.701271745E12, 1309.0], [1.701271704E12, 903.0], [1.701271614E12, 616.0], [1.701271786E12, 1794.0], [1.701271573E12, 607.0], [1.701271655E12, 866.0], [1.701271737E12, 991.0], [1.701271696E12, 1085.0], [1.701271606E12, 644.0], [1.701271778E12, 2364.0], [1.701271647E12, 981.0], [1.701271729E12, 1517.0], [1.701271688E12, 1376.0], [1.701271598E12, 647.0], [1.701271811E12, 18192.0], [1.70127177E12, 1708.0], [1.701271639E12, 699.0], [1.701271678E12, 1109.0], [1.70127185E12, 4099.0], [1.701271637E12, 1318.0], [1.701271719E12, 1389.0], [1.701271588E12, 718.0], [1.701271801E12, 2102.0], [1.70127176E12, 1302.0], [1.70127167E12, 757.0], [1.701271629E12, 647.0], [1.701271711E12, 688.0], [1.70127158E12, 627.0], [1.701271793E12, 1750.0], [1.701271752E12, 835.0], [1.701271662E12, 899.0], [1.701271834E12, 1515.0], [1.701271621E12, 794.0], [1.701271703E12, 1226.0], [1.701271572E12, 794.0], [1.701271785E12, 1614.0], [1.701271744E12, 1378.0], [1.701271654E12, 876.0], [1.701271613E12, 581.0], [1.701271695E12, 1196.0], [1.701271777E12, 2138.0], [1.701271736E12, 1215.0], [1.701271646E12, 1079.0], [1.701271605E12, 785.0], [1.701271687E12, 906.0], [1.701271769E12, 1570.0], [1.701271728E12, 1357.0], [1.701271638E12, 555.0], [1.701271851E12, 4281.0], [1.70127181E12, 18045.0], [1.701271597E12, 483.0], [1.701271849E12, 4179.0], [1.701271808E12, 3300.0], [1.701271718E12, 1547.0], [1.70127189E12, 23572.0], [1.701271677E12, 905.0], [1.701271587E12, 742.0], [1.701271759E12, 1389.0], [1.701271628E12, 516.0], [1.701271841E12, 44487.0], [1.7012718E12, 1939.0], [1.70127171E12, 1137.0], [1.701271669E12, 934.0], [1.701271751E12, 1091.0], [1.70127162E12, 826.0], [1.701271833E12, 1311.0], [1.701271792E12, 1869.0], [1.701271702E12, 1261.0], [1.701271661E12, 797.0], [1.701271571E12, 921.0], [1.701271743E12, 1833.0], [1.701271612E12, 850.0], [1.701271784E12, 1466.0], [1.701271694E12, 692.0], [1.701271653E12, 591.0], [1.701271735E12, 959.0], [1.701271604E12, 606.0], [1.701271776E12, 2234.0], [1.701271686E12, 777.0], [1.701271645E12, 823.0], [1.701271727E12, 1503.0], [1.701271596E12, 1583.0], [1.701271809E12, 3307.0], [1.701271768E12, 1300.0], [1.701271635E12, 1359.0], [1.701271594E12, 1642.0], [1.701271676E12, 931.0], [1.701271848E12, 3899.0], [1.701271758E12, 1202.0], [1.701271717E12, 1277.0], [1.701271627E12, 871.0], [1.701271586E12, 750.0], [1.701271799E12, 1997.0], [1.701271668E12, 900.0], [1.70127184E12, 5221.0], [1.70127175E12, 923.0], [1.701271709E12, 902.0], [1.701271619E12, 819.0], [1.701271791E12, 1873.0], [1.70127166E12, 1055.0], [1.701271873E12, 38472.0], [1.701271832E12, 707.0], [1.701271742E12, 1982.0], [1.701271701E12, 750.0], [1.701271611E12, 616.0], [1.701271783E12, 1582.0], [1.701271652E12, 494.0], [1.701271734E12, 736.0], [1.701271693E12, 1184.0], [1.701271603E12, 554.0], [1.701271775E12, 1911.0], [1.701271644E12, 801.0], [1.701271726E12, 1376.0], [1.701271685E12, 960.0], [1.701271595E12, 550.0], [1.701271767E12, 1725.0], [1.701271806E12, 2056.0], [1.701271593E12, 694.0], [1.701271765E12, 1406.0], [1.701271675E12, 890.0], [1.701271634E12, 860.0], [1.701271716E12, 1380.0], [1.701271888E12, 24111.0], [1.701271798E12, 2073.0], [1.701271585E12, 532.0], [1.701271757E12, 1467.0], [1.701271667E12, 696.0], [1.701271626E12, 655.0], [1.701271839E12, 5290.0], [1.701271708E12, 710.0], [1.70127179E12, 1680.0], [1.701271749E12, 1296.0], [1.701271659E12, 868.0], [1.701271618E12, 620.0], [1.701271831E12, 953.0], [1.7012717E12, 1180.0], [1.701271782E12, 1453.0], [1.701271569E12, 549.0], [1.701271741E12, 1753.0], [1.701271651E12, 489.0], [1.70127161E12, 718.0], [1.701271692E12, 1406.0], [1.701271774E12, 2285.0], [1.701271733E12, 1133.0], [1.701271643E12, 667.0], [1.701271602E12, 541.0], [1.701271815E12, 455.0], [1.701271684E12, 825.0], [1.701271766E12, 1402.0], [1.701271725E12, 1419.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.701271764E12, 1425.5], [1.701271846E12, 5525.5], [1.701271633E12, 723.0], [1.701271592E12, 976.5], [1.701271805E12, 1513.0], [1.701271715E12, 1026.0], [1.701271674E12, 582.0], [1.701271756E12, 1044.5], [1.701271625E12, 627.0], [1.701271584E12, 857.5], [1.701271797E12, 2001.0], [1.701271707E12, 569.0], [1.701271666E12, 735.5], [1.701271748E12, 860.5], [1.70127183E12, 812.0], [1.701271617E12, 439.0], [1.701271789E12, 1222.0], [1.701271699E12, 884.0], [1.701271658E12, 464.5], [1.70127174E12, 1315.0], [1.701271609E12, 606.0], [1.701271781E12, 1238.0], [1.701271691E12, 727.0], [1.70127165E12, 676.5], [1.701271732E12, 618.0], [1.701271814E12, 792.0], [1.701271601E12, 1027.5], [1.701271773E12, 1846.0], [1.701271683E12, 650.0], [1.701271642E12, 557.0], [1.701271724E12, 1109.5], [1.701271763E12, 834.0], [1.701271722E12, 1146.5], [1.701271804E12, 1467.0], [1.701271591E12, 983.0], [1.701271673E12, 508.0], [1.701271632E12, 513.0], [1.701271845E12, 5838.0], [1.701271755E12, 927.0], [1.701271714E12, 883.0], [1.701271796E12, 2415.0], [1.701271583E12, 576.0], [1.701271665E12, 529.0], [1.701271624E12, 1096.5], [1.701271747E12, 1003.0], [1.701271706E12, 582.0], [1.701271788E12, 904.5], [1.701271575E12, 578.5], [1.701271657E12, 807.0], [1.701271616E12, 509.0], [1.701271829E12, 682.0], [1.701271739E12, 506.0], [1.701271698E12, 824.0], [1.70127178E12, 1368.0], [1.701271649E12, 946.0], [1.701271608E12, 673.0], [1.701271731E12, 703.0], [1.70127169E12, 597.0], [1.701271772E12, 1698.0], [1.701271854E12, 4104.0], [1.701271641E12, 1179.0], [1.7012716E12, 560.5], [1.701271813E12, 933.0], [1.701271723E12, 1967.0], [1.701271682E12, 742.0], [1.701271721E12, 1612.0], [1.70127168E12, 880.5], [1.70127159E12, 636.5], [1.701271803E12, 1910.0], [1.701271762E12, 821.5], [1.701271844E12, 37452.5], [1.701271631E12, 565.0], [1.701271713E12, 1111.0], [1.701271672E12, 636.0], [1.701271582E12, 1146.0], [1.701271795E12, 1680.5], [1.701271754E12, 731.5], [1.701271836E12, 30508.0], [1.701271623E12, 696.0], [1.701271705E12, 578.5], [1.701271664E12, 620.5], [1.701271574E12, 636.0], [1.701271787E12, 1097.0], [1.701271746E12, 947.0], [1.701271615E12, 1339.0], [1.701271697E12, 712.0], [1.701271656E12, 810.0], [1.701271779E12, 1604.0], [1.701271738E12, 783.0], [1.701271607E12, 588.0], [1.701271689E12, 836.5], [1.701271648E12, 777.0], [1.701271771E12, 1413.5], [1.70127173E12, 931.0], [1.701271812E12, 19010.0], [1.701271599E12, 512.5], [1.701271681E12, 654.0], [1.70127164E12, 532.0], [1.701271853E12, 4509.5], [1.701271679E12, 640.0], [1.701271761E12, 1026.0], [1.70127172E12, 837.0], [1.70127163E12, 512.5], [1.701271802E12, 1985.0], [1.701271589E12, 789.0], [1.701271671E12, 716.0], [1.701271753E12, 1272.0], [1.701271712E12, 626.0], [1.701271622E12, 531.5], [1.701271835E12, 30807.0], [1.701271794E12, 1372.0], [1.701271581E12, 736.0], [1.701271663E12, 730.0], [1.701271745E12, 896.0], [1.701271704E12, 779.0], [1.701271614E12, 616.0], [1.701271786E12, 1365.5], [1.701271573E12, 597.5], [1.701271655E12, 541.0], [1.701271737E12, 835.5], [1.701271696E12, 599.0], [1.701271606E12, 643.5], [1.701271778E12, 1689.5], [1.701271647E12, 923.0], [1.701271729E12, 937.0], [1.701271688E12, 1329.0], [1.701271598E12, 641.0], [1.701271811E12, 1525.0], [1.70127177E12, 1189.0], [1.701271639E12, 515.0], [1.701271678E12, 978.0], [1.70127185E12, 3898.0], [1.701271637E12, 1311.0], [1.701271719E12, 897.0], [1.701271588E12, 608.5], [1.701271801E12, 2007.0], [1.70127176E12, 829.5], [1.70127167E12, 587.0], [1.701271629E12, 591.5], [1.701271711E12, 608.0], [1.70127158E12, 624.0], [1.701271793E12, 1254.0], [1.701271752E12, 753.0], [1.701271662E12, 577.0], [1.701271834E12, 1483.0], [1.701271621E12, 548.0], [1.701271703E12, 939.0], [1.701271572E12, 794.0], [1.701271785E12, 1130.5], [1.701271744E12, 1062.0], [1.701271654E12, 827.0], [1.701271613E12, 576.5], [1.701271695E12, 833.5], [1.701271777E12, 1597.5], [1.701271736E12, 857.0], [1.701271646E12, 942.0], [1.701271605E12, 735.0], [1.701271687E12, 532.0], [1.701271769E12, 1290.0], [1.701271728E12, 1104.0], [1.701271638E12, 481.0], [1.701271851E12, 4281.0], [1.70127181E12, 1752.0], [1.701271597E12, 483.0], [1.701271849E12, 4034.5], [1.701271808E12, 3205.5], [1.701271718E12, 1287.0], [1.70127189E12, 22411.0], [1.701271677E12, 558.0], [1.701271587E12, 704.5], [1.701271759E12, 922.5], [1.701271628E12, 482.5], [1.701271841E12, 41894.0], [1.7012718E12, 1826.0], [1.70127171E12, 743.0], [1.701271669E12, 561.0], [1.701271751E12, 1014.0], [1.70127162E12, 825.5], [1.701271833E12, 1236.0], [1.701271792E12, 1601.0], [1.701271702E12, 1109.0], [1.701271661E12, 749.0], [1.701271571E12, 732.5], [1.701271743E12, 1415.0], [1.701271612E12, 655.5], [1.701271784E12, 1374.0], [1.701271694E12, 663.5], [1.701271653E12, 518.0], [1.701271735E12, 559.0], [1.701271604E12, 524.0], [1.701271776E12, 2085.0], [1.701271686E12, 695.0], [1.701271645E12, 623.0], [1.701271727E12, 1419.0], [1.701271596E12, 1500.5], [1.701271809E12, 3199.5], [1.701271768E12, 739.0], [1.701271635E12, 1356.0], [1.701271594E12, 1642.0], [1.701271676E12, 751.0], [1.701271848E12, 3769.0], [1.701271758E12, 946.0], [1.701271717E12, 1163.0], [1.701271627E12, 611.0], [1.701271586E12, 750.0], [1.701271799E12, 1720.5], [1.701271668E12, 704.0], [1.70127184E12, 5221.0], [1.70127175E12, 829.0], [1.701271709E12, 573.0], [1.701271619E12, 512.5], [1.701271791E12, 1295.5], [1.70127166E12, 812.0], [1.701271873E12, 38397.0], [1.701271832E12, 666.5], [1.701271742E12, 891.0], [1.701271701E12, 495.0], [1.701271611E12, 554.0], [1.701271783E12, 1181.0], [1.701271652E12, 457.0], [1.701271734E12, 598.0], [1.701271693E12, 708.0], [1.701271603E12, 550.0], [1.701271775E12, 1644.0], [1.701271644E12, 797.5], [1.701271726E12, 1277.5], [1.701271685E12, 746.0], [1.701271595E12, 550.0], [1.701271767E12, 1113.5], [1.701271806E12, 1679.0], [1.701271593E12, 691.5], [1.701271765E12, 1099.5], [1.701271675E12, 673.5], [1.701271634E12, 768.0], [1.701271716E12, 1126.5], [1.701271888E12, 23314.0], [1.701271798E12, 1925.0], [1.701271585E12, 518.0], [1.701271757E12, 1221.0], [1.701271667E12, 635.5], [1.701271626E12, 650.0], [1.701271839E12, 5210.0], [1.701271708E12, 578.0], [1.70127179E12, 1524.0], [1.701271749E12, 856.5], [1.701271659E12, 666.0], [1.701271618E12, 618.0], [1.701271831E12, 857.0], [1.7012717E12, 766.0], [1.701271782E12, 1287.0], [1.701271569E12, 508.0], [1.701271741E12, 1314.0], [1.701271651E12, 460.5], [1.70127161E12, 710.5], [1.701271692E12, 512.0], [1.701271774E12, 2066.5], [1.701271733E12, 900.5], [1.701271643E12, 522.5], [1.701271602E12, 510.0], [1.701271815E12, 455.0], [1.701271684E12, 759.0], [1.701271766E12, 1063.5], [1.701271725E12, 1314.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.701271764E12, 1562.0], [1.701271846E12, 53448.0], [1.701271633E12, 927.0], [1.701271592E12, 978.0], [1.701271805E12, 2006.0], [1.701271715E12, 1291.0], [1.701271674E12, 800.0], [1.701271756E12, 1200.0], [1.701271625E12, 819.0], [1.701271584E12, 1034.0], [1.701271797E12, 2293.0], [1.701271707E12, 698.0], [1.701271666E12, 907.0], [1.701271748E12, 1352.0], [1.70127183E12, 888.0], [1.701271617E12, 541.0], [1.701271789E12, 1460.0], [1.701271699E12, 1368.0], [1.701271658E12, 653.0], [1.70127174E12, 1381.0], [1.701271609E12, 710.0], [1.701271781E12, 1635.0], [1.701271691E12, 1500.0], [1.70127165E12, 1197.0], [1.701271732E12, 1194.0], [1.701271814E12, 879.0], [1.701271601E12, 1029.0], [1.701271773E12, 2297.0], [1.701271683E12, 807.0], [1.701271642E12, 637.0], [1.701271724E12, 1759.0], [1.701271763E12, 1838.0], [1.701271722E12, 2325.0], [1.701271804E12, 1991.0], [1.701271591E12, 983.0], [1.701271673E12, 830.0], [1.701271632E12, 612.0], [1.701271845E12, 37714.0], [1.701271755E12, 1254.0], [1.701271714E12, 1243.0], [1.701271796E12, 30066.0], [1.701271583E12, 576.0], [1.701271665E12, 698.0], [1.701271624E12, 1184.0], [1.701271747E12, 1501.0], [1.701271706E12, 814.0], [1.701271788E12, 1158.0], [1.701271575E12, 605.0], [1.701271657E12, 1123.0], [1.701271616E12, 573.0], [1.701271829E12, 682.0], [1.701271739E12, 514.0], [1.701271698E12, 1178.0], [1.70127178E12, 1721.0], [1.701271649E12, 1107.0], [1.701271608E12, 761.0], [1.701271731E12, 805.0], [1.70127169E12, 1475.0], [1.701271772E12, 1991.0], [1.701271854E12, 4266.0], [1.701271641E12, 1340.0], [1.7012716E12, 649.0], [1.701271813E12, 1012.0], [1.701271723E12, 2619.0], [1.701271682E12, 1063.0], [1.701271721E12, 1796.0], [1.70127168E12, 1106.0], [1.70127159E12, 670.0], [1.701271803E12, 2000.0], [1.701271762E12, 1932.0], [1.701271844E12, 37750.0], [1.701271631E12, 621.0], [1.701271713E12, 1172.0], [1.701271672E12, 717.0], [1.701271582E12, 1146.0], [1.701271795E12, 29771.0], [1.701271754E12, 898.0], [1.701271836E12, 30612.0], [1.701271623E12, 696.0], [1.701271705E12, 821.0], [1.701271664E12, 675.0], [1.701271574E12, 636.0], [1.701271787E12, 1485.0], [1.701271746E12, 1242.0], [1.701271615E12, 1342.0], [1.701271697E12, 979.0], [1.701271656E12, 924.0], [1.701271779E12, 1731.0], [1.701271738E12, 901.0], [1.701271607E12, 640.0], [1.701271689E12, 979.0], [1.701271648E12, 1065.0], [1.701271771E12, 1668.0], [1.70127173E12, 1464.0], [1.701271812E12, 35818.0], [1.701271599E12, 518.0], [1.701271681E12, 1007.0], [1.70127164E12, 532.0], [1.701271853E12, 4595.0], [1.701271679E12, 1145.0], [1.701271761E12, 2072.0], [1.70127172E12, 1198.0], [1.70127163E12, 555.0], [1.701271802E12, 2098.0], [1.701271589E12, 789.0], [1.701271671E12, 726.0], [1.701271753E12, 2015.0], [1.701271712E12, 764.0], [1.701271622E12, 546.0], [1.701271835E12, 31022.0], [1.701271794E12, 1886.0], [1.701271581E12, 736.0], [1.701271663E12, 898.0], [1.701271745E12, 1309.0], [1.701271704E12, 903.0], [1.701271614E12, 616.0], [1.701271786E12, 1794.0], [1.701271573E12, 607.0], [1.701271655E12, 866.0], [1.701271737E12, 991.0], [1.701271696E12, 1085.0], [1.701271606E12, 644.0], [1.701271778E12, 2364.0], [1.701271647E12, 981.0], [1.701271729E12, 1517.0], [1.701271688E12, 1376.0], [1.701271598E12, 647.0], [1.701271811E12, 18192.0], [1.70127177E12, 1708.0], [1.701271639E12, 699.0], [1.701271678E12, 1109.0], [1.70127185E12, 4099.0], [1.701271637E12, 1318.0], [1.701271719E12, 1389.0], [1.701271588E12, 718.0], [1.701271801E12, 2102.0], [1.70127176E12, 1302.0], [1.70127167E12, 757.0], [1.701271629E12, 647.0], [1.701271711E12, 688.0], [1.70127158E12, 627.0], [1.701271793E12, 1750.0], [1.701271752E12, 835.0], [1.701271662E12, 899.0], [1.701271834E12, 1515.0], [1.701271621E12, 794.0], [1.701271703E12, 1226.0], [1.701271572E12, 794.0], [1.701271785E12, 1614.0], [1.701271744E12, 1378.0], [1.701271654E12, 876.0], [1.701271613E12, 581.0], [1.701271695E12, 1196.0], [1.701271777E12, 2138.0], [1.701271736E12, 1215.0], [1.701271646E12, 1079.0], [1.701271605E12, 785.0], [1.701271687E12, 906.0], [1.701271769E12, 1570.0], [1.701271728E12, 1357.0], [1.701271638E12, 555.0], [1.701271851E12, 4281.0], [1.70127181E12, 18045.0], [1.701271597E12, 483.0], [1.701271849E12, 4179.0], [1.701271808E12, 3300.0], [1.701271718E12, 1547.0], [1.70127189E12, 23572.0], [1.701271677E12, 905.0], [1.701271587E12, 742.0], [1.701271759E12, 1389.0], [1.701271628E12, 516.0], [1.701271841E12, 44487.0], [1.7012718E12, 1939.0], [1.70127171E12, 1137.0], [1.701271669E12, 934.0], [1.701271751E12, 1091.0], [1.70127162E12, 826.0], [1.701271833E12, 1311.0], [1.701271792E12, 1869.0], [1.701271702E12, 1261.0], [1.701271661E12, 797.0], [1.701271571E12, 921.0], [1.701271743E12, 1833.0], [1.701271612E12, 850.0], [1.701271784E12, 1466.0], [1.701271694E12, 692.0], [1.701271653E12, 591.0], [1.701271735E12, 959.0], [1.701271604E12, 606.0], [1.701271776E12, 2234.0], [1.701271686E12, 777.0], [1.701271645E12, 823.0], [1.701271727E12, 1503.0], [1.701271596E12, 1583.0], [1.701271809E12, 3307.0], [1.701271768E12, 1300.0], [1.701271635E12, 1359.0], [1.701271594E12, 1642.0], [1.701271676E12, 931.0], [1.701271848E12, 3899.0], [1.701271758E12, 1202.0], [1.701271717E12, 1277.0], [1.701271627E12, 871.0], [1.701271586E12, 750.0], [1.701271799E12, 1997.0], [1.701271668E12, 900.0], [1.70127184E12, 5221.0], [1.70127175E12, 923.0], [1.701271709E12, 902.0], [1.701271619E12, 819.0], [1.701271791E12, 1873.0], [1.70127166E12, 1055.0], [1.701271873E12, 38472.0], [1.701271832E12, 707.0], [1.701271742E12, 1982.0], [1.701271701E12, 750.0], [1.701271611E12, 616.0], [1.701271783E12, 1582.0], [1.701271652E12, 494.0], [1.701271734E12, 736.0], [1.701271693E12, 1184.0], [1.701271603E12, 554.0], [1.701271775E12, 1911.0], [1.701271644E12, 801.0], [1.701271726E12, 1376.0], [1.701271685E12, 960.0], [1.701271595E12, 550.0], [1.701271767E12, 1725.0], [1.701271806E12, 2056.0], [1.701271593E12, 694.0], [1.701271765E12, 1406.0], [1.701271675E12, 890.0], [1.701271634E12, 860.0], [1.701271716E12, 1380.0], [1.701271888E12, 24111.0], [1.701271798E12, 2073.0], [1.701271585E12, 532.0], [1.701271757E12, 1467.0], [1.701271667E12, 696.0], [1.701271626E12, 655.0], [1.701271839E12, 5290.0], [1.701271708E12, 710.0], [1.70127179E12, 1680.0], [1.701271749E12, 1296.0], [1.701271659E12, 868.0], [1.701271618E12, 620.0], [1.701271831E12, 953.0], [1.7012717E12, 1180.0], [1.701271782E12, 1453.0], [1.701271569E12, 549.0], [1.701271741E12, 1753.0], [1.701271651E12, 489.0], [1.70127161E12, 718.0], [1.701271692E12, 1406.0], [1.701271774E12, 2285.0], [1.701271733E12, 1133.0], [1.701271643E12, 667.0], [1.701271602E12, 541.0], [1.701271815E12, 455.0], [1.701271684E12, 825.0], [1.701271766E12, 1402.0], [1.701271725E12, 1419.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.70127189E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 45.0, "minX": 1.0, "maxY": 60026.0, "series": [{"data": [[2.0, 668.5], [8.0, 989.5], [9.0, 1120.5], [10.0, 1016.5], [11.0, 1188.5], [3.0, 620.0], [12.0, 1295.5], [13.0, 1284.0], [14.0, 4104.0], [15.0, 1604.0], [1.0, 696.0], [4.0, 668.0], [16.0, 23498.5], [18.0, 38397.0], [5.0, 735.0], [6.0, 924.0], [24.0, 4281.0], [7.0, 939.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[8.0, 30552.5], [9.0, 35979.0], [3.0, 60025.0], [14.0, 60026.0], [15.0, 45.0], [4.0, 60024.0], [16.0, 46.0], [1.0, 60023.5], [17.0, 46.0], [18.0, 47.0], [19.0, 46.0], [5.0, 32116.0], [6.0, 60024.0], [24.0, 43968.0], [25.0, 18720.0], [7.0, 46135.0], [30.0, 19360.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 30.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 43968.0, "series": [{"data": [[2.0, 603.0], [8.0, 919.5], [9.0, 1056.0], [10.0, 950.0], [11.0, 1121.0], [3.0, 555.0], [12.0, 1229.0], [13.0, 1220.0], [14.0, 4037.0], [15.0, 1538.0], [1.0, 631.0], [4.0, 603.0], [16.0, 23132.5], [18.0, 38330.0], [5.0, 662.0], [6.0, 861.0], [24.0, 4214.0], [7.0, 866.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[8.0, 540.5], [9.0, 35979.0], [3.0, 0.0], [14.0, 0.0], [15.0, 45.0], [4.0, 0.0], [16.0, 45.0], [1.0, 0.0], [17.0, 44.0], [18.0, 47.0], [19.0, 45.0], [5.0, 45.0], [6.0, 0.0], [24.0, 43968.0], [25.0, 18720.0], [7.0, 16120.5], [30.0, 19254.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 30.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.701271568E12, "maxY": 15.0, "series": [{"data": [[1.701271764E12, 10.0], [1.701271846E12, 12.0], [1.701271633E12, 4.0], [1.701271592E12, 2.0], [1.701271805E12, 11.0], [1.701271715E12, 7.0], [1.701271674E12, 5.0], [1.701271756E12, 9.0], [1.701271625E12, 4.0], [1.701271584E12, 2.0], [1.701271797E12, 10.0], [1.701271707E12, 7.0], [1.701271666E12, 5.0], [1.701271748E12, 8.0], [1.70127183E12, 3.0], [1.701271617E12, 3.0], [1.701271789E12, 11.0], [1.701271699E12, 7.0], [1.701271658E12, 6.0], [1.701271871E12, 11.0], [1.70127174E12, 9.0], [1.701271609E12, 2.0], [1.701271568E12, 1.0], [1.701271781E12, 11.0], [1.701271691E12, 7.0], [1.70127165E12, 5.0], [1.701271863E12, 14.0], [1.701271732E12, 8.0], [1.701271814E12, 5.0], [1.701271601E12, 3.0], [1.701271773E12, 11.0], [1.701271683E12, 6.0], [1.701271642E12, 4.0], [1.701271855E12, 5.0], [1.701271724E12, 8.0], [1.701271763E12, 8.0], [1.701271722E12, 8.0], [1.701271804E12, 11.0], [1.701271591E12, 2.0], [1.701271673E12, 5.0], [1.701271632E12, 4.0], [1.701271845E12, 7.0], [1.701271755E12, 10.0], [1.701271714E12, 8.0], [1.701271796E12, 12.0], [1.701271583E12, 1.0], [1.701271665E12, 6.0], [1.701271624E12, 3.0], [1.701271747E12, 10.0], [1.701271706E12, 8.0], [1.701271788E12, 11.0], [1.701271575E12, 1.0], [1.701271657E12, 5.0], [1.701271616E12, 3.0], [1.701271829E12, 3.0], [1.701271739E12, 9.0], [1.701271698E12, 7.0], [1.70127178E12, 11.0], [1.701271862E12, 15.0], [1.701271649E12, 5.0], [1.701271608E12, 2.0], [1.701271731E12, 8.0], [1.70127169E12, 7.0], [1.701271772E12, 11.0], [1.701271854E12, 14.0], [1.701271641E12, 5.0], [1.7012716E12, 3.0], [1.701271813E12, 4.0], [1.701271723E12, 9.0], [1.701271682E12, 6.0], [1.701271721E12, 8.0], [1.70127168E12, 6.0], [1.70127159E12, 2.0], [1.701271803E12, 11.0], [1.701271762E12, 11.0], [1.701271844E12, 2.0], [1.701271631E12, 4.0], [1.701271713E12, 8.0], [1.701271672E12, 6.0], [1.701271582E12, 1.0], [1.701271795E12, 11.0], [1.701271754E12, 9.0], [1.701271836E12, 6.0], [1.701271623E12, 2.0], [1.701271705E12, 8.0], [1.701271664E12, 6.0], [1.701271574E12, 1.0], [1.701271787E12, 10.0], [1.701271746E12, 9.0], [1.701271615E12, 3.0], [1.701271697E12, 8.0], [1.701271656E12, 4.0], [1.701271869E12, 1.0], [1.701271779E12, 11.0], [1.701271738E12, 9.0], [1.701271607E12, 3.0], [1.701271689E12, 7.0], [1.701271648E12, 5.0], [1.701271861E12, 14.0], [1.701271771E12, 10.0], [1.70127173E12, 8.0], [1.701271812E12, 9.0], [1.701271599E12, 2.0], [1.701271681E12, 7.0], [1.70127164E12, 2.0], [1.701271853E12, 8.0], [1.701271679E12, 5.0], [1.701271761E12, 10.0], [1.70127172E12, 9.0], [1.70127163E12, 4.0], [1.701271802E12, 12.0], [1.701271589E12, 1.0], [1.701271671E12, 6.0], [1.701271753E12, 8.0], [1.701271712E12, 7.0], [1.701271622E12, 4.0], [1.701271835E12, 14.0], [1.701271794E12, 11.0], [1.701271581E12, 1.0], [1.701271663E12, 5.0], [1.701271745E12, 10.0], [1.701271704E12, 7.0], [1.701271614E12, 2.0], [1.701271786E12, 10.0], [1.701271573E12, 2.0], [1.701271655E12, 5.0], [1.701271737E12, 9.0], [1.701271696E12, 6.0], [1.701271606E12, 3.0], [1.701271778E12, 9.0], [1.70127186E12, 14.0], [1.701271647E12, 5.0], [1.701271729E12, 9.0], [1.701271688E12, 6.0], [1.701271598E12, 2.0], [1.701271811E12, 6.0], [1.70127177E12, 11.0], [1.701271852E12, 10.0], [1.701271639E12, 4.0], [1.701271678E12, 5.0], [1.70127185E12, 11.0], [1.701271637E12, 3.0], [1.701271719E12, 8.0], [1.701271588E12, 2.0], [1.701271801E12, 11.0], [1.70127176E12, 7.0], [1.70127167E12, 6.0], [1.701271629E12, 4.0], [1.701271711E12, 7.0], [1.70127158E12, 2.0], [1.701271793E12, 12.0], [1.701271752E12, 8.0], [1.701271662E12, 3.0], [1.701271834E12, 4.0], [1.701271621E12, 4.0], [1.701271703E12, 7.0], [1.701271572E12, 1.0], [1.701271785E12, 9.0], [1.701271744E12, 9.0], [1.701271654E12, 5.0], [1.701271867E12, 1.0], [1.701271613E12, 3.0], [1.701271695E12, 6.0], [1.701271777E12, 11.0], [1.701271736E12, 8.0], [1.701271646E12, 5.0], [1.701271859E12, 15.0], [1.701271605E12, 2.0], [1.701271687E12, 4.0], [1.701271769E12, 10.0], [1.701271728E12, 9.0], [1.701271638E12, 3.0], [1.701271851E12, 14.0], [1.70127181E12, 6.0], [1.701271597E12, 2.0], [1.701271849E12, 6.0], [1.701271808E12, 4.0], [1.701271718E12, 8.0], [1.701271677E12, 6.0], [1.701271587E12, 1.0], [1.701271759E12, 8.0], [1.701271628E12, 3.0], [1.701271841E12, 7.0], [1.7012718E12, 10.0], [1.70127171E12, 8.0], [1.701271669E12, 5.0], [1.701271579E12, 1.0], [1.701271751E12, 8.0], [1.70127162E12, 3.0], [1.701271833E12, 4.0], [1.701271792E12, 11.0], [1.701271702E12, 8.0], [1.701271661E12, 4.0], [1.701271571E12, 2.0], [1.701271743E12, 8.0], [1.701271612E12, 3.0], [1.701271784E12, 10.0], [1.701271694E12, 5.0], [1.701271866E12, 1.0], [1.701271653E12, 4.0], [1.701271735E12, 8.0], [1.701271604E12, 2.0], [1.701271776E12, 9.0], [1.701271686E12, 7.0], [1.701271858E12, 15.0], [1.701271645E12, 5.0], [1.701271727E12, 8.0], [1.701271596E12, 3.0], [1.701271809E12, 6.0], [1.701271768E12, 11.0], [1.701271635E12, 4.0], [1.701271594E12, 3.0], [1.701271807E12, 10.0], [1.701271676E12, 6.0], [1.701271848E12, 5.0], [1.701271758E12, 7.0], [1.701271717E12, 8.0], [1.701271627E12, 3.0], [1.701271586E12, 2.0], [1.701271799E12, 12.0], [1.701271668E12, 5.0], [1.70127184E12, 4.0], [1.70127175E12, 8.0], [1.701271709E12, 5.0], [1.701271619E12, 4.0], [1.701271791E12, 9.0], [1.70127166E12, 5.0], [1.701271873E12, 6.0], [1.701271832E12, 3.0], [1.701271742E12, 9.0], [1.701271701E12, 7.0], [1.701271611E12, 4.0], [1.70127157E12, 1.0], [1.701271783E12, 11.0], [1.701271652E12, 4.0], [1.701271865E12, 9.0], [1.701271734E12, 8.0], [1.701271693E12, 7.0], [1.701271603E12, 3.0], [1.701271775E12, 11.0], [1.701271644E12, 3.0], [1.701271857E12, 15.0], [1.701271726E12, 7.0], [1.701271685E12, 6.0], [1.701271595E12, 2.0], [1.701271767E12, 11.0], [1.701271806E12, 10.0], [1.701271593E12, 1.0], [1.701271765E12, 9.0], [1.701271675E12, 5.0], [1.701271634E12, 3.0], [1.701271716E12, 8.0], [1.701271798E12, 11.0], [1.701271585E12, 2.0], [1.701271757E12, 10.0], [1.701271667E12, 5.0], [1.701271626E12, 3.0], [1.701271839E12, 4.0], [1.701271708E12, 7.0], [1.70127179E12, 12.0], [1.701271749E12, 9.0], [1.701271659E12, 4.0], [1.701271618E12, 4.0], [1.701271831E12, 2.0], [1.7012717E12, 6.0], [1.701271872E12, 8.0], [1.701271782E12, 10.0], [1.701271569E12, 1.0], [1.701271741E12, 9.0], [1.701271651E12, 5.0], [1.70127161E12, 3.0], [1.701271692E12, 7.0], [1.701271864E12, 12.0], [1.701271774E12, 8.0], [1.701271733E12, 7.0], [1.701271643E12, 4.0], [1.701271602E12, 3.0], [1.701271815E12, 1.0], [1.701271684E12, 6.0], [1.701271766E12, 8.0], [1.701271725E12, 8.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.701271873E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.701271569E12, "maxY": 28.0, "series": [{"data": [[1.701271764E12, 10.0], [1.701271846E12, 12.0], [1.701271633E12, 5.0], [1.701271592E12, 2.0], [1.701271805E12, 6.0], [1.701271715E12, 7.0], [1.701271674E12, 5.0], [1.701271756E12, 10.0], [1.701271625E12, 4.0], [1.701271584E12, 2.0], [1.701271797E12, 7.0], [1.701271707E12, 8.0], [1.701271666E12, 4.0], [1.701271748E12, 6.0], [1.70127183E12, 3.0], [1.701271617E12, 3.0], [1.701271789E12, 7.0], [1.701271699E12, 9.0], [1.701271658E12, 6.0], [1.70127174E12, 7.0], [1.701271609E12, 3.0], [1.701271781E12, 13.0], [1.701271691E12, 7.0], [1.70127165E12, 8.0], [1.701271732E12, 7.0], [1.701271814E12, 5.0], [1.701271601E12, 2.0], [1.701271773E12, 7.0], [1.701271683E12, 6.0], [1.701271642E12, 5.0], [1.701271724E12, 10.0], [1.701271763E12, 11.0], [1.701271722E12, 8.0], [1.701271804E12, 7.0], [1.701271591E12, 1.0], [1.701271673E12, 5.0], [1.701271632E12, 3.0], [1.701271845E12, 6.0], [1.701271755E12, 6.0], [1.701271714E12, 9.0], [1.701271796E12, 11.0], [1.701271583E12, 1.0], [1.701271665E12, 7.0], [1.701271624E12, 4.0], [1.701271747E12, 11.0], [1.701271706E12, 7.0], [1.701271788E12, 10.0], [1.701271575E12, 2.0], [1.701271657E12, 6.0], [1.701271616E12, 5.0], [1.701271829E12, 1.0], [1.701271739E12, 3.0], [1.701271698E12, 6.0], [1.70127178E12, 5.0], [1.701271649E12, 5.0], [1.701271608E12, 2.0], [1.701271731E12, 9.0], [1.70127169E12, 7.0], [1.701271772E12, 9.0], [1.701271854E12, 13.0], [1.701271641E12, 6.0], [1.7012716E12, 2.0], [1.701271813E12, 4.0], [1.701271723E12, 11.0], [1.701271682E12, 7.0], [1.701271721E12, 5.0], [1.70127168E12, 4.0], [1.70127159E12, 2.0], [1.701271803E12, 9.0], [1.701271762E12, 10.0], [1.701271844E12, 2.0], [1.701271631E12, 4.0], [1.701271713E12, 4.0], [1.701271672E12, 8.0], [1.701271582E12, 1.0], [1.701271795E12, 6.0], [1.701271754E12, 10.0], [1.701271836E12, 4.0], [1.701271623E12, 1.0], [1.701271705E12, 10.0], [1.701271664E12, 4.0], [1.701271574E12, 1.0], [1.701271787E12, 13.0], [1.701271746E12, 7.0], [1.701271615E12, 2.0], [1.701271697E12, 5.0], [1.701271656E12, 4.0], [1.701271779E12, 15.0], [1.701271738E12, 11.0], [1.701271607E12, 3.0], [1.701271689E12, 6.0], [1.701271648E12, 4.0], [1.701271771E12, 8.0], [1.70127173E12, 11.0], [1.701271812E12, 9.0], [1.701271599E12, 2.0], [1.701271681E12, 7.0], [1.70127164E12, 1.0], [1.701271853E12, 6.0], [1.701271679E12, 7.0], [1.701271761E12, 5.0], [1.70127172E12, 5.0], [1.70127163E12, 4.0], [1.701271802E12, 8.0], [1.701271589E12, 1.0], [1.701271671E12, 5.0], [1.701271753E12, 11.0], [1.701271712E12, 7.0], [1.701271622E12, 4.0], [1.701271835E12, 6.0], [1.701271794E12, 5.0], [1.701271581E12, 1.0], [1.701271663E12, 5.0], [1.701271745E12, 12.0], [1.701271704E12, 7.0], [1.701271614E12, 1.0], [1.701271786E12, 10.0], [1.701271573E12, 2.0], [1.701271655E12, 5.0], [1.701271737E12, 8.0], [1.701271696E12, 6.0], [1.701271606E12, 2.0], [1.701271778E12, 10.0], [1.701271647E12, 6.0], [1.701271729E12, 9.0], [1.701271688E12, 5.0], [1.701271598E12, 3.0], [1.701271811E12, 6.0], [1.70127177E12, 11.0], [1.701271639E12, 3.0], [1.701271678E12, 4.0], [1.70127185E12, 11.0], [1.701271637E12, 5.0], [1.701271719E12, 11.0], [1.701271588E12, 2.0], [1.701271801E12, 7.0], [1.70127176E12, 6.0], [1.70127167E12, 5.0], [1.701271629E12, 4.0], [1.701271711E12, 7.0], [1.70127158E12, 2.0], [1.701271793E12, 10.0], [1.701271752E12, 5.0], [1.701271662E12, 4.0], [1.701271834E12, 3.0], [1.701271621E12, 5.0], [1.701271703E12, 10.0], [1.701271572E12, 1.0], [1.701271785E12, 6.0], [1.701271744E12, 11.0], [1.701271654E12, 3.0], [1.701271613E12, 4.0], [1.701271695E12, 6.0], [1.701271777E12, 12.0], [1.701271736E12, 8.0], [1.701271646E12, 4.0], [1.701271605E12, 3.0], [1.701271687E12, 5.0], [1.701271769E12, 7.0], [1.701271728E12, 9.0], [1.701271638E12, 3.0], [1.701271851E12, 1.0], [1.70127181E12, 6.0], [1.701271597E12, 1.0], [1.701271849E12, 4.0], [1.701271808E12, 4.0], [1.701271718E12, 7.0], [1.70127189E12, 3.0], [1.701271677E12, 5.0], [1.701271587E12, 2.0], [1.701271759E12, 10.0], [1.701271628E12, 2.0], [1.701271841E12, 7.0], [1.7012718E12, 6.0], [1.70127171E12, 10.0], [1.701271669E12, 6.0], [1.701271751E12, 9.0], [1.70127162E12, 2.0], [1.701271833E12, 3.0], [1.701271792E12, 13.0], [1.701271702E12, 3.0], [1.701271661E12, 5.0], [1.701271571E12, 2.0], [1.701271743E12, 7.0], [1.701271612E12, 4.0], [1.701271784E12, 9.0], [1.701271694E12, 6.0], [1.701271653E12, 4.0], [1.701271735E12, 7.0], [1.701271604E12, 2.0], [1.701271776E12, 3.0], [1.701271686E12, 6.0], [1.701271645E12, 4.0], [1.701271727E12, 8.0], [1.701271596E12, 6.0], [1.701271809E12, 6.0], [1.701271768E12, 7.0], [1.701271635E12, 3.0], [1.701271594E12, 1.0], [1.701271676E12, 7.0], [1.701271848E12, 5.0], [1.701271758E12, 8.0], [1.701271717E12, 7.0], [1.701271627E12, 4.0], [1.701271586E12, 1.0], [1.701271799E12, 6.0], [1.701271668E12, 4.0], [1.70127184E12, 1.0], [1.70127175E12, 7.0], [1.701271709E12, 4.0], [1.701271619E12, 4.0], [1.701271791E12, 6.0], [1.70127166E12, 6.0], [1.701271873E12, 3.0], [1.701271832E12, 2.0], [1.701271742E12, 10.0], [1.701271701E12, 6.0], [1.701271611E12, 3.0], [1.701271783E12, 12.0], [1.701271652E12, 5.0], [1.701271734E12, 8.0], [1.701271693E12, 8.0], [1.701271603E12, 2.0], [1.701271775E12, 7.0], [1.701271644E12, 2.0], [1.701271726E12, 8.0], [1.701271685E12, 7.0], [1.701271595E12, 1.0], [1.701271767E12, 12.0], [1.701271806E12, 3.0], [1.701271593E12, 2.0], [1.701271765E12, 6.0], [1.701271675E12, 4.0], [1.701271634E12, 2.0], [1.701271716E12, 8.0], [1.701271888E12, 16.0], [1.701271798E12, 9.0], [1.701271585E12, 2.0], [1.701271757E12, 10.0], [1.701271667E12, 6.0], [1.701271626E12, 3.0], [1.701271839E12, 3.0], [1.701271708E12, 6.0], [1.70127179E12, 11.0], [1.701271749E12, 12.0], [1.701271659E12, 2.0], [1.701271618E12, 3.0], [1.701271831E12, 2.0], [1.7012717E12, 9.0], [1.701271782E12, 11.0], [1.701271569E12, 2.0], [1.701271741E12, 11.0], [1.701271651E12, 4.0], [1.70127161E12, 2.0], [1.701271692E12, 7.0], [1.701271774E12, 10.0], [1.701271733E12, 8.0], [1.701271643E12, 4.0], [1.701271602E12, 5.0], [1.701271815E12, 1.0], [1.701271684E12, 5.0], [1.701271766E12, 8.0], [1.701271725E12, 7.0]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.701271849E12, 2.0], [1.701271871E12, 1.0], [1.701271829E12, 2.0], [1.701271867E12, 1.0], [1.701271869E12, 1.0], [1.701271866E12, 1.0], [1.701271845E12, 1.0], [1.701271862E12, 4.0], [1.701271863E12, 2.0], [1.70127186E12, 4.0], [1.70127184E12, 3.0], [1.701271861E12, 2.0], [1.701271857E12, 3.0], [1.701271854E12, 1.0], [1.701271833E12, 1.0], [1.701271834E12, 1.0], [1.701271855E12, 5.0], [1.701271832E12, 1.0], [1.701271853E12, 1.0]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketTimeoutException", "isController": false}, {"data": [[1.701271806E12, 2.0], [1.701271839E12, 1.0], [1.701271871E12, 28.0], [1.701271872E12, 19.0], [1.701271794E12, 1.0], [1.701271805E12, 1.0], [1.701271873E12, 7.0]], "isOverall": false, "label": "500", "isController": false}, {"data": [[1.701271871E12, 1.0], [1.701271872E12, 6.0], [1.701271865E12, 1.0], [1.701271862E12, 12.0], [1.701271863E12, 17.0], [1.701271864E12, 5.0], [1.701271859E12, 15.0], [1.70127186E12, 15.0], [1.701271861E12, 14.0], [1.701271835E12, 10.0], [1.701271857E12, 14.0], [1.701271858E12, 15.0], [1.70127188E12, 24.0], [1.701271901E12, 9.0], [1.701271851E12, 23.0], [1.701271873E12, 8.0], [1.701271853E12, 1.0]], "isOverall": false, "label": "502", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.701271901E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.701271569E12, "maxY": 30.0, "series": [{"data": [[1.701271764E12, 10.0], [1.701271846E12, 12.0], [1.701271633E12, 5.0], [1.701271592E12, 2.0], [1.701271805E12, 6.0], [1.701271715E12, 7.0], [1.701271674E12, 5.0], [1.701271756E12, 10.0], [1.701271625E12, 4.0], [1.701271584E12, 2.0], [1.701271797E12, 7.0], [1.701271707E12, 8.0], [1.701271666E12, 4.0], [1.701271748E12, 6.0], [1.70127183E12, 3.0], [1.701271617E12, 3.0], [1.701271789E12, 7.0], [1.701271699E12, 9.0], [1.701271658E12, 6.0], [1.70127174E12, 7.0], [1.701271609E12, 3.0], [1.701271781E12, 13.0], [1.701271691E12, 7.0], [1.70127165E12, 8.0], [1.701271732E12, 7.0], [1.701271814E12, 5.0], [1.701271601E12, 2.0], [1.701271773E12, 7.0], [1.701271683E12, 6.0], [1.701271642E12, 5.0], [1.701271724E12, 10.0], [1.701271763E12, 11.0], [1.701271722E12, 8.0], [1.701271804E12, 7.0], [1.701271591E12, 1.0], [1.701271673E12, 5.0], [1.701271632E12, 3.0], [1.701271845E12, 6.0], [1.701271755E12, 6.0], [1.701271714E12, 9.0], [1.701271796E12, 11.0], [1.701271583E12, 1.0], [1.701271665E12, 7.0], [1.701271624E12, 4.0], [1.701271747E12, 11.0], [1.701271706E12, 7.0], [1.701271788E12, 10.0], [1.701271575E12, 2.0], [1.701271657E12, 6.0], [1.701271616E12, 5.0], [1.701271829E12, 1.0], [1.701271739E12, 3.0], [1.701271698E12, 6.0], [1.70127178E12, 5.0], [1.701271649E12, 5.0], [1.701271608E12, 2.0], [1.701271731E12, 9.0], [1.70127169E12, 7.0], [1.701271772E12, 9.0], [1.701271854E12, 13.0], [1.701271641E12, 6.0], [1.7012716E12, 2.0], [1.701271813E12, 4.0], [1.701271723E12, 11.0], [1.701271682E12, 7.0], [1.701271721E12, 5.0], [1.70127168E12, 4.0], [1.70127159E12, 2.0], [1.701271803E12, 9.0], [1.701271762E12, 10.0], [1.701271844E12, 2.0], [1.701271631E12, 4.0], [1.701271713E12, 4.0], [1.701271672E12, 8.0], [1.701271582E12, 1.0], [1.701271795E12, 6.0], [1.701271754E12, 10.0], [1.701271836E12, 4.0], [1.701271623E12, 1.0], [1.701271705E12, 10.0], [1.701271664E12, 4.0], [1.701271574E12, 1.0], [1.701271787E12, 13.0], [1.701271746E12, 7.0], [1.701271615E12, 2.0], [1.701271697E12, 5.0], [1.701271656E12, 4.0], [1.701271779E12, 15.0], [1.701271738E12, 11.0], [1.701271607E12, 3.0], [1.701271689E12, 6.0], [1.701271648E12, 4.0], [1.701271771E12, 8.0], [1.70127173E12, 11.0], [1.701271812E12, 9.0], [1.701271599E12, 2.0], [1.701271681E12, 7.0], [1.70127164E12, 1.0], [1.701271853E12, 6.0], [1.701271679E12, 7.0], [1.701271761E12, 5.0], [1.70127172E12, 5.0], [1.70127163E12, 4.0], [1.701271802E12, 8.0], [1.701271589E12, 1.0], [1.701271671E12, 5.0], [1.701271753E12, 11.0], [1.701271712E12, 7.0], [1.701271622E12, 4.0], [1.701271835E12, 6.0], [1.701271794E12, 5.0], [1.701271581E12, 1.0], [1.701271663E12, 5.0], [1.701271745E12, 12.0], [1.701271704E12, 7.0], [1.701271614E12, 1.0], [1.701271786E12, 10.0], [1.701271573E12, 2.0], [1.701271655E12, 5.0], [1.701271737E12, 8.0], [1.701271696E12, 6.0], [1.701271606E12, 2.0], [1.701271778E12, 10.0], [1.701271647E12, 6.0], [1.701271729E12, 9.0], [1.701271688E12, 5.0], [1.701271598E12, 3.0], [1.701271811E12, 6.0], [1.70127177E12, 11.0], [1.701271639E12, 3.0], [1.701271678E12, 4.0], [1.70127185E12, 11.0], [1.701271637E12, 5.0], [1.701271719E12, 11.0], [1.701271588E12, 2.0], [1.701271801E12, 7.0], [1.70127176E12, 6.0], [1.70127167E12, 5.0], [1.701271629E12, 4.0], [1.701271711E12, 7.0], [1.70127158E12, 2.0], [1.701271793E12, 10.0], [1.701271752E12, 5.0], [1.701271662E12, 4.0], [1.701271834E12, 3.0], [1.701271621E12, 5.0], [1.701271703E12, 10.0], [1.701271572E12, 1.0], [1.701271785E12, 6.0], [1.701271744E12, 11.0], [1.701271654E12, 3.0], [1.701271613E12, 4.0], [1.701271695E12, 6.0], [1.701271777E12, 12.0], [1.701271736E12, 8.0], [1.701271646E12, 4.0], [1.701271605E12, 3.0], [1.701271687E12, 5.0], [1.701271769E12, 7.0], [1.701271728E12, 9.0], [1.701271638E12, 3.0], [1.701271851E12, 1.0], [1.70127181E12, 6.0], [1.701271597E12, 1.0], [1.701271849E12, 4.0], [1.701271808E12, 4.0], [1.701271718E12, 7.0], [1.70127189E12, 3.0], [1.701271677E12, 5.0], [1.701271587E12, 2.0], [1.701271759E12, 10.0], [1.701271628E12, 2.0], [1.701271841E12, 7.0], [1.7012718E12, 6.0], [1.70127171E12, 10.0], [1.701271669E12, 6.0], [1.701271751E12, 9.0], [1.70127162E12, 2.0], [1.701271833E12, 3.0], [1.701271792E12, 13.0], [1.701271702E12, 3.0], [1.701271661E12, 5.0], [1.701271571E12, 2.0], [1.701271743E12, 7.0], [1.701271612E12, 4.0], [1.701271784E12, 9.0], [1.701271694E12, 6.0], [1.701271653E12, 4.0], [1.701271735E12, 7.0], [1.701271604E12, 2.0], [1.701271776E12, 3.0], [1.701271686E12, 6.0], [1.701271645E12, 4.0], [1.701271727E12, 8.0], [1.701271596E12, 6.0], [1.701271809E12, 6.0], [1.701271768E12, 7.0], [1.701271635E12, 3.0], [1.701271594E12, 1.0], [1.701271676E12, 7.0], [1.701271848E12, 5.0], [1.701271758E12, 8.0], [1.701271717E12, 7.0], [1.701271627E12, 4.0], [1.701271586E12, 1.0], [1.701271799E12, 6.0], [1.701271668E12, 4.0], [1.70127184E12, 1.0], [1.70127175E12, 7.0], [1.701271709E12, 4.0], [1.701271619E12, 4.0], [1.701271791E12, 6.0], [1.70127166E12, 6.0], [1.701271873E12, 3.0], [1.701271832E12, 2.0], [1.701271742E12, 10.0], [1.701271701E12, 6.0], [1.701271611E12, 3.0], [1.701271783E12, 12.0], [1.701271652E12, 5.0], [1.701271734E12, 8.0], [1.701271693E12, 8.0], [1.701271603E12, 2.0], [1.701271775E12, 7.0], [1.701271644E12, 2.0], [1.701271726E12, 8.0], [1.701271685E12, 7.0], [1.701271595E12, 1.0], [1.701271767E12, 12.0], [1.701271806E12, 3.0], [1.701271593E12, 2.0], [1.701271765E12, 6.0], [1.701271675E12, 4.0], [1.701271634E12, 2.0], [1.701271716E12, 8.0], [1.701271888E12, 16.0], [1.701271798E12, 9.0], [1.701271585E12, 2.0], [1.701271757E12, 10.0], [1.701271667E12, 6.0], [1.701271626E12, 3.0], [1.701271839E12, 3.0], [1.701271708E12, 6.0], [1.70127179E12, 11.0], [1.701271749E12, 12.0], [1.701271659E12, 2.0], [1.701271618E12, 3.0], [1.701271831E12, 2.0], [1.7012717E12, 9.0], [1.701271782E12, 11.0], [1.701271569E12, 2.0], [1.701271741E12, 11.0], [1.701271651E12, 4.0], [1.70127161E12, 2.0], [1.701271692E12, 7.0], [1.701271774E12, 10.0], [1.701271733E12, 8.0], [1.701271643E12, 4.0], [1.701271602E12, 5.0], [1.701271815E12, 1.0], [1.701271684E12, 5.0], [1.701271766E12, 8.0], [1.701271725E12, 7.0]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.701271806E12, 2.0], [1.701271849E12, 2.0], [1.701271805E12, 1.0], [1.701271845E12, 1.0], [1.701271839E12, 1.0], [1.70127184E12, 3.0], [1.701271835E12, 10.0], [1.701271794E12, 1.0], [1.70127188E12, 24.0], [1.701271833E12, 1.0], [1.701271834E12, 1.0], [1.701271873E12, 15.0], [1.701271832E12, 1.0], [1.701271871E12, 30.0], [1.701271829E12, 2.0], [1.701271872E12, 25.0], [1.701271867E12, 1.0], [1.701271869E12, 1.0], [1.701271865E12, 1.0], [1.701271866E12, 1.0], [1.701271862E12, 16.0], [1.701271863E12, 19.0], [1.701271864E12, 5.0], [1.701271859E12, 15.0], [1.70127186E12, 19.0], [1.701271861E12, 16.0], [1.701271857E12, 17.0], [1.701271858E12, 15.0], [1.701271901E12, 9.0], [1.701271854E12, 1.0], [1.701271855E12, 5.0], [1.701271851E12, 23.0], [1.701271853E12, 2.0]], "isOverall": false, "label": "HTTP Request-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.701271901E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.701271569E12, "maxY": 30.0, "series": [{"data": [[1.701271764E12, 10.0], [1.701271846E12, 12.0], [1.701271633E12, 5.0], [1.701271592E12, 2.0], [1.701271805E12, 6.0], [1.701271715E12, 7.0], [1.701271674E12, 5.0], [1.701271756E12, 10.0], [1.701271625E12, 4.0], [1.701271584E12, 2.0], [1.701271797E12, 7.0], [1.701271707E12, 8.0], [1.701271666E12, 4.0], [1.701271748E12, 6.0], [1.70127183E12, 3.0], [1.701271617E12, 3.0], [1.701271789E12, 7.0], [1.701271699E12, 9.0], [1.701271658E12, 6.0], [1.70127174E12, 7.0], [1.701271609E12, 3.0], [1.701271781E12, 13.0], [1.701271691E12, 7.0], [1.70127165E12, 8.0], [1.701271732E12, 7.0], [1.701271814E12, 5.0], [1.701271601E12, 2.0], [1.701271773E12, 7.0], [1.701271683E12, 6.0], [1.701271642E12, 5.0], [1.701271724E12, 10.0], [1.701271763E12, 11.0], [1.701271722E12, 8.0], [1.701271804E12, 7.0], [1.701271591E12, 1.0], [1.701271673E12, 5.0], [1.701271632E12, 3.0], [1.701271845E12, 6.0], [1.701271755E12, 6.0], [1.701271714E12, 9.0], [1.701271796E12, 11.0], [1.701271583E12, 1.0], [1.701271665E12, 7.0], [1.701271624E12, 4.0], [1.701271747E12, 11.0], [1.701271706E12, 7.0], [1.701271788E12, 10.0], [1.701271575E12, 2.0], [1.701271657E12, 6.0], [1.701271616E12, 5.0], [1.701271829E12, 1.0], [1.701271739E12, 3.0], [1.701271698E12, 6.0], [1.70127178E12, 5.0], [1.701271649E12, 5.0], [1.701271608E12, 2.0], [1.701271731E12, 9.0], [1.70127169E12, 7.0], [1.701271772E12, 9.0], [1.701271854E12, 13.0], [1.701271641E12, 6.0], [1.7012716E12, 2.0], [1.701271813E12, 4.0], [1.701271723E12, 11.0], [1.701271682E12, 7.0], [1.701271721E12, 5.0], [1.70127168E12, 4.0], [1.70127159E12, 2.0], [1.701271803E12, 9.0], [1.701271762E12, 10.0], [1.701271844E12, 2.0], [1.701271631E12, 4.0], [1.701271713E12, 4.0], [1.701271672E12, 8.0], [1.701271582E12, 1.0], [1.701271795E12, 6.0], [1.701271754E12, 10.0], [1.701271836E12, 4.0], [1.701271623E12, 1.0], [1.701271705E12, 10.0], [1.701271664E12, 4.0], [1.701271574E12, 1.0], [1.701271787E12, 13.0], [1.701271746E12, 7.0], [1.701271615E12, 2.0], [1.701271697E12, 5.0], [1.701271656E12, 4.0], [1.701271779E12, 15.0], [1.701271738E12, 11.0], [1.701271607E12, 3.0], [1.701271689E12, 6.0], [1.701271648E12, 4.0], [1.701271771E12, 8.0], [1.70127173E12, 11.0], [1.701271812E12, 9.0], [1.701271599E12, 2.0], [1.701271681E12, 7.0], [1.70127164E12, 1.0], [1.701271853E12, 6.0], [1.701271679E12, 7.0], [1.701271761E12, 5.0], [1.70127172E12, 5.0], [1.70127163E12, 4.0], [1.701271802E12, 8.0], [1.701271589E12, 1.0], [1.701271671E12, 5.0], [1.701271753E12, 11.0], [1.701271712E12, 7.0], [1.701271622E12, 4.0], [1.701271835E12, 6.0], [1.701271794E12, 5.0], [1.701271581E12, 1.0], [1.701271663E12, 5.0], [1.701271745E12, 12.0], [1.701271704E12, 7.0], [1.701271614E12, 1.0], [1.701271786E12, 10.0], [1.701271573E12, 2.0], [1.701271655E12, 5.0], [1.701271737E12, 8.0], [1.701271696E12, 6.0], [1.701271606E12, 2.0], [1.701271778E12, 10.0], [1.701271647E12, 6.0], [1.701271729E12, 9.0], [1.701271688E12, 5.0], [1.701271598E12, 3.0], [1.701271811E12, 6.0], [1.70127177E12, 11.0], [1.701271639E12, 3.0], [1.701271678E12, 4.0], [1.70127185E12, 11.0], [1.701271637E12, 5.0], [1.701271719E12, 11.0], [1.701271588E12, 2.0], [1.701271801E12, 7.0], [1.70127176E12, 6.0], [1.70127167E12, 5.0], [1.701271629E12, 4.0], [1.701271711E12, 7.0], [1.70127158E12, 2.0], [1.701271793E12, 10.0], [1.701271752E12, 5.0], [1.701271662E12, 4.0], [1.701271834E12, 3.0], [1.701271621E12, 5.0], [1.701271703E12, 10.0], [1.701271572E12, 1.0], [1.701271785E12, 6.0], [1.701271744E12, 11.0], [1.701271654E12, 3.0], [1.701271613E12, 4.0], [1.701271695E12, 6.0], [1.701271777E12, 12.0], [1.701271736E12, 8.0], [1.701271646E12, 4.0], [1.701271605E12, 3.0], [1.701271687E12, 5.0], [1.701271769E12, 7.0], [1.701271728E12, 9.0], [1.701271638E12, 3.0], [1.701271851E12, 1.0], [1.70127181E12, 6.0], [1.701271597E12, 1.0], [1.701271849E12, 4.0], [1.701271808E12, 4.0], [1.701271718E12, 7.0], [1.70127189E12, 3.0], [1.701271677E12, 5.0], [1.701271587E12, 2.0], [1.701271759E12, 10.0], [1.701271628E12, 2.0], [1.701271841E12, 7.0], [1.7012718E12, 6.0], [1.70127171E12, 10.0], [1.701271669E12, 6.0], [1.701271751E12, 9.0], [1.70127162E12, 2.0], [1.701271833E12, 3.0], [1.701271792E12, 13.0], [1.701271702E12, 3.0], [1.701271661E12, 5.0], [1.701271571E12, 2.0], [1.701271743E12, 7.0], [1.701271612E12, 4.0], [1.701271784E12, 9.0], [1.701271694E12, 6.0], [1.701271653E12, 4.0], [1.701271735E12, 7.0], [1.701271604E12, 2.0], [1.701271776E12, 3.0], [1.701271686E12, 6.0], [1.701271645E12, 4.0], [1.701271727E12, 8.0], [1.701271596E12, 6.0], [1.701271809E12, 6.0], [1.701271768E12, 7.0], [1.701271635E12, 3.0], [1.701271594E12, 1.0], [1.701271676E12, 7.0], [1.701271848E12, 5.0], [1.701271758E12, 8.0], [1.701271717E12, 7.0], [1.701271627E12, 4.0], [1.701271586E12, 1.0], [1.701271799E12, 6.0], [1.701271668E12, 4.0], [1.70127184E12, 1.0], [1.70127175E12, 7.0], [1.701271709E12, 4.0], [1.701271619E12, 4.0], [1.701271791E12, 6.0], [1.70127166E12, 6.0], [1.701271873E12, 3.0], [1.701271832E12, 2.0], [1.701271742E12, 10.0], [1.701271701E12, 6.0], [1.701271611E12, 3.0], [1.701271783E12, 12.0], [1.701271652E12, 5.0], [1.701271734E12, 8.0], [1.701271693E12, 8.0], [1.701271603E12, 2.0], [1.701271775E12, 7.0], [1.701271644E12, 2.0], [1.701271726E12, 8.0], [1.701271685E12, 7.0], [1.701271595E12, 1.0], [1.701271767E12, 12.0], [1.701271806E12, 3.0], [1.701271593E12, 2.0], [1.701271765E12, 6.0], [1.701271675E12, 4.0], [1.701271634E12, 2.0], [1.701271716E12, 8.0], [1.701271888E12, 16.0], [1.701271798E12, 9.0], [1.701271585E12, 2.0], [1.701271757E12, 10.0], [1.701271667E12, 6.0], [1.701271626E12, 3.0], [1.701271839E12, 3.0], [1.701271708E12, 6.0], [1.70127179E12, 11.0], [1.701271749E12, 12.0], [1.701271659E12, 2.0], [1.701271618E12, 3.0], [1.701271831E12, 2.0], [1.7012717E12, 9.0], [1.701271782E12, 11.0], [1.701271569E12, 2.0], [1.701271741E12, 11.0], [1.701271651E12, 4.0], [1.70127161E12, 2.0], [1.701271692E12, 7.0], [1.701271774E12, 10.0], [1.701271733E12, 8.0], [1.701271643E12, 4.0], [1.701271602E12, 5.0], [1.701271815E12, 1.0], [1.701271684E12, 5.0], [1.701271766E12, 8.0], [1.701271725E12, 7.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.701271806E12, 2.0], [1.701271849E12, 2.0], [1.701271805E12, 1.0], [1.701271845E12, 1.0], [1.701271839E12, 1.0], [1.70127184E12, 3.0], [1.701271835E12, 10.0], [1.701271794E12, 1.0], [1.70127188E12, 24.0], [1.701271833E12, 1.0], [1.701271834E12, 1.0], [1.701271873E12, 15.0], [1.701271832E12, 1.0], [1.701271871E12, 30.0], [1.701271829E12, 2.0], [1.701271872E12, 25.0], [1.701271867E12, 1.0], [1.701271869E12, 1.0], [1.701271865E12, 1.0], [1.701271866E12, 1.0], [1.701271862E12, 16.0], [1.701271863E12, 19.0], [1.701271864E12, 5.0], [1.701271859E12, 15.0], [1.70127186E12, 19.0], [1.701271861E12, 16.0], [1.701271857E12, 17.0], [1.701271858E12, 15.0], [1.701271901E12, 9.0], [1.701271854E12, 1.0], [1.701271855E12, 5.0], [1.701271851E12, 23.0], [1.701271853E12, 2.0]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.701271901E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

