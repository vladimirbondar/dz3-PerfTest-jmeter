/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 436.0, "minX": 0.0, "maxY": 60030.0, "series": [{"data": [[0.0, 436.0], [0.1, 436.0], [0.2, 445.0], [0.3, 461.0], [0.4, 468.0], [0.5, 469.0], [0.6, 472.0], [0.7, 476.0], [0.8, 477.0], [0.9, 477.0], [1.0, 488.0], [1.1, 490.0], [1.2, 500.0], [1.3, 506.0], [1.4, 508.0], [1.5, 509.0], [1.6, 510.0], [1.7, 512.0], [1.8, 512.0], [1.9, 514.0], [2.0, 518.0], [2.1, 524.0], [2.2, 536.0], [2.3, 549.0], [2.4, 555.0], [2.5, 557.0], [2.6, 558.0], [2.7, 558.0], [2.8, 568.0], [2.9, 573.0], [3.0, 576.0], [3.1, 576.0], [3.2, 582.0], [3.3, 584.0], [3.4, 584.0], [3.5, 584.0], [3.6, 588.0], [3.7, 588.0], [3.8, 591.0], [3.9, 595.0], [4.0, 599.0], [4.1, 600.0], [4.2, 601.0], [4.3, 608.0], [4.4, 610.0], [4.5, 612.0], [4.6, 614.0], [4.7, 616.0], [4.8, 620.0], [4.9, 622.0], [5.0, 623.0], [5.1, 628.0], [5.2, 635.0], [5.3, 638.0], [5.4, 639.0], [5.5, 639.0], [5.6, 655.0], [5.7, 658.0], [5.8, 664.0], [5.9, 676.0], [6.0, 678.0], [6.1, 687.0], [6.2, 687.0], [6.3, 688.0], [6.4, 688.0], [6.5, 690.0], [6.6, 693.0], [6.7, 695.0], [6.8, 704.0], [6.9, 704.0], [7.0, 708.0], [7.1, 710.0], [7.2, 711.0], [7.3, 712.0], [7.4, 714.0], [7.5, 720.0], [7.6, 722.0], [7.7, 722.0], [7.8, 722.0], [7.9, 726.0], [8.0, 726.0], [8.1, 729.0], [8.2, 730.0], [8.3, 732.0], [8.4, 734.0], [8.5, 737.0], [8.6, 739.0], [8.7, 743.0], [8.8, 770.0], [8.9, 771.0], [9.0, 775.0], [9.1, 784.0], [9.2, 788.0], [9.3, 790.0], [9.4, 790.0], [9.5, 793.0], [9.6, 795.0], [9.7, 797.0], [9.8, 798.0], [9.9, 800.0], [10.0, 804.0], [10.1, 804.0], [10.2, 804.0], [10.3, 806.0], [10.4, 806.0], [10.5, 813.0], [10.6, 814.0], [10.7, 814.0], [10.8, 818.0], [10.9, 820.0], [11.0, 824.0], [11.1, 826.0], [11.2, 830.0], [11.3, 832.0], [11.4, 835.0], [11.5, 836.0], [11.6, 837.0], [11.7, 842.0], [11.8, 842.0], [11.9, 842.0], [12.0, 843.0], [12.1, 843.0], [12.2, 846.0], [12.3, 848.0], [12.4, 852.0], [12.5, 853.0], [12.6, 855.0], [12.7, 862.0], [12.8, 862.0], [12.9, 866.0], [13.0, 868.0], [13.1, 870.0], [13.2, 874.0], [13.3, 876.0], [13.4, 876.0], [13.5, 877.0], [13.6, 879.0], [13.7, 882.0], [13.8, 888.0], [13.9, 889.0], [14.0, 893.0], [14.1, 893.0], [14.2, 897.0], [14.3, 901.0], [14.4, 901.0], [14.5, 902.0], [14.6, 904.0], [14.7, 906.0], [14.8, 906.0], [14.9, 909.0], [15.0, 915.0], [15.1, 917.0], [15.2, 922.0], [15.3, 922.0], [15.4, 922.0], [15.5, 923.0], [15.6, 923.0], [15.7, 924.0], [15.8, 924.0], [15.9, 924.0], [16.0, 925.0], [16.1, 926.0], [16.2, 929.0], [16.3, 930.0], [16.4, 930.0], [16.5, 931.0], [16.6, 931.0], [16.7, 931.0], [16.8, 932.0], [16.9, 937.0], [17.0, 953.0], [17.1, 958.0], [17.2, 963.0], [17.3, 967.0], [17.4, 968.0], [17.5, 970.0], [17.6, 970.0], [17.7, 971.0], [17.8, 975.0], [17.9, 977.0], [18.0, 978.0], [18.1, 981.0], [18.2, 981.0], [18.3, 982.0], [18.4, 982.0], [18.5, 983.0], [18.6, 984.0], [18.7, 987.0], [18.8, 993.0], [18.9, 997.0], [19.0, 999.0], [19.1, 1000.0], [19.2, 1001.0], [19.3, 1002.0], [19.4, 1006.0], [19.5, 1007.0], [19.6, 1010.0], [19.7, 1013.0], [19.8, 1015.0], [19.9, 1017.0], [20.0, 1018.0], [20.1, 1019.0], [20.2, 1023.0], [20.3, 1033.0], [20.4, 1043.0], [20.5, 1044.0], [20.6, 1050.0], [20.7, 1051.0], [20.8, 1061.0], [20.9, 1064.0], [21.0, 1065.0], [21.1, 1072.0], [21.2, 1072.0], [21.3, 1073.0], [21.4, 1074.0], [21.5, 1075.0], [21.6, 1076.0], [21.7, 1077.0], [21.8, 1081.0], [21.9, 1081.0], [22.0, 1084.0], [22.1, 1085.0], [22.2, 1086.0], [22.3, 1095.0], [22.4, 1096.0], [22.5, 1096.0], [22.6, 1097.0], [22.7, 1099.0], [22.8, 1099.0], [22.9, 1100.0], [23.0, 1100.0], [23.1, 1100.0], [23.2, 1101.0], [23.3, 1102.0], [23.4, 1102.0], [23.5, 1103.0], [23.6, 1103.0], [23.7, 1103.0], [23.8, 1103.0], [23.9, 1105.0], [24.0, 1113.0], [24.1, 1113.0], [24.2, 1114.0], [24.3, 1114.0], [24.4, 1116.0], [24.5, 1122.0], [24.6, 1123.0], [24.7, 1124.0], [24.8, 1125.0], [24.9, 1127.0], [25.0, 1128.0], [25.1, 1130.0], [25.2, 1133.0], [25.3, 1136.0], [25.4, 1136.0], [25.5, 1141.0], [25.6, 1141.0], [25.7, 1143.0], [25.8, 1145.0], [25.9, 1147.0], [26.0, 1152.0], [26.1, 1154.0], [26.2, 1154.0], [26.3, 1160.0], [26.4, 1164.0], [26.5, 1168.0], [26.6, 1172.0], [26.7, 1172.0], [26.8, 1173.0], [26.9, 1179.0], [27.0, 1181.0], [27.1, 1182.0], [27.2, 1182.0], [27.3, 1183.0], [27.4, 1185.0], [27.5, 1186.0], [27.6, 1187.0], [27.7, 1189.0], [27.8, 1193.0], [27.9, 1194.0], [28.0, 1194.0], [28.1, 1196.0], [28.2, 1196.0], [28.3, 1196.0], [28.4, 1201.0], [28.5, 1205.0], [28.6, 1206.0], [28.7, 1209.0], [28.8, 1214.0], [28.9, 1216.0], [29.0, 1222.0], [29.1, 1223.0], [29.2, 1224.0], [29.3, 1227.0], [29.4, 1227.0], [29.5, 1228.0], [29.6, 1228.0], [29.7, 1229.0], [29.8, 1229.0], [29.9, 1229.0], [30.0, 1230.0], [30.1, 1231.0], [30.2, 1231.0], [30.3, 1232.0], [30.4, 1237.0], [30.5, 1242.0], [30.6, 1259.0], [30.7, 1264.0], [30.8, 1266.0], [30.9, 1267.0], [31.0, 1268.0], [31.1, 1271.0], [31.2, 1272.0], [31.3, 1273.0], [31.4, 1277.0], [31.5, 1279.0], [31.6, 1281.0], [31.7, 1285.0], [31.8, 1286.0], [31.9, 1286.0], [32.0, 1287.0], [32.1, 1292.0], [32.2, 1294.0], [32.3, 1299.0], [32.4, 1299.0], [32.5, 1300.0], [32.6, 1300.0], [32.7, 1301.0], [32.8, 1303.0], [32.9, 1308.0], [33.0, 1310.0], [33.1, 1313.0], [33.2, 1315.0], [33.3, 1319.0], [33.4, 1319.0], [33.5, 1322.0], [33.6, 1322.0], [33.7, 1327.0], [33.8, 1328.0], [33.9, 1329.0], [34.0, 1329.0], [34.1, 1334.0], [34.2, 1336.0], [34.3, 1337.0], [34.4, 1347.0], [34.5, 1347.0], [34.6, 1347.0], [34.7, 1349.0], [34.8, 1350.0], [34.9, 1353.0], [35.0, 1354.0], [35.1, 1363.0], [35.2, 1363.0], [35.3, 1368.0], [35.4, 1377.0], [35.5, 1378.0], [35.6, 1381.0], [35.7, 1382.0], [35.8, 1384.0], [35.9, 1388.0], [36.0, 1388.0], [36.1, 1393.0], [36.2, 1395.0], [36.3, 1395.0], [36.4, 1397.0], [36.5, 1400.0], [36.6, 1401.0], [36.7, 1403.0], [36.8, 1405.0], [36.9, 1405.0], [37.0, 1410.0], [37.1, 1415.0], [37.2, 1416.0], [37.3, 1417.0], [37.4, 1423.0], [37.5, 1428.0], [37.6, 1431.0], [37.7, 1433.0], [37.8, 1435.0], [37.9, 1436.0], [38.0, 1439.0], [38.1, 1441.0], [38.2, 1444.0], [38.3, 1444.0], [38.4, 1458.0], [38.5, 1462.0], [38.6, 1468.0], [38.7, 1474.0], [38.8, 1482.0], [38.9, 1484.0], [39.0, 1488.0], [39.1, 1489.0], [39.2, 1493.0], [39.3, 1495.0], [39.4, 1495.0], [39.5, 1498.0], [39.6, 1502.0], [39.7, 1503.0], [39.8, 1503.0], [39.9, 1504.0], [40.0, 1506.0], [40.1, 1511.0], [40.2, 1511.0], [40.3, 1515.0], [40.4, 1516.0], [40.5, 1524.0], [40.6, 1526.0], [40.7, 1533.0], [40.8, 1534.0], [40.9, 1539.0], [41.0, 1545.0], [41.1, 1547.0], [41.2, 1548.0], [41.3, 1556.0], [41.4, 1564.0], [41.5, 1577.0], [41.6, 1579.0], [41.7, 1583.0], [41.8, 1591.0], [41.9, 1595.0], [42.0, 1597.0], [42.1, 1599.0], [42.2, 1601.0], [42.3, 1602.0], [42.4, 1606.0], [42.5, 1612.0], [42.6, 1615.0], [42.7, 1626.0], [42.8, 1637.0], [42.9, 1641.0], [43.0, 1644.0], [43.1, 1647.0], [43.2, 1648.0], [43.3, 1657.0], [43.4, 1658.0], [43.5, 1662.0], [43.6, 1664.0], [43.7, 1671.0], [43.8, 1674.0], [43.9, 1687.0], [44.0, 1688.0], [44.1, 1691.0], [44.2, 1728.0], [44.3, 1736.0], [44.4, 1745.0], [44.5, 1749.0], [44.6, 1757.0], [44.7, 1764.0], [44.8, 1774.0], [44.9, 1777.0], [45.0, 1789.0], [45.1, 1789.0], [45.2, 1796.0], [45.3, 1817.0], [45.4, 1819.0], [45.5, 1835.0], [45.6, 1838.0], [45.7, 1841.0], [45.8, 1869.0], [45.9, 1878.0], [46.0, 1880.0], [46.1, 1881.0], [46.2, 1887.0], [46.3, 1887.0], [46.4, 1888.0], [46.5, 1894.0], [46.6, 1900.0], [46.7, 1902.0], [46.8, 1905.0], [46.9, 1911.0], [47.0, 1943.0], [47.1, 1963.0], [47.2, 1963.0], [47.3, 1982.0], [47.4, 1999.0], [47.5, 2006.0], [47.6, 2009.0], [47.7, 2018.0], [47.8, 2079.0], [47.9, 2094.0], [48.0, 2095.0], [48.1, 2100.0], [48.2, 2122.0], [48.3, 2130.0], [48.4, 2140.0], [48.5, 2141.0], [48.6, 2158.0], [48.7, 2179.0], [48.8, 2188.0], [48.9, 2189.0], [49.0, 2193.0], [49.1, 2195.0], [49.2, 2206.0], [49.3, 2207.0], [49.4, 2211.0], [49.5, 2214.0], [49.6, 2224.0], [49.7, 2225.0], [49.8, 2231.0], [49.9, 2234.0], [50.0, 2234.0], [50.1, 2240.0], [50.2, 2243.0], [50.3, 2256.0], [50.4, 2256.0], [50.5, 2271.0], [50.6, 2285.0], [50.7, 2304.0], [50.8, 2306.0], [50.9, 2311.0], [51.0, 2327.0], [51.1, 2328.0], [51.2, 2329.0], [51.3, 2335.0], [51.4, 2337.0], [51.5, 2340.0], [51.6, 2347.0], [51.7, 2351.0], [51.8, 2353.0], [51.9, 2353.0], [52.0, 2356.0], [52.1, 2367.0], [52.2, 2381.0], [52.3, 2384.0], [52.4, 2387.0], [52.5, 2393.0], [52.6, 2393.0], [52.7, 2398.0], [52.8, 2406.0], [52.9, 2410.0], [53.0, 2433.0], [53.1, 2443.0], [53.2, 2447.0], [53.3, 2456.0], [53.4, 2462.0], [53.5, 2497.0], [53.6, 2503.0], [53.7, 2504.0], [53.8, 2585.0], [53.9, 2586.0], [54.0, 2587.0], [54.1, 2601.0], [54.2, 2620.0], [54.3, 2625.0], [54.4, 2627.0], [54.5, 2628.0], [54.6, 2672.0], [54.7, 2686.0], [54.8, 2693.0], [54.9, 2777.0], [55.0, 2803.0], [55.1, 2810.0], [55.2, 2851.0], [55.3, 2875.0], [55.4, 2890.0], [55.5, 2894.0], [55.6, 2898.0], [55.7, 2905.0], [55.8, 2906.0], [55.9, 2908.0], [56.0, 2914.0], [56.1, 2918.0], [56.2, 2920.0], [56.3, 2946.0], [56.4, 2967.0], [56.5, 2974.0], [56.6, 2980.0], [56.7, 2992.0], [56.8, 2993.0], [56.9, 3000.0], [57.0, 3011.0], [57.1, 3029.0], [57.2, 3030.0], [57.3, 3061.0], [57.4, 3077.0], [57.5, 3093.0], [57.6, 3093.0], [57.7, 3098.0], [57.8, 3168.0], [57.9, 3169.0], [58.0, 3170.0], [58.1, 3177.0], [58.2, 3179.0], [58.3, 3182.0], [58.4, 3206.0], [58.5, 3214.0], [58.6, 3229.0], [58.7, 3278.0], [58.8, 3280.0], [58.9, 3280.0], [59.0, 3282.0], [59.1, 3282.0], [59.2, 3293.0], [59.3, 3300.0], [59.4, 3333.0], [59.5, 3364.0], [59.6, 3461.0], [59.7, 3528.0], [59.8, 3530.0], [59.9, 3584.0], [60.0, 3662.0], [60.1, 3671.0], [60.2, 3699.0], [60.3, 3719.0], [60.4, 3770.0], [60.5, 3774.0], [60.6, 3798.0], [60.7, 3800.0], [60.8, 3811.0], [60.9, 3837.0], [61.0, 3885.0], [61.1, 3897.0], [61.2, 3898.0], [61.3, 3900.0], [61.4, 3978.0], [61.5, 4051.0], [61.6, 4057.0], [61.7, 4123.0], [61.8, 4134.0], [61.9, 4162.0], [62.0, 4172.0], [62.1, 4224.0], [62.2, 4240.0], [62.3, 4265.0], [62.4, 4355.0], [62.5, 4394.0], [62.6, 4401.0], [62.7, 4415.0], [62.8, 4553.0], [62.9, 4675.0], [63.0, 4719.0], [63.1, 5214.0], [63.2, 5259.0], [63.3, 5326.0], [63.4, 5587.0], [63.5, 5595.0], [63.6, 5701.0], [63.7, 5748.0], [63.8, 5897.0], [63.9, 8879.0], [64.0, 8891.0], [64.1, 8938.0], [64.2, 8940.0], [64.3, 9191.0], [64.4, 10660.0], [64.5, 10671.0], [64.6, 10762.0], [64.7, 10769.0], [64.8, 10770.0], [64.9, 11079.0], [65.0, 11148.0], [65.1, 11214.0], [65.2, 11267.0], [65.3, 11293.0], [65.4, 11305.0], [65.5, 11323.0], [65.6, 11379.0], [65.7, 11412.0], [65.8, 11440.0], [65.9, 11678.0], [66.0, 11765.0], [66.1, 11989.0], [66.2, 12091.0], [66.3, 12103.0], [66.4, 12599.0], [66.5, 12895.0], [66.6, 13349.0], [66.7, 13349.0], [66.8, 13407.0], [66.9, 13467.0], [67.0, 13811.0], [67.1, 15050.0], [67.2, 15050.0], [67.3, 15065.0], [67.4, 15069.0], [67.5, 15085.0], [67.6, 15092.0], [67.7, 15152.0], [67.8, 15192.0], [67.9, 15211.0], [68.0, 15799.0], [68.1, 16211.0], [68.2, 16300.0], [68.3, 16428.0], [68.4, 16584.0], [68.5, 16764.0], [68.6, 16784.0], [68.7, 16784.0], [68.8, 16810.0], [68.9, 16821.0], [69.0, 16901.0], [69.1, 16929.0], [69.2, 16963.0], [69.3, 17069.0], [69.4, 17069.0], [69.5, 17182.0], [69.6, 17789.0], [69.7, 17875.0], [69.8, 18506.0], [69.9, 18547.0], [70.0, 18705.0], [70.1, 18708.0], [70.2, 18712.0], [70.3, 18764.0], [70.4, 18765.0], [70.5, 18814.0], [70.6, 19640.0], [70.7, 20142.0], [70.8, 20156.0], [70.9, 20194.0], [71.0, 20494.0], [71.1, 20500.0], [71.2, 20531.0], [71.3, 20670.0], [71.4, 21080.0], [71.5, 21756.0], [71.6, 23042.0], [71.7, 23082.0], [71.8, 23134.0], [71.9, 25445.0], [72.0, 25727.0], [72.1, 25759.0], [72.2, 25860.0], [72.3, 25868.0], [72.4, 25951.0], [72.5, 26000.0], [72.6, 26099.0], [72.7, 27331.0], [72.8, 28772.0], [72.9, 28822.0], [73.0, 29094.0], [73.1, 29212.0], [73.2, 29658.0], [73.3, 31371.0], [73.4, 31998.0], [73.5, 32047.0], [73.6, 32068.0], [73.7, 32160.0], [73.8, 32275.0], [73.9, 32280.0], [74.0, 32298.0], [74.1, 32310.0], [74.2, 32338.0], [74.3, 32372.0], [74.4, 32372.0], [74.5, 32603.0], [74.6, 32628.0], [74.7, 32628.0], [74.8, 32668.0], [74.9, 32712.0], [75.0, 32714.0], [75.1, 32729.0], [75.2, 32730.0], [75.3, 32734.0], [75.4, 32741.0], [75.5, 32955.0], [75.6, 33021.0], [75.7, 33102.0], [75.8, 33164.0], [75.9, 33842.0], [76.0, 33855.0], [76.1, 33896.0], [76.2, 33941.0], [76.3, 34006.0], [76.4, 34095.0], [76.5, 34163.0], [76.6, 34166.0], [76.7, 34207.0], [76.8, 34454.0], [76.9, 34503.0], [77.0, 34518.0], [77.1, 34560.0], [77.2, 34575.0], [77.3, 34593.0], [77.4, 34599.0], [77.5, 34683.0], [77.6, 35578.0], [77.7, 35699.0], [77.8, 37219.0], [77.9, 37622.0], [78.0, 37926.0], [78.1, 37929.0], [78.2, 38003.0], [78.3, 38935.0], [78.4, 39331.0], [78.5, 39436.0], [78.6, 41687.0], [78.7, 41691.0], [78.8, 41729.0], [78.9, 41799.0], [79.0, 42153.0], [79.1, 42169.0], [79.2, 42170.0], [79.3, 42270.0], [79.4, 42895.0], [79.5, 43469.0], [79.6, 43480.0], [79.7, 43481.0], [79.8, 43515.0], [79.9, 43616.0], [80.0, 43915.0], [80.1, 43950.0], [80.2, 44059.0], [80.3, 44135.0], [80.4, 44200.0], [80.5, 44203.0], [80.6, 44212.0], [80.7, 44307.0], [80.8, 44390.0], [80.9, 44556.0], [81.0, 44598.0], [81.1, 44653.0], [81.2, 44658.0], [81.3, 44746.0], [81.4, 44947.0], [81.5, 45014.0], [81.6, 45064.0], [81.7, 45098.0], [81.8, 45310.0], [81.9, 45333.0], [82.0, 45730.0], [82.1, 45808.0], [82.2, 46356.0], [82.3, 46548.0], [82.4, 46929.0], [82.5, 47012.0], [82.6, 47066.0], [82.7, 47117.0], [82.8, 47268.0], [82.9, 47398.0], [83.0, 47492.0], [83.1, 47497.0], [83.2, 47580.0], [83.3, 47864.0], [83.4, 47864.0], [83.5, 47904.0], [83.6, 48001.0], [83.7, 48078.0], [83.8, 48146.0], [83.9, 48176.0], [84.0, 48252.0], [84.1, 48316.0], [84.2, 48496.0], [84.3, 48527.0], [84.4, 48546.0], [84.5, 48614.0], [84.6, 48642.0], [84.7, 49132.0], [84.8, 49168.0], [84.9, 49423.0], [85.0, 49432.0], [85.1, 50461.0], [85.2, 50595.0], [85.3, 51526.0], [85.4, 51608.0], [85.5, 51728.0], [85.6, 52673.0], [85.7, 53401.0], [85.8, 55453.0], [85.9, 55514.0], [86.0, 55679.0], [86.1, 56000.0], [86.2, 56761.0], [86.3, 56833.0], [86.4, 57006.0], [86.5, 57016.0], [86.6, 57170.0], [86.7, 57663.0], [86.8, 58201.0], [86.9, 58418.0], [87.0, 58569.0], [87.1, 58698.0], [87.2, 58873.0], [87.3, 59379.0], [87.4, 59791.0], [87.5, 60003.0], [87.6, 60023.0], [87.7, 60023.0], [87.8, 60023.0], [87.9, 60023.0], [88.0, 60024.0], [88.1, 60024.0], [88.2, 60024.0], [88.3, 60024.0], [88.4, 60024.0], [88.5, 60024.0], [88.6, 60024.0], [88.7, 60024.0], [88.8, 60024.0], [88.9, 60024.0], [89.0, 60024.0], [89.1, 60024.0], [89.2, 60024.0], [89.3, 60024.0], [89.4, 60024.0], [89.5, 60024.0], [89.6, 60024.0], [89.7, 60024.0], [89.8, 60024.0], [89.9, 60024.0], [90.0, 60024.0], [90.1, 60024.0], [90.2, 60024.0], [90.3, 60024.0], [90.4, 60024.0], [90.5, 60024.0], [90.6, 60024.0], [90.7, 60025.0], [90.8, 60025.0], [90.9, 60025.0], [91.0, 60025.0], [91.1, 60025.0], [91.2, 60025.0], [91.3, 60025.0], [91.4, 60025.0], [91.5, 60025.0], [91.6, 60025.0], [91.7, 60025.0], [91.8, 60025.0], [91.9, 60025.0], [92.0, 60025.0], [92.1, 60025.0], [92.2, 60025.0], [92.3, 60025.0], [92.4, 60025.0], [92.5, 60025.0], [92.6, 60025.0], [92.7, 60025.0], [92.8, 60025.0], [92.9, 60025.0], [93.0, 60025.0], [93.1, 60025.0], [93.2, 60025.0], [93.3, 60025.0], [93.4, 60025.0], [93.5, 60025.0], [93.6, 60025.0], [93.7, 60025.0], [93.8, 60025.0], [93.9, 60025.0], [94.0, 60025.0], [94.1, 60025.0], [94.2, 60025.0], [94.3, 60025.0], [94.4, 60025.0], [94.5, 60025.0], [94.6, 60025.0], [94.7, 60026.0], [94.8, 60026.0], [94.9, 60026.0], [95.0, 60026.0], [95.1, 60026.0], [95.2, 60026.0], [95.3, 60026.0], [95.4, 60026.0], [95.5, 60026.0], [95.6, 60026.0], [95.7, 60026.0], [95.8, 60026.0], [95.9, 60026.0], [96.0, 60026.0], [96.1, 60026.0], [96.2, 60026.0], [96.3, 60026.0], [96.4, 60026.0], [96.5, 60026.0], [96.6, 60026.0], [96.7, 60026.0], [96.8, 60026.0], [96.9, 60026.0], [97.0, 60026.0], [97.1, 60026.0], [97.2, 60026.0], [97.3, 60026.0], [97.4, 60026.0], [97.5, 60026.0], [97.6, 60026.0], [97.7, 60026.0], [97.8, 60026.0], [97.9, 60026.0], [98.0, 60026.0], [98.1, 60027.0], [98.2, 60027.0], [98.3, 60027.0], [98.4, 60027.0], [98.5, 60027.0], [98.6, 60027.0], [98.7, 60027.0], [98.8, 60027.0], [98.9, 60027.0], [99.0, 60027.0], [99.1, 60027.0], [99.2, 60028.0], [99.3, 60029.0], [99.4, 60029.0], [99.5, 60029.0], [99.6, 60029.0], [99.7, 60029.0], [99.8, 60030.0], [99.9, 60030.0], [100.0, 60030.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 400.0, "maxY": 125.0, "series": [{"data": [[34500.0, 6.0], [34100.0, 2.0], [32900.0, 1.0], [38900.0, 1.0], [39300.0, 1.0], [42100.0, 3.0], [41700.0, 2.0], [44500.0, 2.0], [44100.0, 1.0], [44900.0, 1.0], [45700.0, 1.0], [46500.0, 1.0], [46900.0, 1.0], [45300.0, 2.0], [48500.0, 2.0], [47300.0, 1.0], [48100.0, 2.0], [50500.0, 1.0], [51700.0, 1.0], [59300.0, 1.0], [58500.0, 1.0], [59700.0, 1.0], [400.0, 11.0], [500.0, 29.0], [600.0, 27.0], [700.0, 31.0], [800.0, 44.0], [900.0, 47.0], [1000.0, 38.0], [1100.0, 55.0], [1200.0, 41.0], [1300.0, 39.0], [1400.0, 31.0], [1500.0, 26.0], [1600.0, 20.0], [1700.0, 11.0], [1800.0, 13.0], [1900.0, 9.0], [2000.0, 6.0], [2100.0, 11.0], [2200.0, 14.0], [2300.0, 21.0], [2400.0, 8.0], [2500.0, 5.0], [2600.0, 8.0], [2800.0, 7.0], [2700.0, 1.0], [2900.0, 12.0], [3000.0, 9.0], [3100.0, 6.0], [3300.0, 3.0], [3200.0, 9.0], [3400.0, 1.0], [3500.0, 3.0], [3600.0, 3.0], [3700.0, 4.0], [3800.0, 6.0], [3900.0, 2.0], [4000.0, 2.0], [4100.0, 4.0], [4300.0, 2.0], [4200.0, 3.0], [4600.0, 1.0], [4500.0, 1.0], [4400.0, 2.0], [4700.0, 1.0], [5200.0, 2.0], [5300.0, 1.0], [5500.0, 2.0], [5700.0, 2.0], [5800.0, 1.0], [8800.0, 2.0], [8900.0, 2.0], [9100.0, 1.0], [10700.0, 3.0], [10600.0, 2.0], [11000.0, 1.0], [11200.0, 3.0], [11100.0, 1.0], [11700.0, 1.0], [11300.0, 3.0], [11400.0, 2.0], [11600.0, 1.0], [12100.0, 1.0], [11900.0, 1.0], [12000.0, 1.0], [12500.0, 1.0], [12800.0, 1.0], [13300.0, 1.0], [13400.0, 2.0], [13800.0, 1.0], [15100.0, 2.0], [15000.0, 6.0], [15200.0, 1.0], [15700.0, 1.0], [16300.0, 1.0], [16200.0, 1.0], [16800.0, 2.0], [17000.0, 2.0], [16400.0, 1.0], [17800.0, 1.0], [18800.0, 1.0], [19600.0, 1.0], [20400.0, 1.0], [20600.0, 1.0], [21000.0, 1.0], [23000.0, 2.0], [25400.0, 1.0], [26000.0, 2.0], [25800.0, 2.0], [29200.0, 1.0], [29000.0, 1.0], [28800.0, 1.0], [29600.0, 1.0], [32600.0, 4.0], [32200.0, 3.0], [32000.0, 2.0], [34400.0, 1.0], [34000.0, 2.0], [35600.0, 1.0], [37600.0, 1.0], [38000.0, 1.0], [37200.0, 1.0], [41600.0, 2.0], [42800.0, 1.0], [43600.0, 1.0], [44000.0, 1.0], [48400.0, 1.0], [48000.0, 2.0], [47200.0, 1.0], [50400.0, 1.0], [51600.0, 1.0], [56000.0, 1.0], [55600.0, 1.0], [56800.0, 1.0], [57600.0, 1.0], [58800.0, 1.0], [58400.0, 1.0], [60000.0, 125.0], [33900.0, 1.0], [33100.0, 2.0], [35500.0, 1.0], [37900.0, 2.0], [43900.0, 2.0], [44300.0, 2.0], [44700.0, 1.0], [43500.0, 1.0], [46300.0, 1.0], [47100.0, 1.0], [47500.0, 1.0], [47900.0, 1.0], [49100.0, 2.0], [48300.0, 1.0], [51500.0, 1.0], [55500.0, 1.0], [56700.0, 1.0], [57100.0, 1.0], [16500.0, 1.0], [16700.0, 3.0], [16900.0, 3.0], [17100.0, 1.0], [17700.0, 1.0], [18700.0, 5.0], [18500.0, 2.0], [20100.0, 3.0], [20500.0, 2.0], [21700.0, 1.0], [23100.0, 1.0], [25700.0, 2.0], [25900.0, 1.0], [27300.0, 1.0], [28700.0, 1.0], [31300.0, 1.0], [32700.0, 6.0], [32300.0, 4.0], [32100.0, 1.0], [31900.0, 1.0], [33800.0, 3.0], [33000.0, 1.0], [34600.0, 1.0], [34200.0, 1.0], [39400.0, 1.0], [42200.0, 1.0], [43400.0, 3.0], [45000.0, 3.0], [44200.0, 3.0], [44600.0, 2.0], [45800.0, 1.0], [47000.0, 2.0], [47400.0, 2.0], [48200.0, 1.0], [47800.0, 1.0], [48600.0, 2.0], [49400.0, 2.0], [52600.0, 1.0], [53400.0, 1.0], [57000.0, 2.0], [55400.0, 1.0], [58600.0, 1.0], [58200.0, 1.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 60000.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 12.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 416.0, "series": [{"data": [[0.0, 12.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 380.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 416.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 186.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 13.0, "minX": 1.701264073E12, "maxY": 100.0, "series": [{"data": [[1.701264248E12, 100.0], [1.701264121E12, 100.0], [1.701264207E12, 100.0], [1.701264289E12, 32.33333333333333], [1.70126408E12, 100.0], [1.701264203E12, 100.0], [1.701264076E12, 100.0], [1.701264084E12, 100.0], [1.70126417E12, 100.0], [1.701264256E12, 98.0], [1.701264125E12, 100.0], [1.701264195E12, 100.0], [1.701264154E12, 100.0], [1.701264236E12, 100.0], [1.70126415E12, 100.0], [1.70126424E12, 100.0], [1.701264109E12, 100.0], [1.701264158E12, 100.0], [1.701264117E12, 100.0], [1.701264113E12, 100.0], [1.701264199E12, 100.0], [1.701264244E12, 100.0], [1.701264142E12, 100.0], [1.701264228E12, 100.0], [1.701264101E12, 100.0], [1.701264097E12, 100.0], [1.701264183E12, 100.0], [1.701264232E12, 100.0], [1.701264105E12, 100.0], [1.701264191E12, 100.0], [1.701264146E12, 100.0], [1.701264089E12, 100.0], [1.701264175E12, 100.0], [1.701264257E12, 97.0], [1.701264171E12, 100.0], [1.70126413E12, 100.0], [1.701264179E12, 100.0], [1.701264138E12, 100.0], [1.701264224E12, 100.0], [1.701264134E12, 100.0], [1.701264265E12, 57.0], [1.701264093E12, 100.0], [1.701264206E12, 100.0], [1.701264247E12, 100.0], [1.701264079E12, 100.0], [1.701264075E12, 100.0], [1.701264161E12, 100.0], [1.70126412E12, 100.0], [1.701264083E12, 100.0], [1.701264169E12, 100.0], [1.701264128E12, 100.0], [1.701264251E12, 100.0], [1.701264124E12, 100.0], [1.701264255E12, 98.25], [1.70126421E12, 100.0], [1.701264153E12, 100.0], [1.701264112E12, 100.0], [1.701264235E12, 100.0], [1.701264108E12, 100.0], [1.701264239E12, 100.0], [1.701264116E12, 100.0], [1.701264202E12, 100.0], [1.701264198E12, 100.0], [1.701264157E12, 100.0], [1.701264243E12, 100.0], [1.7012641E12, 100.0], [1.701264182E12, 100.0], [1.701264272E12, 40.0], [1.701264141E12, 100.0], [1.701264231E12, 100.0], [1.701264145E12, 100.0], [1.701264104E12, 100.0], [1.701264174E12, 100.0], [1.701264133E12, 100.0], [1.701264129E12, 100.0], [1.70126426E12, 85.18181818181819], [1.701264088E12, 100.0], [1.701264137E12, 100.0], [1.701264223E12, 100.0], [1.701264096E12, 100.0], [1.701264092E12, 100.0], [1.701264178E12, 100.0], [1.701264078E12, 100.0], [1.701264246E12, 100.0], [1.70126425E12, 100.0], [1.701264119E12, 100.0], [1.701264205E12, 100.0], [1.701264291E12, 20.125], [1.701264295E12, 13.0], [1.701264127E12, 100.0], [1.701264123E12, 100.0], [1.701264209E12, 100.0], [1.701264082E12, 100.0], [1.701264168E12, 100.0], [1.701264254E12, 99.5], [1.701264111E12, 100.0], [1.701264197E12, 100.0], [1.701264107E12, 100.0], [1.701264193E12, 100.0], [1.701264238E12, 100.0], [1.701264115E12, 100.0], [1.701264242E12, 100.0], [1.70126416E12, 100.0], [1.701264156E12, 100.0], [1.701264099E12, 100.0], [1.701264185E12, 100.0], [1.701264144E12, 100.0], [1.701264267E12, 47.6], [1.70126414E12, 100.0], [1.701264226E12, 100.0], [1.70126423E12, 100.0], [1.701264234E12, 100.0], [1.701264103E12, 100.0], [1.701264132E12, 100.0], [1.701264218E12, 100.0], [1.701264087E12, 100.0], [1.701264173E12, 100.0], [1.701264259E12, 93.5], [1.701264263E12, 58.5], [1.701264095E12, 100.0], [1.701264181E12, 100.0], [1.701264091E12, 100.0], [1.701264177E12, 100.0], [1.701264136E12, 100.0], [1.70126429E12, 23.0], [1.701264122E12, 100.0], [1.701264208E12, 100.0], [1.701264118E12, 100.0], [1.701264249E12, 100.0], [1.701264077E12, 100.0], [1.701264126E12, 100.0], [1.701264253E12, 100.0], [1.701264212E12, 100.0], [1.701264085E12, 100.0], [1.701264081E12, 100.0], [1.701264167E12, 100.0], [1.70126411E12, 100.0], [1.701264237E12, 100.0], [1.701264196E12, 100.0], [1.701264073E12, 100.0], [1.701264159E12, 100.0], [1.701264241E12, 100.0], [1.701264155E12, 100.0], [1.701264245E12, 100.0], [1.701264114E12, 100.0], [1.701264139E12, 100.0], [1.701264229E12, 100.0], [1.701264225E12, 100.0], [1.701264098E12, 100.0], [1.70126427E12, 41.5], [1.701264147E12, 100.0], [1.701264106E12, 100.0], [1.701264102E12, 100.0], [1.701264233E12, 100.0], [1.701264131E12, 100.0], [1.701264258E12, 96.0], [1.70126409E12, 100.0], [1.701264176E12, 100.0], [1.701264086E12, 100.0], [1.701264172E12, 100.0], [1.701264094E12, 100.0], [1.70126418E12, 100.0], [1.701264262E12, 69.55], [1.701264266E12, 54.5], [1.701264135E12, 100.0], [1.701264221E12, 100.0]], "isOverall": false, "label": "jp@gc - Ultimate Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.701264295E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 8879.0, "minX": 13.0, "maxY": 60029.0, "series": [{"data": [[13.0, 45059.07692307692], [20.0, 47954.0], [21.0, 60029.0], [22.0, 60024.0], [23.0, 47864.0], [24.0, 56833.0], [25.0, 49432.0], [26.0, 48176.0], [27.0, 47066.0], [28.0, 34503.0], [29.0, 44203.0], [31.0, 45796.5], [32.0, 34593.0], [35.0, 35578.0], [34.0, 52460.0], [39.0, 35699.0], [38.0, 47335.666666666664], [41.0, 60025.0], [40.0, 60025.0], [43.0, 60024.0], [42.0, 60029.0], [45.0, 60026.0], [44.0, 60026.0], [46.0, 60026.0], [49.0, 60026.0], [48.0, 60026.0], [51.0, 17875.0], [50.0, 60025.0], [53.0, 58201.0], [52.0, 18506.0], [55.0, 58418.0], [54.0, 58569.0], [57.0, 59379.0], [56.0, 58873.0], [59.0, 60026.0], [58.0, 60026.0], [61.0, 60025.0], [60.0, 60026.0], [63.0, 60024.0], [62.0, 60026.0], [67.0, 60027.0], [66.0, 60026.0], [65.0, 60027.0], [64.0, 60026.0], [71.0, 60024.0], [70.0, 60025.0], [69.0, 60026.0], [68.0, 60027.0], [75.0, 60024.0], [74.0, 60025.0], [73.0, 60024.0], [72.0, 60024.0], [79.0, 33855.0], [78.0, 32842.0], [76.0, 60025.0], [83.0, 34575.0], [82.0, 32985.0], [80.0, 9191.0], [87.0, 31998.0], [86.0, 34166.0], [85.0, 21573.5], [91.0, 8938.0], [90.0, 34006.0], [89.0, 8879.0], [88.0, 34163.0], [95.0, 38003.0], [94.0, 34683.0], [93.0, 37929.0], [92.0, 37926.0], [99.0, 16069.0], [98.0, 15627.0], [97.0, 8891.0], [96.0, 35858.5], [100.0, 12940.958426966283]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[95.11770623742454, 16288.102615694168]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.701264073E12, "maxY": 3138941.0, "series": [{"data": [[1.701264248E12, 597406.0], [1.701264121E12, 1344146.0], [1.701264207E12, 1941583.0], [1.701264289E12, 2240252.0], [1.70126408E12, 746734.0], [1.701264203E12, 298684.0], [1.701264076E12, 149347.0], [1.701264084E12, 448047.0], [1.70126417E12, 448004.0], [1.701264256E12, 118.0], [1.701264125E12, 1792187.0], [1.701264195E12, 149354.0], [1.701264154E12, 149341.0], [1.701264236E12, 149367.0], [1.70126415E12, 472.0], [1.70126424E12, 306725.0], [1.701264109E12, 1344119.0], [1.701264158E12, 298684.0], [1.701264117E12, 1642799.0], [1.701264113E12, 896081.0], [1.701264199E12, 8037.0], [1.701264244E12, 298682.0], [1.701264142E12, 1344270.0], [1.701264228E12, 1045464.0], [1.701264101E12, 1792086.0], [1.701264097E12, 1642812.0], [1.701264183E12, 8037.0], [1.701264232E12, 1045475.0], [1.701264105E12, 1194769.0], [1.701264191E12, 118.0], [1.701264146E12, 746741.0], [1.701264089E12, 746739.0], [1.701264175E12, 749407.0], [1.701264257E12, 149347.0], [1.701264171E12, 306724.0], [1.70126413E12, 1642843.0], [1.701264179E12, 18753.0], [1.701264138E12, 1493459.0], [1.701264224E12, 448079.0], [1.701264134E12, 2090795.0], [1.701264265E12, 149391.0], [1.701264093E12, 597386.0], [1.701264206E12, 152052.0], [1.701264247E12, 149348.0], [1.701264079E12, 298713.0], [1.701264075E12, 149370.0], [1.701264161E12, 149344.0], [1.70126412E12, 1344133.0], [1.701264083E12, 597381.0], [1.701264169E12, 285.0], [1.701264128E12, 1344119.0], [1.701264251E12, 597371.0], [1.701264124E12, 1344150.0], [1.701264255E12, 472.0], [1.70126421E12, 152027.0], [1.701264153E12, 149354.0], [1.701264112E12, 746710.0], [1.701264235E12, 149348.0], [1.701264108E12, 1045473.0], [1.701264239E12, 317478.0], [1.701264116E12, 1194750.0], [1.701264202E12, 3138941.0], [1.701264198E12, 149347.0], [1.701264157E12, 149355.0], [1.701264243E12, 602745.0], [1.7012641E12, 1344076.0], [1.701264182E12, 770866.0], [1.701264272E12, 2679.0], [1.701264141E12, 746732.0], [1.701264231E12, 896087.0], [1.701264145E12, 1941556.0], [1.701264104E12, 1941519.0], [1.701264174E12, 298685.0], [1.701264133E12, 1493517.0], [1.701264129E12, 1493514.0], [1.70126426E12, 1642834.0], [1.701264088E12, 597363.0], [1.701264137E12, 1493451.0], [1.701264223E12, 597411.0], [1.701264096E12, 1642755.0], [1.701264092E12, 1642844.0], [1.701264178E12, 18753.0], [1.701264078E12, 298683.0], [1.701264246E12, 1344185.0], [1.70126425E12, 298944.0], [1.701264119E12, 1344146.0], [1.701264205E12, 149339.0], [1.701264291E12, 4674.0], [1.701264295E12, 3705.0], [1.701264127E12, 1493515.0], [1.701264123E12, 1493507.0], [1.701264209E12, 149343.0], [1.701264082E12, 448044.0], [1.701264168E12, 5358.0], [1.701264254E12, 236.0], [1.701264111E12, 1941496.0], [1.701264197E12, 149329.0], [1.701264107E12, 1792132.0], [1.701264193E12, 149333.0], [1.701264238E12, 10716.0], [1.701264115E12, 1493482.0], [1.701264242E12, 336184.0], [1.70126416E12, 448043.0], [1.701264156E12, 1642813.0], [1.701264099E12, 896070.0], [1.701264185E12, 2565.0], [1.701264144E12, 298701.0], [1.701264267E12, 320107.0], [1.70126414E12, 747201.0], [1.701264226E12, 1792180.0], [1.70126423E12, 149340.0], [1.701264234E12, 298725.0], [1.701264103E12, 1344082.0], [1.701264132E12, 1344144.0], [1.701264218E12, 149368.0], [1.701264087E12, 746706.0], [1.701264173E12, 608072.0], [1.701264259E12, 896103.0], [1.701264263E12, 5358.0], [1.701264095E12, 1045489.0], [1.701264181E12, 1213480.0], [1.701264091E12, 597389.0], [1.701264177E12, 149590.0], [1.701264136E12, 1792160.0], [1.70126429E12, 301385.0], [1.701264122E12, 1194801.0], [1.701264208E12, 298694.0], [1.701264118E12, 1194761.0], [1.701264249E12, 118.0], [1.701264077E12, 448038.0], [1.701264126E12, 746729.0], [1.701264253E12, 236.0], [1.701264212E12, 590.0], [1.701264085E12, 896065.0], [1.701264081E12, 448057.0], [1.701264167E12, 2679.0], [1.70126411E12, 896139.0], [1.701264237E12, 149353.0], [1.701264196E12, 1045391.0], [1.701264073E12, 149358.0], [1.701264159E12, 1045417.0], [1.701264241E12, 461413.0], [1.701264155E12, 896071.0], [1.701264245E12, 448063.0], [1.701264114E12, 1941466.0], [1.701264139E12, 1194756.0], [1.701264229E12, 896068.0], [1.701264225E12, 597424.0], [1.701264098E12, 1194816.0], [1.70126427E12, 5358.0], [1.701264147E12, 298692.0], [1.701264106E12, 1642772.0], [1.701264102E12, 746744.0], [1.701264233E12, 149341.0], [1.701264131E12, 1792182.0], [1.701264258E12, 149365.0], [1.70126409E12, 298687.0], [1.701264176E12, 600096.0], [1.701264086E12, 448015.0], [1.701264172E12, 298713.0], [1.701264094E12, 1045386.0], [1.70126418E12, 16074.0], [1.701264262E12, 45897.0], [1.701264266E12, 597389.0], [1.701264135E12, 1344136.0], [1.701264221E12, 746767.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.701264248E12, 556.0], [1.701264121E12, 1251.0], [1.701264207E12, 1807.0], [1.701264289E12, 2085.0], [1.70126408E12, 695.0], [1.701264203E12, 278.0], [1.701264076E12, 139.0], [1.701264084E12, 417.0], [1.70126417E12, 417.0], [1.701264256E12, 139.0], [1.701264125E12, 1668.0], [1.701264195E12, 139.0], [1.701264154E12, 139.0], [1.701264236E12, 139.0], [1.70126415E12, 556.0], [1.70126424E12, 278.0], [1.701264109E12, 1251.0], [1.701264158E12, 278.0], [1.701264117E12, 1529.0], [1.701264113E12, 834.0], [1.701264199E12, 0.0], [1.701264244E12, 278.0], [1.701264142E12, 1390.0], [1.701264228E12, 973.0], [1.701264101E12, 1668.0], [1.701264097E12, 1529.0], [1.701264183E12, 0.0], [1.701264232E12, 973.0], [1.701264105E12, 1112.0], [1.701264191E12, 139.0], [1.701264146E12, 695.0], [1.701264089E12, 695.0], [1.701264175E12, 695.0], [1.701264257E12, 139.0], [1.701264171E12, 278.0], [1.70126413E12, 1529.0], [1.701264179E12, 0.0], [1.701264138E12, 1390.0], [1.701264224E12, 417.0], [1.701264134E12, 1946.0], [1.701264265E12, 139.0], [1.701264093E12, 556.0], [1.701264206E12, 139.0], [1.701264247E12, 139.0], [1.701264079E12, 278.0], [1.701264075E12, 139.0], [1.701264161E12, 139.0], [1.70126412E12, 1251.0], [1.701264083E12, 556.0], [1.701264169E12, 139.0], [1.701264128E12, 1251.0], [1.701264251E12, 556.0], [1.701264124E12, 1251.0], [1.701264255E12, 556.0], [1.70126421E12, 139.0], [1.701264153E12, 139.0], [1.701264112E12, 695.0], [1.701264235E12, 139.0], [1.701264108E12, 973.0], [1.701264239E12, 278.0], [1.701264116E12, 1112.0], [1.701264202E12, 2919.0], [1.701264198E12, 139.0], [1.701264157E12, 139.0], [1.701264243E12, 556.0], [1.7012641E12, 1251.0], [1.701264182E12, 695.0], [1.701264272E12, 0.0], [1.701264141E12, 695.0], [1.701264231E12, 834.0], [1.701264145E12, 1807.0], [1.701264104E12, 1807.0], [1.701264174E12, 278.0], [1.701264133E12, 1390.0], [1.701264129E12, 1390.0], [1.70126426E12, 1529.0], [1.701264088E12, 556.0], [1.701264137E12, 1390.0], [1.701264223E12, 556.0], [1.701264096E12, 1529.0], [1.701264092E12, 1529.0], [1.701264178E12, 0.0], [1.701264078E12, 278.0], [1.701264246E12, 1251.0], [1.70126425E12, 556.0], [1.701264119E12, 1251.0], [1.701264205E12, 139.0], [1.701264291E12, 973.0], [1.701264295E12, 1807.0], [1.701264127E12, 1390.0], [1.701264123E12, 1390.0], [1.701264209E12, 139.0], [1.701264082E12, 417.0], [1.701264168E12, 0.0], [1.701264254E12, 278.0], [1.701264111E12, 1807.0], [1.701264197E12, 139.0], [1.701264107E12, 1668.0], [1.701264193E12, 139.0], [1.701264238E12, 0.0], [1.701264115E12, 1390.0], [1.701264242E12, 278.0], [1.70126416E12, 417.0], [1.701264156E12, 1529.0], [1.701264099E12, 834.0], [1.701264185E12, 1251.0], [1.701264144E12, 278.0], [1.701264267E12, 278.0], [1.70126414E12, 1251.0], [1.701264226E12, 1668.0], [1.70126423E12, 139.0], [1.701264234E12, 278.0], [1.701264103E12, 1251.0], [1.701264132E12, 1251.0], [1.701264218E12, 139.0], [1.701264087E12, 695.0], [1.701264173E12, 556.0], [1.701264259E12, 834.0], [1.701264263E12, 0.0], [1.701264095E12, 973.0], [1.701264181E12, 1112.0], [1.701264091E12, 556.0], [1.701264177E12, 417.0], [1.701264136E12, 1668.0], [1.70126429E12, 278.0], [1.701264122E12, 1112.0], [1.701264208E12, 278.0], [1.701264118E12, 1112.0], [1.701264249E12, 139.0], [1.701264077E12, 417.0], [1.701264126E12, 695.0], [1.701264253E12, 278.0], [1.701264212E12, 695.0], [1.701264085E12, 834.0], [1.701264081E12, 417.0], [1.701264167E12, 0.0], [1.70126411E12, 834.0], [1.701264237E12, 139.0], [1.701264196E12, 973.0], [1.701264073E12, 139.0], [1.701264159E12, 973.0], [1.701264241E12, 417.0], [1.701264155E12, 834.0], [1.701264245E12, 417.0], [1.701264114E12, 1807.0], [1.701264139E12, 1112.0], [1.701264229E12, 834.0], [1.701264225E12, 556.0], [1.701264098E12, 1112.0], [1.70126427E12, 0.0], [1.701264147E12, 278.0], [1.701264106E12, 1529.0], [1.701264102E12, 695.0], [1.701264233E12, 139.0], [1.701264131E12, 1668.0], [1.701264258E12, 139.0], [1.70126409E12, 278.0], [1.701264176E12, 556.0], [1.701264086E12, 417.0], [1.701264172E12, 278.0], [1.701264094E12, 973.0], [1.70126418E12, 0.0], [1.701264262E12, 417.0], [1.701264266E12, 556.0], [1.701264135E12, 1251.0], [1.701264221E12, 695.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.701264295E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 534.6, "minX": 1.701264073E12, "maxY": 60027.333333333336, "series": [{"data": [[1.701264248E12, 3112.75], [1.701264121E12, 1718.0], [1.701264207E12, 31660.307692307695], [1.701264289E12, 44518.00000000001], [1.70126408E12, 534.6], [1.701264203E12, 18717.0], [1.701264076E12, 937.0], [1.701264084E12, 788.0], [1.70126417E12, 1462.0], [1.701264256E12, 17182.0], [1.701264125E12, 1440.0], [1.701264195E12, 19640.0], [1.701264154E12, 12599.0], [1.701264236E12, 3800.0], [1.70126415E12, 32348.0], [1.70126424E12, 36513.2], [1.701264109E12, 1786.9999999999995], [1.701264158E12, 2937.5], [1.701264117E12, 1783.909090909091], [1.701264113E12, 2311.6666666666665], [1.701264199E12, 60025.0], [1.701264244E12, 2878.0], [1.701264142E12, 17117.8], [1.701264228E12, 4162.428571428572], [1.701264101E12, 1080.0833333333335], [1.701264097E12, 809.4545454545455], [1.701264183E12, 60027.333333333336], [1.701264232E12, 2425.5714285714284], [1.701264105E12, 1398.875], [1.701264191E12, 32160.0], [1.701264146E12, 1285.6], [1.701264089E12, 629.4], [1.701264175E12, 11876.0], [1.701264257E12, 8891.0], [1.701264171E12, 36629.4], [1.70126413E12, 1185.7272727272727], [1.701264179E12, 60024.857142857145], [1.701264138E12, 960.0], [1.701264224E12, 12083.333333333334], [1.701264134E12, 961.0714285714287], [1.701264265E12, 59379.0], [1.701264093E12, 999.5], [1.701264206E12, 35552.0], [1.701264247E12, 3206.0], [1.701264079E12, 979.5], [1.701264075E12, 1349.0], [1.701264161E12, 558.0], [1.70126412E12, 2096.3333333333335], [1.701264083E12, 843.75], [1.701264169E12, 1141.0], [1.701264128E12, 1113.7777777777778], [1.701264251E12, 24828.25], [1.701264124E12, 2224.4444444444443], [1.701264255E12, 15098.75], [1.70126421E12, 35851.5], [1.701264153E12, 12103.0], [1.701264112E12, 1966.0], [1.701264235E12, 576.0], [1.701264108E12, 1326.4285714285716], [1.701264239E12, 47310.666666666664], [1.701264116E12, 1295.375], [1.701264202E12, 38264.86363636363], [1.701264198E12, 21756.0], [1.701264157E12, 3837.0], [1.701264243E12, 21943.833333333332], [1.7012641E12, 1119.888888888889], [1.701264182E12, 47222.35714285715], [1.701264272E12, 60025.0], [1.701264141E12, 838.4], [1.701264231E12, 1784.8333333333333], [1.701264145E12, 29386.84615384615], [1.701264104E12, 1548.769230769231], [1.701264174E12, 1994.0], [1.701264133E12, 1204.8000000000002], [1.701264129E12, 1361.2], [1.70126426E12, 26917.727272727276], [1.701264088E12, 693.5], [1.701264137E12, 889.8000000000001], [1.701264223E12, 15141.5], [1.701264096E12, 1232.7272727272725], [1.701264092E12, 1165.0909090909092], [1.701264178E12, 60025.42857142857], [1.701264078E12, 637.0], [1.701264246E12, 3754.666666666667], [1.70126425E12, 22214.0], [1.701264119E12, 2242.777777777778], [1.701264205E12, 12091.0], [1.701264291E12, 49463.375], [1.701264295E12, 45059.07692307692], [1.701264127E12, 1575.7], [1.701264123E12, 2528.0], [1.701264209E12, 11148.0], [1.701264082E12, 849.3333333333334], [1.701264168E12, 60025.0], [1.701264254E12, 16059.5], [1.701264111E12, 2258.1538461538466], [1.701264197E12, 21080.0], [1.701264107E12, 1466.3333333333333], [1.701264193E12, 17789.0], [1.701264238E12, 60026.25], [1.701264115E12, 1966.7], [1.701264242E12, 52836.5625], [1.70126416E12, 2164.0], [1.701264156E12, 30851.545454545445], [1.701264099E12, 903.0], [1.701264185E12, 46137.77777777778], [1.701264144E12, 1804.5], [1.701264267E12, 51658.59999999999], [1.70126414E12, 15021.222222222223], [1.701264226E12, 36231.0], [1.70126423E12, 2356.0], [1.701264234E12, 5667.5], [1.701264103E12, 1562.2222222222222], [1.701264132E12, 1048.6666666666667], [1.701264218E12, 13407.0], [1.701264087E12, 717.4], [1.701264173E12, 30989.25], [1.701264259E12, 32516.833333333332], [1.701264263E12, 60026.0], [1.701264095E12, 1262.0], [1.701264181E12, 45961.46666666667], [1.701264091E12, 1262.75], [1.701264177E12, 22465.0], [1.701264136E12, 987.5], [1.70126429E12, 54907.0], [1.701264122E12, 2601.1249999999995], [1.701264208E12, 11426.0], [1.701264118E12, 1511.625], [1.701264249E12, 16211.0], [1.701264077E12, 601.6666666666666], [1.701264126E12, 1383.4], [1.701264253E12, 15088.5], [1.701264212E12, 33824.4], [1.701264085E12, 731.8333333333334], [1.701264081E12, 559.0], [1.701264167E12, 60025.0], [1.70126411E12, 1469.8333333333335], [1.701264237E12, 4675.0], [1.701264196E12, 20383.857142857145], [1.701264073E12, 638.0], [1.701264159E12, 2944.4285714285716], [1.701264241E12, 38578.875], [1.701264155E12, 27657.833333333332], [1.701264245E12, 3760.6666666666665], [1.701264114E12, 1856.8461538461538], [1.701264139E12, 1085.5], [1.701264229E12, 3155.333333333333], [1.701264225E12, 44640.25], [1.701264098E12, 673.25], [1.70126427E12, 60027.0], [1.701264147E12, 566.5], [1.701264106E12, 1535.6363636363637], [1.701264102E12, 1121.2], [1.701264233E12, 726.0], [1.701264131E12, 1107.5833333333333], [1.701264258E12, 34095.0], [1.70126409E12, 882.5], [1.701264176E12, 13910.4], [1.701264086E12, 784.3333333333334], [1.701264172E12, 1698.5], [1.701264094E12, 1451.7142857142858], [1.70126418E12, 60025.166666666664], [1.701264262E12, 55998.5], [1.701264266E12, 58515.25], [1.701264135E12, 974.8888888888888], [1.701264221E12, 18708.4]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.701264295E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.701264073E12, "maxY": 59312.0, "series": [{"data": [[1.701264248E12, 3046.75], [1.701264121E12, 1650.111111111111], [1.701264207E12, 31589.923076923078], [1.701264289E12, 44435.933333333334], [1.70126408E12, 471.6], [1.701264203E12, 18611.5], [1.701264076E12, 872.0], [1.701264084E12, 724.3333333333334], [1.70126417E12, 1255.3333333333333], [1.701264256E12, 17182.0], [1.701264125E12, 1374.8333333333335], [1.701264195E12, 19577.0], [1.701264154E12, 12535.0], [1.701264236E12, 3738.0], [1.70126415E12, 32348.0], [1.70126424E12, 472.0], [1.701264109E12, 1690.888888888889], [1.701264158E12, 2874.5], [1.701264117E12, 1718.3636363636363], [1.701264113E12, 2247.166666666667], [1.701264199E12, 0.0], [1.701264244E12, 2802.5], [1.701264142E12, 17051.3], [1.701264228E12, 4064.4285714285716], [1.701264101E12, 1017.5], [1.701264097E12, 744.9090909090909], [1.701264183E12, 0.0], [1.701264232E12, 2350.8571428571427], [1.701264105E12, 1329.375], [1.701264191E12, 32160.0], [1.701264146E12, 1221.6], [1.701264089E12, 565.0], [1.701264175E12, 1814.3333333333333], [1.701264257E12, 8827.0], [1.701264171E12, 586.6], [1.70126413E12, 1118.090909090909], [1.701264179E12, 0.0], [1.701264138E12, 895.1999999999999], [1.701264224E12, 12008.666666666666], [1.701264134E12, 896.5], [1.701264265E12, 59312.0], [1.701264093E12, 935.5], [1.701264206E12, 5503.5], [1.701264247E12, 3144.0], [1.701264079E12, 913.5], [1.701264075E12, 1282.0], [1.701264161E12, 476.0], [1.70126412E12, 2017.6666666666667], [1.701264083E12, 779.0], [1.701264169E12, 1141.0], [1.701264128E12, 1050.4444444444443], [1.701264251E12, 24645.0], [1.701264124E12, 2157.1111111111113], [1.701264255E12, 15098.75], [1.70126421E12, 5806.5], [1.701264153E12, 12038.0], [1.701264112E12, 1901.8], [1.701264235E12, 512.0], [1.701264108E12, 1263.0000000000002], [1.701264239E12, 610.7777777777778], [1.701264116E12, 1229.125], [1.701264202E12, 35408.590909090904], [1.701264198E12, 21656.0], [1.701264157E12, 3773.0], [1.701264243E12, 1892.8333333333333], [1.7012641E12, 1054.5555555555557], [1.701264182E12, 8609.5], [1.701264272E12, 0.0], [1.701264141E12, 775.4], [1.701264231E12, 1580.5], [1.701264145E12, 29316.0], [1.701264104E12, 1483.6923076923076], [1.701264174E12, 1928.0], [1.701264133E12, 1140.1], [1.701264129E12, 1295.9], [1.70126426E12, 26789.181818181816], [1.701264088E12, 630.0], [1.701264137E12, 825.1], [1.701264223E12, 15067.0], [1.701264096E12, 1168.090909090909], [1.701264092E12, 1092.0000000000002], [1.701264178E12, 0.0], [1.701264078E12, 574.0], [1.701264246E12, 3689.4444444444443], [1.70126425E12, 22081.5], [1.701264119E12, 2177.777777777778], [1.701264205E12, 12028.0], [1.701264291E12, 41959.75], [1.701264295E12, 45059.07692307692], [1.701264127E12, 1510.9], [1.701264123E12, 2460.5], [1.701264209E12, 11086.0], [1.701264082E12, 786.6666666666666], [1.701264168E12, 0.0], [1.701264254E12, 16059.5], [1.701264111E12, 2186.923076923077], [1.701264197E12, 21017.0], [1.701264107E12, 1399.9166666666665], [1.701264193E12, 17727.0], [1.701264238E12, 0.0], [1.701264115E12, 1899.0], [1.701264242E12, 306.5], [1.70126416E12, 2100.0], [1.701264156E12, 30763.545454545456], [1.701264099E12, 830.3333333333334], [1.701264185E12, 46137.77777777778], [1.701264144E12, 1740.5], [1.701264267E12, 3625.7000000000003], [1.70126414E12, 14986.444444444445], [1.701264226E12, 36064.666666666664], [1.70126423E12, 2288.0], [1.701264234E12, 5535.0], [1.701264103E12, 1497.2222222222222], [1.701264132E12, 981.6666666666666], [1.701264218E12, 13343.0], [1.701264087E12, 654.0], [1.701264173E12, 940.5], [1.701264259E12, 32452.500000000004], [1.701264263E12, 0.0], [1.701264095E12, 1189.8571428571427], [1.701264181E12, 17873.933333333334], [1.701264091E12, 1195.5], [1.701264177E12, 22365.666666666664], [1.701264136E12, 923.1666666666667], [1.70126429E12, 34842.33333333333], [1.701264122E12, 2533.9999999999995], [1.701264208E12, 11362.5], [1.701264118E12, 1445.625], [1.701264249E12, 16211.0], [1.701264077E12, 533.6666666666666], [1.701264126E12, 1319.0], [1.701264253E12, 15088.5], [1.701264212E12, 33824.4], [1.701264085E12, 667.6666666666666], [1.701264081E12, 496.0], [1.701264167E12, 0.0], [1.70126411E12, 1392.6666666666667], [1.701264237E12, 4352.0], [1.701264196E12, 20315.85714285714], [1.701264073E12, 582.0], [1.701264159E12, 2870.8571428571427], [1.701264241E12, 1039.5], [1.701264155E12, 27589.166666666664], [1.701264245E12, 3688.3333333333335], [1.701264114E12, 1792.230769230769], [1.701264139E12, 1021.125], [1.701264229E12, 3072.0], [1.701264225E12, 44451.0], [1.701264098E12, 609.75], [1.70126427E12, 0.0], [1.701264147E12, 502.5], [1.701264106E12, 1472.1818181818182], [1.701264102E12, 1056.8], [1.701264233E12, 662.0], [1.701264131E12, 1043.9166666666665], [1.701264258E12, 34031.0], [1.70126409E12, 818.5], [1.701264176E12, 1850.4], [1.701264086E12, 719.6666666666666], [1.701264172E12, 1620.0], [1.701264094E12, 1380.1428571428573], [1.70126418E12, 0.0], [1.701264262E12, 4976.949999999997], [1.701264266E12, 58451.75], [1.701264135E12, 911.4444444444445], [1.701264221E12, 18644.4]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.701264295E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 22.0, "minX": 1.701264073E12, "maxY": 76.2, "series": [{"data": [[1.701264248E12, 23.25], [1.701264121E12, 23.444444444444443], [1.701264207E12, 23.76923076923077], [1.701264289E12, 23.2], [1.70126408E12, 23.8], [1.701264203E12, 22.5], [1.701264076E12, 23.0], [1.701264084E12, 24.333333333333332], [1.70126417E12, 23.666666666666668], [1.701264256E12, 29.0], [1.701264125E12, 23.583333333333336], [1.701264195E12, 24.0], [1.701264154E12, 24.0], [1.701264236E12, 24.0], [1.70126415E12, 23.5], [1.70126424E12, 27.4], [1.701264109E12, 23.555555555555557], [1.701264158E12, 25.0], [1.701264117E12, 23.72727272727273], [1.701264113E12, 24.833333333333332], [1.701264199E12, 23.666666666666668], [1.701264244E12, 23.5], [1.701264142E12, 24.299999999999997], [1.701264228E12, 24.000000000000004], [1.701264101E12, 23.416666666666668], [1.701264097E12, 23.63636363636364], [1.701264183E12, 26.0], [1.701264232E12, 63.42857142857143], [1.701264105E12, 24.125], [1.701264191E12, 24.0], [1.701264146E12, 24.6], [1.701264089E12, 23.8], [1.701264175E12, 24.5], [1.701264257E12, 23.0], [1.701264171E12, 76.2], [1.70126413E12, 23.090909090909093], [1.701264179E12, 23.428571428571427], [1.701264138E12, 24.0], [1.701264224E12, 23.0], [1.701264134E12, 23.57142857142857], [1.701264265E12, 22.0], [1.701264093E12, 23.75], [1.701264206E12, 23.5], [1.701264247E12, 22.0], [1.701264079E12, 22.5], [1.701264075E12, 30.0], [1.701264161E12, 23.0], [1.70126412E12, 23.77777777777778], [1.701264083E12, 26.75], [1.701264169E12, 28.0], [1.701264128E12, 23.444444444444443], [1.701264251E12, 24.5], [1.701264124E12, 23.0], [1.701264255E12, 22.5], [1.70126421E12, 23.5], [1.701264153E12, 24.0], [1.701264112E12, 23.2], [1.701264235E12, 22.0], [1.701264108E12, 23.714285714285715], [1.701264239E12, 23.333333333333332], [1.701264116E12, 24.375], [1.701264202E12, 24.818181818181817], [1.701264198E12, 23.0], [1.701264157E12, 23.0], [1.701264243E12, 23.5], [1.7012641E12, 23.555555555555557], [1.701264182E12, 24.357142857142854], [1.701264272E12, 24.0], [1.701264141E12, 23.6], [1.701264231E12, 24.5], [1.701264145E12, 24.76923076923077], [1.701264104E12, 23.999999999999996], [1.701264174E12, 23.5], [1.701264133E12, 24.0], [1.701264129E12, 23.4], [1.70126426E12, 24.636363636363633], [1.701264088E12, 23.5], [1.701264137E12, 23.1], [1.701264223E12, 23.0], [1.701264096E12, 23.727272727272723], [1.701264092E12, 25.454545454545453], [1.701264178E12, 24.571428571428573], [1.701264078E12, 23.5], [1.701264246E12, 23.0], [1.70126425E12, 23.0], [1.701264119E12, 23.333333333333332], [1.701264205E12, 23.0], [1.701264291E12, 24.0], [1.701264295E12, 23.307692307692307], [1.701264127E12, 23.5], [1.701264123E12, 23.8], [1.701264209E12, 25.0], [1.701264082E12, 23.0], [1.701264168E12, 24.5], [1.701264254E12, 23.0], [1.701264111E12, 24.53846153846154], [1.701264197E12, 24.0], [1.701264107E12, 23.833333333333332], [1.701264193E12, 23.0], [1.701264238E12, 25.5], [1.701264115E12, 23.699999999999996], [1.701264242E12, 23.562499999999996], [1.70126416E12, 24.0], [1.701264156E12, 23.363636363636363], [1.701264099E12, 23.333333333333332], [1.701264185E12, 23.333333333333332], [1.701264144E12, 23.0], [1.701264267E12, 23.9], [1.70126414E12, 23.444444444444443], [1.701264226E12, 23.500000000000004], [1.70126423E12, 22.0], [1.701264234E12, 23.0], [1.701264103E12, 24.22222222222222], [1.701264132E12, 24.444444444444443], [1.701264218E12, 22.0], [1.701264087E12, 23.4], [1.701264173E12, 25.750000000000004], [1.701264259E12, 23.333333333333332], [1.701264263E12, 24.5], [1.701264095E12, 23.57142857142857], [1.701264181E12, 24.2], [1.701264091E12, 24.5], [1.701264177E12, 23.0], [1.701264136E12, 23.0], [1.70126429E12, 22.333333333333332], [1.701264122E12, 23.625], [1.701264208E12, 23.0], [1.701264118E12, 23.749999999999996], [1.701264249E12, 22.0], [1.701264077E12, 31.0], [1.701264126E12, 23.8], [1.701264253E12, 24.5], [1.701264212E12, 24.2], [1.701264085E12, 23.5], [1.701264081E12, 24.666666666666668], [1.701264167E12, 23.0], [1.70126411E12, 24.0], [1.701264237E12, 24.0], [1.701264196E12, 23.714285714285715], [1.701264073E12, 42.0], [1.701264159E12, 23.57142857142857], [1.701264241E12, 23.25], [1.701264155E12, 23.833333333333332], [1.701264245E12, 22.333333333333332], [1.701264114E12, 24.538461538461537], [1.701264139E12, 24.25], [1.701264229E12, 24.5], [1.701264225E12, 22.75], [1.701264098E12, 23.0], [1.70126427E12, 25.0], [1.701264147E12, 23.5], [1.701264106E12, 23.636363636363637], [1.701264102E12, 23.4], [1.701264233E12, 22.0], [1.701264131E12, 23.416666666666668], [1.701264258E12, 24.0], [1.70126409E12, 25.0], [1.701264176E12, 23.8], [1.701264086E12, 24.0], [1.701264172E12, 23.0], [1.701264094E12, 24.285714285714285], [1.70126418E12, 23.833333333333336], [1.701264262E12, 24.050000000000004], [1.701264266E12, 24.25], [1.701264135E12, 22.88888888888889], [1.701264221E12, 24.6]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.701264295E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 436.0, "minX": 1.701264073E12, "maxY": 60003.0, "series": [{"data": [[1.701264248E12, 3333.0], [1.701264121E12, 3584.0], [1.701264207E12, 57663.0], [1.701264289E12, 57016.0], [1.70126408E12, 628.0], [1.701264203E12, 25445.0], [1.701264076E12, 937.0], [1.701264084E12, 968.0], [1.70126417E12, 1498.0], [1.701264125E12, 2620.0], [1.701264195E12, 19640.0], [1.701264154E12, 12599.0], [1.701264236E12, 3800.0], [1.70126424E12, 1347.0], [1.701264109E12, 2456.0], [1.701264158E12, 2967.0], [1.701264117E12, 2406.0], [1.701264113E12, 2693.0], [1.701264244E12, 2946.0], [1.701264142E12, 32714.0], [1.701264228E12, 5595.0], [1.701264101E12, 1336.0], [1.701264097E12, 1116.0], [1.701264232E12, 5897.0], [1.701264105E12, 1880.0], [1.701264146E12, 1347.0], [1.701264089E12, 806.0], [1.701264175E12, 2337.0], [1.701264257E12, 8891.0], [1.701264171E12, 1534.0], [1.70126413E12, 1502.0], [1.701264138E12, 1294.0], [1.701264224E12, 15799.0], [1.701264134E12, 1368.0], [1.701264265E12, 59379.0], [1.701264093E12, 1231.0], [1.701264206E12, 11079.0], [1.701264247E12, 3206.0], [1.701264079E12, 981.0], [1.701264075E12, 1349.0], [1.701264161E12, 558.0], [1.70126412E12, 3077.0], [1.701264083E12, 1023.0], [1.701264128E12, 1838.0], [1.701264251E12, 51608.0], [1.701264124E12, 3293.0], [1.70126421E12, 11678.0], [1.701264153E12, 12103.0], [1.701264112E12, 3671.0], [1.701264235E12, 576.0], [1.701264108E12, 1777.0], [1.701264239E12, 4553.0], [1.701264116E12, 1482.0], [1.701264202E12, 60003.0], [1.701264198E12, 21756.0], [1.701264157E12, 3837.0], [1.701264243E12, 3898.0], [1.7012641E12, 1319.0], [1.701264182E12, 25868.0], [1.701264141E12, 963.0], [1.701264231E12, 2189.0], [1.701264145E12, 34518.0], [1.701264104E12, 2335.0], [1.701264174E12, 2100.0], [1.701264133E12, 1410.0], [1.701264129E12, 1749.0], [1.70126426E12, 34599.0], [1.701264088E12, 906.0], [1.701264137E12, 1308.0], [1.701264223E12, 17069.0], [1.701264096E12, 1595.0], [1.701264092E12, 1503.0], [1.701264078E12, 639.0], [1.701264246E12, 3900.0], [1.70126425E12, 50595.0], [1.701264119E12, 2980.0], [1.701264205E12, 12091.0], [1.701264127E12, 2686.0], [1.701264123E12, 4134.0], [1.701264209E12, 11148.0], [1.701264082E12, 1099.0], [1.701264111E12, 2992.0], [1.701264197E12, 21080.0], [1.701264107E12, 2095.0], [1.701264193E12, 17789.0], [1.701264115E12, 3282.0], [1.701264242E12, 4051.0], [1.70126416E12, 2918.0], [1.701264156E12, 43950.0], [1.701264099E12, 1214.0], [1.701264144E12, 1835.0], [1.701264267E12, 18506.0], [1.70126414E12, 1223.0], [1.701264226E12, 45333.0], [1.70126423E12, 2356.0], [1.701264234E12, 5748.0], [1.701264103E12, 2398.0], [1.701264132E12, 1378.0], [1.701264218E12, 13407.0], [1.701264087E12, 1013.0], [1.701264173E12, 2130.0], [1.701264259E12, 38003.0], [1.701264095E12, 1757.0], [1.701264181E12, 56761.0], [1.701264091E12, 1817.0], [1.701264177E12, 3029.0], [1.701264136E12, 1474.0], [1.70126429E12, 56833.0], [1.701264122E12, 4394.0], [1.701264208E12, 11440.0], [1.701264118E12, 2381.0], [1.701264077E12, 711.0], [1.701264126E12, 2353.0], [1.701264085E12, 855.0], [1.701264081E12, 655.0], [1.70126411E12, 2625.0], [1.701264237E12, 4675.0], [1.701264196E12, 20670.0], [1.701264073E12, 638.0], [1.701264159E12, 3093.0], [1.701264241E12, 5214.0], [1.701264155E12, 43616.0], [1.701264245E12, 4224.0], [1.701264114E12, 3364.0], [1.701264139E12, 1299.0], [1.701264229E12, 3280.0], [1.701264225E12, 45098.0], [1.701264098E12, 790.0], [1.701264147E12, 584.0], [1.701264106E12, 3170.0], [1.701264102E12, 1468.0], [1.701264233E12, 726.0], [1.701264131E12, 1516.0], [1.701264258E12, 34095.0], [1.70126409E12, 1329.0], [1.701264176E12, 2672.0], [1.701264086E12, 846.0], [1.701264172E12, 1841.0], [1.701264094E12, 1905.0], [1.701264266E12, 58873.0], [1.701264135E12, 1081.0], [1.701264221E12, 18814.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.701264248E12, 2777.0], [1.701264121E12, 1299.0], [1.701264207E12, 11214.0], [1.701264289E12, 34503.0], [1.70126408E12, 461.0], [1.701264203E12, 11989.0], [1.701264076E12, 937.0], [1.701264084E12, 608.0], [1.70126417E12, 1444.0], [1.701264125E12, 622.0], [1.701264195E12, 19640.0], [1.701264154E12, 12599.0], [1.701264236E12, 3800.0], [1.70126424E12, 1141.0], [1.701264109E12, 830.0], [1.701264158E12, 2908.0], [1.701264117E12, 784.0], [1.701264113E12, 1789.0], [1.701264244E12, 2810.0], [1.701264142E12, 518.0], [1.701264228E12, 3093.0], [1.701264101E12, 536.0], [1.701264097E12, 509.0], [1.701264232E12, 925.0], [1.701264105E12, 1096.0], [1.701264146E12, 1196.0], [1.701264089E12, 445.0], [1.701264175E12, 2140.0], [1.701264257E12, 8891.0], [1.701264171E12, 1533.0], [1.70126413E12, 906.0], [1.701264138E12, 687.0], [1.701264224E12, 5259.0], [1.701264134E12, 500.0], [1.701264265E12, 59379.0], [1.701264093E12, 739.0], [1.701264206E12, 11079.0], [1.701264247E12, 3206.0], [1.701264079E12, 978.0], [1.701264075E12, 1349.0], [1.701264161E12, 558.0], [1.70126412E12, 1313.0], [1.701264083E12, 508.0], [1.701264128E12, 573.0], [1.701264251E12, 4355.0], [1.701264124E12, 676.0], [1.70126421E12, 11678.0], [1.701264153E12, 12103.0], [1.701264112E12, 984.0], [1.701264235E12, 576.0], [1.701264108E12, 688.0], [1.701264239E12, 1072.0], [1.701264116E12, 1123.0], [1.701264202E12, 16584.0], [1.701264198E12, 21756.0], [1.701264157E12, 3837.0], [1.701264243E12, 1606.0], [1.7012641E12, 729.0], [1.701264182E12, 23042.0], [1.701264141E12, 708.0], [1.701264231E12, 690.0], [1.701264145E12, 2890.0], [1.701264104E12, 1061.0], [1.701264174E12, 1888.0], [1.701264133E12, 524.0], [1.701264129E12, 915.0], [1.70126426E12, 8879.0], [1.701264088E12, 468.0], [1.701264137E12, 704.0], [1.701264223E12, 10769.0], [1.701264096E12, 476.0], [1.701264092E12, 893.0], [1.701264078E12, 635.0], [1.701264246E12, 3461.0], [1.70126425E12, 4401.0], [1.701264119E12, 1186.0], [1.701264205E12, 12091.0], [1.701264127E12, 477.0], [1.701264123E12, 1103.0], [1.701264209E12, 11148.0], [1.701264082E12, 612.0], [1.701264111E12, 1484.0], [1.701264197E12, 21080.0], [1.701264107E12, 771.0], [1.701264193E12, 17789.0], [1.701264115E12, 616.0], [1.701264242E12, 982.0], [1.70126416E12, 1674.0], [1.701264156E12, 10660.0], [1.701264099E12, 770.0], [1.701264144E12, 1774.0], [1.701264267E12, 17875.0], [1.70126414E12, 726.0], [1.701264226E12, 5701.0], [1.70126423E12, 2356.0], [1.701264234E12, 5587.0], [1.701264103E12, 832.0], [1.701264132E12, 477.0], [1.701264218E12, 13407.0], [1.701264087E12, 469.0], [1.701264173E12, 1796.0], [1.701264259E12, 8938.0], [1.701264095E12, 658.0], [1.701264181E12, 25727.0], [1.701264091E12, 923.0], [1.701264177E12, 3029.0], [1.701264136E12, 710.0], [1.70126429E12, 47864.0], [1.701264122E12, 1395.0], [1.701264208E12, 11412.0], [1.701264118E12, 1122.0], [1.701264077E12, 512.0], [1.701264126E12, 1044.0], [1.701264085E12, 610.0], [1.701264081E12, 510.0], [1.70126411E12, 848.0], [1.701264237E12, 4675.0], [1.701264196E12, 20142.0], [1.701264073E12, 638.0], [1.701264159E12, 2803.0], [1.701264241E12, 1647.0], [1.701264155E12, 11765.0], [1.701264245E12, 3528.0], [1.701264114E12, 804.0], [1.701264139E12, 488.0], [1.701264229E12, 2974.0], [1.701264225E12, 44212.0], [1.701264098E12, 588.0], [1.701264147E12, 549.0], [1.701264106E12, 712.0], [1.701264102E12, 490.0], [1.701264233E12, 726.0], [1.701264131E12, 874.0], [1.701264258E12, 34095.0], [1.70126409E12, 436.0], [1.701264176E12, 2231.0], [1.701264086E12, 664.0], [1.701264172E12, 1556.0], [1.701264094E12, 584.0], [1.701264266E12, 58201.0], [1.701264135E12, 917.0], [1.701264221E12, 18547.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.701264248E12, 3333.0], [1.701264121E12, 3584.0], [1.701264207E12, 54008.6], [1.701264289E12, 52465.600000000006], [1.70126408E12, 628.0], [1.701264203E12, 25445.0], [1.701264076E12, 937.0], [1.701264084E12, 968.0], [1.70126417E12, 1498.0], [1.701264125E12, 2487.7000000000003], [1.701264195E12, 19640.0], [1.701264154E12, 12599.0], [1.701264236E12, 3800.0], [1.70126424E12, 1347.0], [1.701264109E12, 2456.0], [1.701264158E12, 2967.0], [1.701264117E12, 2395.4], [1.701264113E12, 2693.0], [1.701264244E12, 2946.0], [1.701264142E12, 32714.0], [1.701264228E12, 5595.0], [1.701264101E12, 1333.6], [1.701264097E12, 1095.8000000000002], [1.701264232E12, 5897.0], [1.701264105E12, 1880.0], [1.701264146E12, 1347.0], [1.701264089E12, 806.0], [1.701264175E12, 2337.0], [1.701264257E12, 8891.0], [1.701264171E12, 1534.0], [1.70126413E12, 1500.6], [1.701264138E12, 1286.8], [1.701264224E12, 15799.0], [1.701264134E12, 1365.5], [1.701264265E12, 59379.0], [1.701264093E12, 1231.0], [1.701264206E12, 11079.0], [1.701264247E12, 3206.0], [1.701264079E12, 981.0], [1.701264075E12, 1349.0], [1.701264161E12, 558.0], [1.70126412E12, 3077.0], [1.701264083E12, 1023.0], [1.701264128E12, 1838.0], [1.701264251E12, 51608.0], [1.701264124E12, 3293.0], [1.70126421E12, 11678.0], [1.701264153E12, 12103.0], [1.701264112E12, 3671.0], [1.701264235E12, 576.0], [1.701264108E12, 1777.0], [1.701264239E12, 4553.0], [1.701264116E12, 1482.0], [1.701264202E12, 59572.4], [1.701264198E12, 21756.0], [1.701264157E12, 3837.0], [1.701264243E12, 3898.0], [1.7012641E12, 1319.0], [1.701264182E12, 25868.0], [1.701264141E12, 963.0], [1.701264231E12, 2189.0], [1.701264145E12, 34287.2], [1.701264104E12, 2332.6], [1.701264174E12, 2100.0], [1.701264133E12, 1409.5], [1.701264129E12, 1743.2], [1.70126426E12, 34594.2], [1.701264088E12, 906.0], [1.701264137E12, 1286.9], [1.701264223E12, 17069.0], [1.701264096E12, 1591.8], [1.701264092E12, 1500.0], [1.701264078E12, 639.0], [1.701264246E12, 3900.0], [1.70126425E12, 50595.0], [1.701264119E12, 2980.0], [1.701264205E12, 12091.0], [1.701264127E12, 2680.2], [1.701264123E12, 4132.9], [1.701264209E12, 11148.0], [1.701264082E12, 1099.0], [1.701264111E12, 2957.6], [1.701264197E12, 21080.0], [1.701264107E12, 2090.2], [1.701264193E12, 17789.0], [1.701264115E12, 3271.7], [1.701264242E12, 4051.0], [1.70126416E12, 2918.0], [1.701264156E12, 43739.0], [1.701264099E12, 1214.0], [1.701264144E12, 1835.0], [1.701264267E12, 18506.0], [1.70126414E12, 1223.0], [1.701264226E12, 45326.1], [1.70126423E12, 2356.0], [1.701264234E12, 5748.0], [1.701264103E12, 2398.0], [1.701264132E12, 1378.0], [1.701264218E12, 13407.0], [1.701264087E12, 1013.0], [1.701264173E12, 2130.0], [1.701264259E12, 38003.0], [1.701264095E12, 1757.0], [1.701264181E12, 56761.0], [1.701264091E12, 1817.0], [1.701264177E12, 3029.0], [1.701264136E12, 1446.4], [1.70126429E12, 56833.0], [1.701264122E12, 4394.0], [1.701264208E12, 11440.0], [1.701264118E12, 2381.0], [1.701264077E12, 711.0], [1.701264126E12, 2353.0], [1.701264085E12, 855.0], [1.701264081E12, 655.0], [1.70126411E12, 2625.0], [1.701264237E12, 4675.0], [1.701264196E12, 20670.0], [1.701264073E12, 638.0], [1.701264159E12, 3093.0], [1.701264241E12, 5214.0], [1.701264155E12, 43616.0], [1.701264245E12, 4224.0], [1.701264114E12, 3338.4], [1.701264139E12, 1299.0], [1.701264229E12, 3280.0], [1.701264225E12, 45098.0], [1.701264098E12, 790.0], [1.701264147E12, 584.0], [1.701264106E12, 2954.8000000000006], [1.701264102E12, 1468.0], [1.701264233E12, 726.0], [1.701264131E12, 1417.3000000000004], [1.701264258E12, 34095.0], [1.70126409E12, 1329.0], [1.701264176E12, 2672.0], [1.701264086E12, 846.0], [1.701264172E12, 1841.0], [1.701264094E12, 1905.0], [1.701264266E12, 58873.0], [1.701264135E12, 1081.0], [1.701264221E12, 18814.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.701264248E12, 3333.0], [1.701264121E12, 3584.0], [1.701264207E12, 57663.0], [1.701264289E12, 57016.0], [1.70126408E12, 628.0], [1.701264203E12, 25445.0], [1.701264076E12, 937.0], [1.701264084E12, 968.0], [1.70126417E12, 1498.0], [1.701264125E12, 2620.0], [1.701264195E12, 19640.0], [1.701264154E12, 12599.0], [1.701264236E12, 3800.0], [1.70126424E12, 1347.0], [1.701264109E12, 2456.0], [1.701264158E12, 2967.0], [1.701264117E12, 2406.0], [1.701264113E12, 2693.0], [1.701264244E12, 2946.0], [1.701264142E12, 32714.0], [1.701264228E12, 5595.0], [1.701264101E12, 1336.0], [1.701264097E12, 1116.0], [1.701264232E12, 5897.0], [1.701264105E12, 1880.0], [1.701264146E12, 1347.0], [1.701264089E12, 806.0], [1.701264175E12, 2337.0], [1.701264257E12, 8891.0], [1.701264171E12, 1534.0], [1.70126413E12, 1502.0], [1.701264138E12, 1294.0], [1.701264224E12, 15799.0], [1.701264134E12, 1368.0], [1.701264265E12, 59379.0], [1.701264093E12, 1231.0], [1.701264206E12, 11079.0], [1.701264247E12, 3206.0], [1.701264079E12, 981.0], [1.701264075E12, 1349.0], [1.701264161E12, 558.0], [1.70126412E12, 3077.0], [1.701264083E12, 1023.0], [1.701264128E12, 1838.0], [1.701264251E12, 51608.0], [1.701264124E12, 3293.0], [1.70126421E12, 11678.0], [1.701264153E12, 12103.0], [1.701264112E12, 3671.0], [1.701264235E12, 576.0], [1.701264108E12, 1777.0], [1.701264239E12, 4553.0], [1.701264116E12, 1482.0], [1.701264202E12, 60003.0], [1.701264198E12, 21756.0], [1.701264157E12, 3837.0], [1.701264243E12, 3898.0], [1.7012641E12, 1319.0], [1.701264182E12, 25868.0], [1.701264141E12, 963.0], [1.701264231E12, 2189.0], [1.701264145E12, 34518.0], [1.701264104E12, 2335.0], [1.701264174E12, 2100.0], [1.701264133E12, 1410.0], [1.701264129E12, 1749.0], [1.70126426E12, 34599.0], [1.701264088E12, 906.0], [1.701264137E12, 1308.0], [1.701264223E12, 17069.0], [1.701264096E12, 1595.0], [1.701264092E12, 1503.0], [1.701264078E12, 639.0], [1.701264246E12, 3900.0], [1.70126425E12, 50595.0], [1.701264119E12, 2980.0], [1.701264205E12, 12091.0], [1.701264127E12, 2686.0], [1.701264123E12, 4134.0], [1.701264209E12, 11148.0], [1.701264082E12, 1099.0], [1.701264111E12, 2992.0], [1.701264197E12, 21080.0], [1.701264107E12, 2095.0], [1.701264193E12, 17789.0], [1.701264115E12, 3282.0], [1.701264242E12, 4051.0], [1.70126416E12, 2918.0], [1.701264156E12, 43950.0], [1.701264099E12, 1214.0], [1.701264144E12, 1835.0], [1.701264267E12, 18506.0], [1.70126414E12, 1223.0], [1.701264226E12, 45333.0], [1.70126423E12, 2356.0], [1.701264234E12, 5748.0], [1.701264103E12, 2398.0], [1.701264132E12, 1378.0], [1.701264218E12, 13407.0], [1.701264087E12, 1013.0], [1.701264173E12, 2130.0], [1.701264259E12, 38003.0], [1.701264095E12, 1757.0], [1.701264181E12, 56761.0], [1.701264091E12, 1817.0], [1.701264177E12, 3029.0], [1.701264136E12, 1474.0], [1.70126429E12, 56833.0], [1.701264122E12, 4394.0], [1.701264208E12, 11440.0], [1.701264118E12, 2381.0], [1.701264077E12, 711.0], [1.701264126E12, 2353.0], [1.701264085E12, 855.0], [1.701264081E12, 655.0], [1.70126411E12, 2625.0], [1.701264237E12, 4675.0], [1.701264196E12, 20670.0], [1.701264073E12, 638.0], [1.701264159E12, 3093.0], [1.701264241E12, 5214.0], [1.701264155E12, 43616.0], [1.701264245E12, 4224.0], [1.701264114E12, 3364.0], [1.701264139E12, 1299.0], [1.701264229E12, 3280.0], [1.701264225E12, 45098.0], [1.701264098E12, 790.0], [1.701264147E12, 584.0], [1.701264106E12, 3170.0], [1.701264102E12, 1468.0], [1.701264233E12, 726.0], [1.701264131E12, 1516.0], [1.701264258E12, 34095.0], [1.70126409E12, 1329.0], [1.701264176E12, 2672.0], [1.701264086E12, 846.0], [1.701264172E12, 1841.0], [1.701264094E12, 1905.0], [1.701264266E12, 58873.0], [1.701264135E12, 1081.0], [1.701264221E12, 18814.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.701264248E12, 3170.5], [1.701264121E12, 1524.0], [1.701264207E12, 46356.0], [1.701264289E12, 47117.0], [1.70126408E12, 555.0], [1.701264203E12, 18717.0], [1.701264076E12, 937.0], [1.701264084E12, 788.0], [1.70126417E12, 1444.0], [1.701264125E12, 1335.5], [1.701264195E12, 19640.0], [1.701264154E12, 12599.0], [1.701264236E12, 3800.0], [1.70126424E12, 1244.0], [1.701264109E12, 2211.0], [1.701264158E12, 2937.5], [1.701264117E12, 2243.0], [1.701264113E12, 2445.0], [1.701264244E12, 2878.0], [1.701264142E12, 2240.0], [1.701264228E12, 4240.0], [1.701264101E12, 1113.5], [1.701264097E12, 922.0], [1.701264232E12, 1266.0], [1.701264105E12, 1248.0], [1.701264146E12, 1300.0], [1.701264089E12, 591.0], [1.701264175E12, 2285.0], [1.701264257E12, 8891.0], [1.701264171E12, 1533.5], [1.70126413E12, 1136.0], [1.701264138E12, 931.0], [1.701264224E12, 15192.0], [1.701264134E12, 883.0], [1.701264265E12, 59379.0], [1.701264093E12, 1014.0], [1.701264206E12, 11079.0], [1.701264247E12, 3206.0], [1.701264079E12, 979.5], [1.701264075E12, 1349.0], [1.701264161E12, 558.0], [1.70126412E12, 2410.0], [1.701264083E12, 922.0], [1.701264128E12, 1100.0], [1.701264251E12, 21675.0], [1.701264124E12, 2206.0], [1.70126421E12, 11678.0], [1.701264153E12, 12103.0], [1.701264112E12, 1400.0], [1.701264235E12, 576.0], [1.701264108E12, 1612.0], [1.701264239E12, 2812.5], [1.701264116E12, 1298.0], [1.701264202E12, 47497.0], [1.701264198E12, 21756.0], [1.701264157E12, 3837.0], [1.701264243E12, 3055.0], [1.7012641E12, 1209.0], [1.701264182E12, 23134.0], [1.701264141E12, 876.0], [1.701264231E12, 1950.0], [1.701264145E12, 32730.0], [1.701264104E12, 1350.0], [1.701264174E12, 1994.0], [1.701264133E12, 1283.5], [1.701264129E12, 1397.0], [1.70126426E12, 34006.0], [1.701264088E12, 700.0], [1.701264137E12, 830.0], [1.701264223E12, 16364.0], [1.701264096E12, 1462.0], [1.701264092E12, 1114.0], [1.701264078E12, 637.0], [1.701264246E12, 3774.0], [1.70126425E12, 27498.0], [1.701264119E12, 2433.0], [1.701264205E12, 12091.0], [1.701264127E12, 1100.5], [1.701264123E12, 1877.5], [1.701264209E12, 11148.0], [1.701264082E12, 837.0], [1.701264111E12, 1963.0], [1.701264197E12, 21080.0], [1.701264107E12, 1502.0], [1.701264193E12, 17789.0], [1.701264115E12, 1838.5], [1.701264242E12, 2516.5], [1.70126416E12, 1900.0], [1.701264156E12, 41729.0], [1.701264099E12, 875.0], [1.701264144E12, 1804.5], [1.701264267E12, 18190.5], [1.70126414E12, 902.0], [1.701264226E12, 44295.0], [1.70126423E12, 2356.0], [1.701264234E12, 5667.5], [1.701264103E12, 1065.0], [1.701264132E12, 1181.0], [1.701264218E12, 13407.0], [1.701264087E12, 599.0], [1.701264173E12, 1940.0], [1.701264259E12, 37774.0], [1.701264095E12, 1384.0], [1.701264181E12, 26049.5], [1.701264091E12, 1155.5], [1.701264177E12, 3029.0], [1.701264136E12, 854.0], [1.70126429E12, 52348.5], [1.701264122E12, 1763.0], [1.701264208E12, 11426.0], [1.701264118E12, 1181.0], [1.701264077E12, 582.0], [1.701264126E12, 1182.0], [1.701264085E12, 726.5], [1.701264081E12, 512.0], [1.70126411E12, 1404.0], [1.701264237E12, 4675.0], [1.701264196E12, 20494.0], [1.701264073E12, 638.0], [1.701264159E12, 2920.0], [1.701264241E12, 1648.0], [1.701264155E12, 27751.0], [1.701264245E12, 3530.0], [1.701264114E12, 1431.0], [1.701264139E12, 1135.5], [1.701264229E12, 3175.5], [1.701264225E12, 44625.5], [1.701264098E12, 691.0], [1.701264147E12, 566.5], [1.701264106E12, 1441.0], [1.701264102E12, 1228.0], [1.701264233E12, 726.0], [1.701264131E12, 1120.0], [1.701264258E12, 34095.0], [1.70126409E12, 882.5], [1.701264176E12, 2310.5], [1.701264086E12, 843.0], [1.701264172E12, 1698.5], [1.701264094E12, 1728.0], [1.701264266E12, 58493.5], [1.701264135E12, 970.0], [1.701264221E12, 18712.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.701264248E12, 3333.0], [1.701264121E12, 3584.0], [1.701264207E12, 57663.0], [1.701264289E12, 57016.0], [1.70126408E12, 628.0], [1.701264203E12, 25445.0], [1.701264076E12, 937.0], [1.701264084E12, 968.0], [1.70126417E12, 1498.0], [1.701264125E12, 2620.0], [1.701264195E12, 19640.0], [1.701264154E12, 12599.0], [1.701264236E12, 3800.0], [1.70126424E12, 1347.0], [1.701264109E12, 2456.0], [1.701264158E12, 2967.0], [1.701264117E12, 2406.0], [1.701264113E12, 2693.0], [1.701264244E12, 2946.0], [1.701264142E12, 32714.0], [1.701264228E12, 5595.0], [1.701264101E12, 1336.0], [1.701264097E12, 1116.0], [1.701264232E12, 5897.0], [1.701264105E12, 1880.0], [1.701264146E12, 1347.0], [1.701264089E12, 806.0], [1.701264175E12, 2337.0], [1.701264257E12, 8891.0], [1.701264171E12, 1534.0], [1.70126413E12, 1502.0], [1.701264138E12, 1294.0], [1.701264224E12, 15799.0], [1.701264134E12, 1368.0], [1.701264265E12, 59379.0], [1.701264093E12, 1231.0], [1.701264206E12, 11079.0], [1.701264247E12, 3206.0], [1.701264079E12, 981.0], [1.701264075E12, 1349.0], [1.701264161E12, 558.0], [1.70126412E12, 3077.0], [1.701264083E12, 1023.0], [1.701264128E12, 1838.0], [1.701264251E12, 51608.0], [1.701264124E12, 3293.0], [1.70126421E12, 11678.0], [1.701264153E12, 12103.0], [1.701264112E12, 3671.0], [1.701264235E12, 576.0], [1.701264108E12, 1777.0], [1.701264239E12, 4553.0], [1.701264116E12, 1482.0], [1.701264202E12, 59981.8], [1.701264198E12, 21756.0], [1.701264157E12, 3837.0], [1.701264243E12, 3898.0], [1.7012641E12, 1319.0], [1.701264182E12, 25868.0], [1.701264141E12, 963.0], [1.701264231E12, 2189.0], [1.701264145E12, 34518.0], [1.701264104E12, 2335.0], [1.701264174E12, 2100.0], [1.701264133E12, 1410.0], [1.701264129E12, 1749.0], [1.70126426E12, 34599.0], [1.701264088E12, 906.0], [1.701264137E12, 1308.0], [1.701264223E12, 17069.0], [1.701264096E12, 1595.0], [1.701264092E12, 1503.0], [1.701264078E12, 639.0], [1.701264246E12, 3900.0], [1.70126425E12, 50595.0], [1.701264119E12, 2980.0], [1.701264205E12, 12091.0], [1.701264127E12, 2686.0], [1.701264123E12, 4134.0], [1.701264209E12, 11148.0], [1.701264082E12, 1099.0], [1.701264111E12, 2992.0], [1.701264197E12, 21080.0], [1.701264107E12, 2095.0], [1.701264193E12, 17789.0], [1.701264115E12, 3282.0], [1.701264242E12, 4051.0], [1.70126416E12, 2918.0], [1.701264156E12, 43950.0], [1.701264099E12, 1214.0], [1.701264144E12, 1835.0], [1.701264267E12, 18506.0], [1.70126414E12, 1223.0], [1.701264226E12, 45333.0], [1.70126423E12, 2356.0], [1.701264234E12, 5748.0], [1.701264103E12, 2398.0], [1.701264132E12, 1378.0], [1.701264218E12, 13407.0], [1.701264087E12, 1013.0], [1.701264173E12, 2130.0], [1.701264259E12, 38003.0], [1.701264095E12, 1757.0], [1.701264181E12, 56761.0], [1.701264091E12, 1817.0], [1.701264177E12, 3029.0], [1.701264136E12, 1474.0], [1.70126429E12, 56833.0], [1.701264122E12, 4394.0], [1.701264208E12, 11440.0], [1.701264118E12, 2381.0], [1.701264077E12, 711.0], [1.701264126E12, 2353.0], [1.701264085E12, 855.0], [1.701264081E12, 655.0], [1.70126411E12, 2625.0], [1.701264237E12, 4675.0], [1.701264196E12, 20670.0], [1.701264073E12, 638.0], [1.701264159E12, 3093.0], [1.701264241E12, 5214.0], [1.701264155E12, 43616.0], [1.701264245E12, 4224.0], [1.701264114E12, 3364.0], [1.701264139E12, 1299.0], [1.701264229E12, 3280.0], [1.701264225E12, 45098.0], [1.701264098E12, 790.0], [1.701264147E12, 584.0], [1.701264106E12, 3170.0], [1.701264102E12, 1468.0], [1.701264233E12, 726.0], [1.701264131E12, 1516.0], [1.701264258E12, 34095.0], [1.70126409E12, 1329.0], [1.701264176E12, 2672.0], [1.701264086E12, 846.0], [1.701264172E12, 1841.0], [1.701264094E12, 1905.0], [1.701264266E12, 58873.0], [1.701264135E12, 1081.0], [1.701264221E12, 18814.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.70126429E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 1113.0, "minX": 1.0, "maxY": 60026.0, "series": [{"data": [[2.0, 1994.0], [8.0, 1277.0], [9.0, 1383.0], [10.0, 1294.0], [11.0, 1451.5], [3.0, 1271.5], [12.0, 1184.5], [13.0, 2898.0], [14.0, 1113.0], [15.0, 44203.0], [1.0, 8891.0], [4.0, 3306.5], [16.0, 2516.5], [5.0, 1182.0], [22.0, 47497.0], [6.0, 2225.0], [7.0, 1887.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 60025.0], [8.0, 60024.0], [9.0, 46780.0], [10.0, 60026.0], [3.0, 60025.0], [13.0, 45014.0], [14.0, 60026.0], [15.0, 60026.0], [4.0, 32324.0], [1.0, 24671.0], [16.0, 60025.0], [5.0, 60024.0], [20.0, 60025.0], [22.0, 60024.0], [6.0, 60025.0], [7.0, 60025.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 22.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 47242.0, "series": [{"data": [[2.0, 1928.0], [8.0, 1212.0], [9.0, 1320.0], [10.0, 1229.0], [11.0, 1389.0], [3.0, 1138.0], [12.0, 1120.5], [13.0, 2828.0], [14.0, 1050.0], [15.0, 44126.0], [1.0, 8827.0], [4.0, 3238.5], [16.0, 2452.0], [5.0, 1116.0], [22.0, 47242.0], [6.0, 2162.0], [7.0, 1824.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 0.0], [8.0, 0.0], [9.0, 32648.0], [10.0, 0.0], [3.0, 0.0], [13.0, 45014.0], [14.0, 0.0], [15.0, 0.0], [4.0, 15110.5], [1.0, 8676.0], [16.0, 0.0], [5.0, 0.0], [20.0, 0.0], [22.0, 0.0], [6.0, 0.0], [7.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 22.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.701264073E12, "maxY": 22.0, "series": [{"data": [[1.701264248E12, 4.0], [1.701264121E12, 17.0], [1.701264207E12, 13.0], [1.70126408E12, 4.0], [1.701264203E12, 2.0], [1.701264076E12, 2.0], [1.701264084E12, 4.0], [1.70126417E12, 3.0], [1.701264125E12, 12.0], [1.701264195E12, 1.0], [1.701264154E12, 1.0], [1.701264236E12, 1.0], [1.70126415E12, 4.0], [1.70126424E12, 5.0], [1.701264109E12, 13.0], [1.701264158E12, 2.0], [1.701264117E12, 16.0], [1.701264113E12, 13.0], [1.701264199E12, 3.0], [1.701264244E12, 2.0], [1.701264142E12, 10.0], [1.701264228E12, 7.0], [1.701264101E12, 10.0], [1.701264097E12, 8.0], [1.701264183E12, 3.0], [1.701264232E12, 7.0], [1.701264105E12, 9.0], [1.701264191E12, 1.0], [1.701264146E12, 5.0], [1.701264089E12, 5.0], [1.701264175E12, 6.0], [1.701264171E12, 5.0], [1.70126413E12, 11.0], [1.701264179E12, 7.0], [1.701264138E12, 10.0], [1.701264224E12, 3.0], [1.701264134E12, 14.0], [1.701264093E12, 5.0], [1.701264206E12, 2.0], [1.701264247E12, 1.0], [1.701264079E12, 3.0], [1.701264075E12, 1.0], [1.701264161E12, 1.0], [1.70126412E12, 14.0], [1.701264083E12, 4.0], [1.701264169E12, 1.0], [1.701264128E12, 9.0], [1.701264251E12, 4.0], [1.701264124E12, 9.0], [1.701264255E12, 3.0], [1.70126421E12, 2.0], [1.701264153E12, 1.0], [1.701264112E12, 13.0], [1.701264235E12, 1.0], [1.701264108E12, 13.0], [1.701264239E12, 9.0], [1.701264116E12, 15.0], [1.701264202E12, 22.0], [1.701264198E12, 1.0], [1.701264157E12, 1.0], [1.701264243E12, 6.0], [1.7012641E12, 10.0], [1.701264182E12, 14.0], [1.701264141E12, 5.0], [1.701264231E12, 6.0], [1.701264145E12, 13.0], [1.701264104E12, 11.0], [1.701264174E12, 2.0], [1.701264133E12, 10.0], [1.701264129E12, 10.0], [1.701264088E12, 4.0], [1.701264137E12, 10.0], [1.701264223E12, 4.0], [1.701264096E12, 9.0], [1.701264092E12, 8.0], [1.701264178E12, 7.0], [1.701264078E12, 3.0], [1.701264246E12, 9.0], [1.70126425E12, 4.0], [1.701264119E12, 16.0], [1.701264205E12, 1.0], [1.701264127E12, 10.0], [1.701264123E12, 10.0], [1.701264209E12, 1.0], [1.701264082E12, 3.0], [1.701264168E12, 2.0], [1.701264254E12, 1.0], [1.701264111E12, 14.0], [1.701264197E12, 1.0], [1.701264107E12, 12.0], [1.701264193E12, 1.0], [1.701264238E12, 4.0], [1.701264115E12, 14.0], [1.701264242E12, 16.0], [1.701264074E12, 1.0], [1.70126416E12, 3.0], [1.701264156E12, 11.0], [1.701264099E12, 10.0], [1.701264185E12, 9.0], [1.701264144E12, 2.0], [1.70126414E12, 9.0], [1.701264226E12, 12.0], [1.70126423E12, 1.0], [1.701264234E12, 2.0], [1.701264103E12, 10.0], [1.701264132E12, 9.0], [1.701264218E12, 1.0], [1.701264087E12, 4.0], [1.701264173E12, 8.0], [1.701264095E12, 8.0], [1.701264181E12, 15.0], [1.701264091E12, 7.0], [1.701264177E12, 3.0], [1.701264136E12, 12.0], [1.701264122E12, 14.0], [1.701264208E12, 2.0], [1.701264118E12, 16.0], [1.701264249E12, 1.0], [1.701264077E12, 2.0], [1.701264126E12, 5.0], [1.701264253E12, 2.0], [1.701264212E12, 5.0], [1.701264085E12, 5.0], [1.701264081E12, 4.0], [1.701264167E12, 1.0], [1.70126411E12, 13.0], [1.701264237E12, 1.0], [1.701264196E12, 7.0], [1.701264073E12, 1.0], [1.701264159E12, 7.0], [1.701264241E12, 8.0], [1.701264155E12, 6.0], [1.701264245E12, 3.0], [1.701264114E12, 13.0], [1.701264139E12, 8.0], [1.701264229E12, 6.0], [1.701264225E12, 4.0], [1.701264098E12, 9.0], [1.701264147E12, 2.0], [1.701264106E12, 12.0], [1.701264102E12, 11.0], [1.701264233E12, 1.0], [1.701264131E12, 12.0], [1.701264258E12, 1.0], [1.70126409E12, 7.0], [1.701264176E12, 5.0], [1.701264086E12, 4.0], [1.701264172E12, 2.0], [1.701264094E12, 8.0], [1.70126418E12, 6.0], [1.701264135E12, 9.0], [1.701264221E12, 5.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.701264258E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.701264073E12, "maxY": 21.0, "series": [{"data": [[1.701264248E12, 4.0], [1.701264121E12, 9.0], [1.701264207E12, 13.0], [1.701264289E12, 15.0], [1.70126408E12, 5.0], [1.701264203E12, 2.0], [1.701264076E12, 1.0], [1.701264084E12, 3.0], [1.70126417E12, 3.0], [1.701264125E12, 12.0], [1.701264195E12, 1.0], [1.701264154E12, 1.0], [1.701264236E12, 1.0], [1.70126424E12, 2.0], [1.701264109E12, 9.0], [1.701264158E12, 2.0], [1.701264117E12, 11.0], [1.701264113E12, 6.0], [1.701264244E12, 2.0], [1.701264142E12, 9.0], [1.701264228E12, 7.0], [1.701264101E12, 12.0], [1.701264097E12, 11.0], [1.701264232E12, 7.0], [1.701264105E12, 8.0], [1.701264146E12, 5.0], [1.701264089E12, 5.0], [1.701264175E12, 5.0], [1.701264257E12, 1.0], [1.701264171E12, 2.0], [1.70126413E12, 11.0], [1.701264138E12, 10.0], [1.701264224E12, 3.0], [1.701264134E12, 14.0], [1.701264265E12, 1.0], [1.701264093E12, 4.0], [1.701264206E12, 1.0], [1.701264247E12, 1.0], [1.701264079E12, 2.0], [1.701264075E12, 1.0], [1.701264161E12, 1.0], [1.70126412E12, 9.0], [1.701264083E12, 4.0], [1.701264128E12, 9.0], [1.701264251E12, 4.0], [1.701264124E12, 9.0], [1.70126421E12, 1.0], [1.701264153E12, 1.0], [1.701264112E12, 5.0], [1.701264235E12, 1.0], [1.701264108E12, 7.0], [1.701264239E12, 2.0], [1.701264116E12, 8.0], [1.701264202E12, 21.0], [1.701264198E12, 1.0], [1.701264157E12, 1.0], [1.701264243E12, 4.0], [1.7012641E12, 9.0], [1.701264182E12, 5.0], [1.701264141E12, 5.0], [1.701264231E12, 6.0], [1.701264145E12, 13.0], [1.701264104E12, 13.0], [1.701264174E12, 2.0], [1.701264133E12, 10.0], [1.701264129E12, 10.0], [1.70126426E12, 11.0], [1.701264088E12, 4.0], [1.701264137E12, 10.0], [1.701264223E12, 4.0], [1.701264096E12, 11.0], [1.701264092E12, 11.0], [1.701264078E12, 2.0], [1.701264246E12, 9.0], [1.70126425E12, 2.0], [1.701264119E12, 9.0], [1.701264205E12, 1.0], [1.701264127E12, 10.0], [1.701264123E12, 10.0], [1.701264209E12, 1.0], [1.701264082E12, 3.0], [1.701264111E12, 13.0], [1.701264197E12, 1.0], [1.701264107E12, 12.0], [1.701264193E12, 1.0], [1.701264115E12, 10.0], [1.701264242E12, 2.0], [1.70126416E12, 3.0], [1.701264156E12, 11.0], [1.701264099E12, 6.0], [1.701264144E12, 2.0], [1.701264267E12, 2.0], [1.70126414E12, 5.0], [1.701264226E12, 12.0], [1.70126423E12, 1.0], [1.701264234E12, 2.0], [1.701264103E12, 9.0], [1.701264132E12, 9.0], [1.701264218E12, 1.0], [1.701264087E12, 5.0], [1.701264173E12, 4.0], [1.701264259E12, 6.0], [1.701264095E12, 7.0], [1.701264181E12, 8.0], [1.701264091E12, 4.0], [1.701264177E12, 1.0], [1.701264136E12, 12.0], [1.70126429E12, 2.0], [1.701264122E12, 8.0], [1.701264208E12, 2.0], [1.701264118E12, 8.0], [1.701264077E12, 3.0], [1.701264126E12, 5.0], [1.701264085E12, 6.0], [1.701264081E12, 3.0], [1.70126411E12, 6.0], [1.701264237E12, 1.0], [1.701264196E12, 7.0], [1.701264073E12, 1.0], [1.701264159E12, 7.0], [1.701264241E12, 3.0], [1.701264155E12, 6.0], [1.701264245E12, 3.0], [1.701264114E12, 13.0], [1.701264139E12, 8.0], [1.701264229E12, 6.0], [1.701264225E12, 4.0], [1.701264098E12, 8.0], [1.701264147E12, 2.0], [1.701264106E12, 11.0], [1.701264102E12, 5.0], [1.701264233E12, 1.0], [1.701264131E12, 12.0], [1.701264258E12, 1.0], [1.70126409E12, 2.0], [1.701264176E12, 4.0], [1.701264086E12, 3.0], [1.701264172E12, 2.0], [1.701264094E12, 7.0], [1.701264266E12, 4.0], [1.701264135E12, 9.0], [1.701264221E12, 5.0]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.701264206E12, 1.0], [1.70126429E12, 1.0], [1.701264291E12, 1.0], [1.701264167E12, 1.0], [1.70126421E12, 1.0], [1.701264168E12, 2.0], [1.70126424E12, 3.0], [1.701264239E12, 7.0], [1.701264238E12, 4.0], [1.701264242E12, 14.0], [1.701264202E12, 1.0], [1.701264241E12, 5.0], [1.701264199E12, 3.0], [1.701264243E12, 2.0], [1.701264267E12, 8.0], [1.701264182E12, 9.0], [1.701264272E12, 1.0], [1.701264183E12, 3.0], [1.70126427E12, 2.0], [1.701264175E12, 1.0], [1.701264176E12, 1.0], [1.701264171E12, 3.0], [1.701264173E12, 4.0], [1.701264179E12, 7.0], [1.70126418E12, 6.0], [1.701264263E12, 2.0], [1.701264181E12, 7.0], [1.701264262E12, 17.0], [1.701264178E12, 7.0]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketTimeoutException", "isController": false}, {"data": [[1.701264142E12, 1.0], [1.70126414E12, 4.0], [1.70126425E12, 2.0], [1.701264249E12, 1.0], [1.701264253E12, 2.0], [1.701264212E12, 5.0], [1.701264191E12, 1.0], [1.701264256E12, 1.0], [1.701264255E12, 4.0], [1.701264254E12, 2.0], [1.70126415E12, 4.0], [1.701264262E12, 3.0], [1.701264177E12, 2.0]], "isOverall": false, "label": "500", "isController": false}, {"data": [[1.701264185E12, 9.0], [1.701264291E12, 7.0], [1.701264169E12, 1.0], [1.701264295E12, 13.0]], "isOverall": false, "label": "502", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.701264295E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.701264073E12, "maxY": 21.0, "series": [{"data": [[1.701264248E12, 4.0], [1.701264121E12, 9.0], [1.701264207E12, 13.0], [1.701264289E12, 15.0], [1.70126408E12, 5.0], [1.701264203E12, 2.0], [1.701264076E12, 1.0], [1.701264084E12, 3.0], [1.70126417E12, 3.0], [1.701264125E12, 12.0], [1.701264195E12, 1.0], [1.701264154E12, 1.0], [1.701264236E12, 1.0], [1.70126424E12, 2.0], [1.701264109E12, 9.0], [1.701264158E12, 2.0], [1.701264117E12, 11.0], [1.701264113E12, 6.0], [1.701264244E12, 2.0], [1.701264142E12, 9.0], [1.701264228E12, 7.0], [1.701264101E12, 12.0], [1.701264097E12, 11.0], [1.701264232E12, 7.0], [1.701264105E12, 8.0], [1.701264146E12, 5.0], [1.701264089E12, 5.0], [1.701264175E12, 5.0], [1.701264257E12, 1.0], [1.701264171E12, 2.0], [1.70126413E12, 11.0], [1.701264138E12, 10.0], [1.701264224E12, 3.0], [1.701264134E12, 14.0], [1.701264265E12, 1.0], [1.701264093E12, 4.0], [1.701264206E12, 1.0], [1.701264247E12, 1.0], [1.701264079E12, 2.0], [1.701264075E12, 1.0], [1.701264161E12, 1.0], [1.70126412E12, 9.0], [1.701264083E12, 4.0], [1.701264128E12, 9.0], [1.701264251E12, 4.0], [1.701264124E12, 9.0], [1.70126421E12, 1.0], [1.701264153E12, 1.0], [1.701264112E12, 5.0], [1.701264235E12, 1.0], [1.701264108E12, 7.0], [1.701264239E12, 2.0], [1.701264116E12, 8.0], [1.701264202E12, 21.0], [1.701264198E12, 1.0], [1.701264157E12, 1.0], [1.701264243E12, 4.0], [1.7012641E12, 9.0], [1.701264182E12, 5.0], [1.701264141E12, 5.0], [1.701264231E12, 6.0], [1.701264145E12, 13.0], [1.701264104E12, 13.0], [1.701264174E12, 2.0], [1.701264133E12, 10.0], [1.701264129E12, 10.0], [1.70126426E12, 11.0], [1.701264088E12, 4.0], [1.701264137E12, 10.0], [1.701264223E12, 4.0], [1.701264096E12, 11.0], [1.701264092E12, 11.0], [1.701264078E12, 2.0], [1.701264246E12, 9.0], [1.70126425E12, 2.0], [1.701264119E12, 9.0], [1.701264205E12, 1.0], [1.701264127E12, 10.0], [1.701264123E12, 10.0], [1.701264209E12, 1.0], [1.701264082E12, 3.0], [1.701264111E12, 13.0], [1.701264197E12, 1.0], [1.701264107E12, 12.0], [1.701264193E12, 1.0], [1.701264115E12, 10.0], [1.701264242E12, 2.0], [1.70126416E12, 3.0], [1.701264156E12, 11.0], [1.701264099E12, 6.0], [1.701264144E12, 2.0], [1.701264267E12, 2.0], [1.70126414E12, 5.0], [1.701264226E12, 12.0], [1.70126423E12, 1.0], [1.701264234E12, 2.0], [1.701264103E12, 9.0], [1.701264132E12, 9.0], [1.701264218E12, 1.0], [1.701264087E12, 5.0], [1.701264173E12, 4.0], [1.701264259E12, 6.0], [1.701264095E12, 7.0], [1.701264181E12, 8.0], [1.701264091E12, 4.0], [1.701264177E12, 1.0], [1.701264136E12, 12.0], [1.70126429E12, 2.0], [1.701264122E12, 8.0], [1.701264208E12, 2.0], [1.701264118E12, 8.0], [1.701264077E12, 3.0], [1.701264126E12, 5.0], [1.701264085E12, 6.0], [1.701264081E12, 3.0], [1.70126411E12, 6.0], [1.701264237E12, 1.0], [1.701264196E12, 7.0], [1.701264073E12, 1.0], [1.701264159E12, 7.0], [1.701264241E12, 3.0], [1.701264155E12, 6.0], [1.701264245E12, 3.0], [1.701264114E12, 13.0], [1.701264139E12, 8.0], [1.701264229E12, 6.0], [1.701264225E12, 4.0], [1.701264098E12, 8.0], [1.701264147E12, 2.0], [1.701264106E12, 11.0], [1.701264102E12, 5.0], [1.701264233E12, 1.0], [1.701264131E12, 12.0], [1.701264258E12, 1.0], [1.70126409E12, 2.0], [1.701264176E12, 4.0], [1.701264086E12, 3.0], [1.701264172E12, 2.0], [1.701264094E12, 7.0], [1.701264266E12, 4.0], [1.701264135E12, 9.0], [1.701264221E12, 5.0]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.701264206E12, 1.0], [1.70126429E12, 1.0], [1.70126425E12, 2.0], [1.701264249E12, 1.0], [1.701264291E12, 8.0], [1.701264253E12, 2.0], [1.701264169E12, 1.0], [1.701264212E12, 5.0], [1.701264295E12, 13.0], [1.701264256E12, 1.0], [1.701264255E12, 4.0], [1.701264167E12, 1.0], [1.70126421E12, 1.0], [1.701264168E12, 2.0], [1.701264254E12, 2.0], [1.70126415E12, 4.0], [1.70126424E12, 3.0], [1.701264239E12, 7.0], [1.701264238E12, 4.0], [1.701264242E12, 14.0], [1.701264202E12, 1.0], [1.701264241E12, 5.0], [1.701264199E12, 3.0], [1.701264243E12, 2.0], [1.701264142E12, 1.0], [1.701264185E12, 9.0], [1.701264267E12, 8.0], [1.701264182E12, 9.0], [1.701264272E12, 1.0], [1.70126414E12, 4.0], [1.701264183E12, 3.0], [1.70126427E12, 2.0], [1.701264191E12, 1.0], [1.701264175E12, 1.0], [1.701264176E12, 1.0], [1.701264171E12, 3.0], [1.701264173E12, 4.0], [1.701264179E12, 7.0], [1.70126418E12, 6.0], [1.701264263E12, 2.0], [1.701264181E12, 7.0], [1.701264262E12, 20.0], [1.701264177E12, 2.0], [1.701264178E12, 7.0]], "isOverall": false, "label": "HTTP Request-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.701264295E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.701264073E12, "maxY": 21.0, "series": [{"data": [[1.701264248E12, 4.0], [1.701264121E12, 9.0], [1.701264207E12, 13.0], [1.701264289E12, 15.0], [1.70126408E12, 5.0], [1.701264203E12, 2.0], [1.701264076E12, 1.0], [1.701264084E12, 3.0], [1.70126417E12, 3.0], [1.701264125E12, 12.0], [1.701264195E12, 1.0], [1.701264154E12, 1.0], [1.701264236E12, 1.0], [1.70126424E12, 2.0], [1.701264109E12, 9.0], [1.701264158E12, 2.0], [1.701264117E12, 11.0], [1.701264113E12, 6.0], [1.701264244E12, 2.0], [1.701264142E12, 9.0], [1.701264228E12, 7.0], [1.701264101E12, 12.0], [1.701264097E12, 11.0], [1.701264232E12, 7.0], [1.701264105E12, 8.0], [1.701264146E12, 5.0], [1.701264089E12, 5.0], [1.701264175E12, 5.0], [1.701264257E12, 1.0], [1.701264171E12, 2.0], [1.70126413E12, 11.0], [1.701264138E12, 10.0], [1.701264224E12, 3.0], [1.701264134E12, 14.0], [1.701264265E12, 1.0], [1.701264093E12, 4.0], [1.701264206E12, 1.0], [1.701264247E12, 1.0], [1.701264079E12, 2.0], [1.701264075E12, 1.0], [1.701264161E12, 1.0], [1.70126412E12, 9.0], [1.701264083E12, 4.0], [1.701264128E12, 9.0], [1.701264251E12, 4.0], [1.701264124E12, 9.0], [1.70126421E12, 1.0], [1.701264153E12, 1.0], [1.701264112E12, 5.0], [1.701264235E12, 1.0], [1.701264108E12, 7.0], [1.701264239E12, 2.0], [1.701264116E12, 8.0], [1.701264202E12, 21.0], [1.701264198E12, 1.0], [1.701264157E12, 1.0], [1.701264243E12, 4.0], [1.7012641E12, 9.0], [1.701264182E12, 5.0], [1.701264141E12, 5.0], [1.701264231E12, 6.0], [1.701264145E12, 13.0], [1.701264104E12, 13.0], [1.701264174E12, 2.0], [1.701264133E12, 10.0], [1.701264129E12, 10.0], [1.70126426E12, 11.0], [1.701264088E12, 4.0], [1.701264137E12, 10.0], [1.701264223E12, 4.0], [1.701264096E12, 11.0], [1.701264092E12, 11.0], [1.701264078E12, 2.0], [1.701264246E12, 9.0], [1.70126425E12, 2.0], [1.701264119E12, 9.0], [1.701264205E12, 1.0], [1.701264127E12, 10.0], [1.701264123E12, 10.0], [1.701264209E12, 1.0], [1.701264082E12, 3.0], [1.701264111E12, 13.0], [1.701264197E12, 1.0], [1.701264107E12, 12.0], [1.701264193E12, 1.0], [1.701264115E12, 10.0], [1.701264242E12, 2.0], [1.70126416E12, 3.0], [1.701264156E12, 11.0], [1.701264099E12, 6.0], [1.701264144E12, 2.0], [1.701264267E12, 2.0], [1.70126414E12, 5.0], [1.701264226E12, 12.0], [1.70126423E12, 1.0], [1.701264234E12, 2.0], [1.701264103E12, 9.0], [1.701264132E12, 9.0], [1.701264218E12, 1.0], [1.701264087E12, 5.0], [1.701264173E12, 4.0], [1.701264259E12, 6.0], [1.701264095E12, 7.0], [1.701264181E12, 8.0], [1.701264091E12, 4.0], [1.701264177E12, 1.0], [1.701264136E12, 12.0], [1.70126429E12, 2.0], [1.701264122E12, 8.0], [1.701264208E12, 2.0], [1.701264118E12, 8.0], [1.701264077E12, 3.0], [1.701264126E12, 5.0], [1.701264085E12, 6.0], [1.701264081E12, 3.0], [1.70126411E12, 6.0], [1.701264237E12, 1.0], [1.701264196E12, 7.0], [1.701264073E12, 1.0], [1.701264159E12, 7.0], [1.701264241E12, 3.0], [1.701264155E12, 6.0], [1.701264245E12, 3.0], [1.701264114E12, 13.0], [1.701264139E12, 8.0], [1.701264229E12, 6.0], [1.701264225E12, 4.0], [1.701264098E12, 8.0], [1.701264147E12, 2.0], [1.701264106E12, 11.0], [1.701264102E12, 5.0], [1.701264233E12, 1.0], [1.701264131E12, 12.0], [1.701264258E12, 1.0], [1.70126409E12, 2.0], [1.701264176E12, 4.0], [1.701264086E12, 3.0], [1.701264172E12, 2.0], [1.701264094E12, 7.0], [1.701264266E12, 4.0], [1.701264135E12, 9.0], [1.701264221E12, 5.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.701264206E12, 1.0], [1.70126429E12, 1.0], [1.70126425E12, 2.0], [1.701264249E12, 1.0], [1.701264291E12, 8.0], [1.701264253E12, 2.0], [1.701264169E12, 1.0], [1.701264212E12, 5.0], [1.701264295E12, 13.0], [1.701264256E12, 1.0], [1.701264255E12, 4.0], [1.701264167E12, 1.0], [1.70126421E12, 1.0], [1.701264168E12, 2.0], [1.701264254E12, 2.0], [1.70126415E12, 4.0], [1.70126424E12, 3.0], [1.701264239E12, 7.0], [1.701264238E12, 4.0], [1.701264242E12, 14.0], [1.701264202E12, 1.0], [1.701264241E12, 5.0], [1.701264199E12, 3.0], [1.701264243E12, 2.0], [1.701264142E12, 1.0], [1.701264185E12, 9.0], [1.701264267E12, 8.0], [1.701264182E12, 9.0], [1.701264272E12, 1.0], [1.70126414E12, 4.0], [1.701264183E12, 3.0], [1.70126427E12, 2.0], [1.701264191E12, 1.0], [1.701264175E12, 1.0], [1.701264176E12, 1.0], [1.701264171E12, 3.0], [1.701264173E12, 4.0], [1.701264179E12, 7.0], [1.70126418E12, 6.0], [1.701264263E12, 2.0], [1.701264181E12, 7.0], [1.701264262E12, 20.0], [1.701264177E12, 2.0], [1.701264178E12, 7.0]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.701264295E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

