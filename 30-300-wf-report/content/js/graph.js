/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 45.0, "minX": 0.0, "maxY": 60044.0, "series": [{"data": [[0.0, 45.0], [0.1, 47.0], [0.2, 395.0], [0.3, 423.0], [0.4, 433.0], [0.5, 435.0], [0.6, 439.0], [0.7, 445.0], [0.8, 448.0], [0.9, 459.0], [1.0, 460.0], [1.1, 470.0], [1.2, 472.0], [1.3, 476.0], [1.4, 478.0], [1.5, 480.0], [1.6, 482.0], [1.7, 483.0], [1.8, 483.0], [1.9, 487.0], [2.0, 490.0], [2.1, 490.0], [2.2, 495.0], [2.3, 498.0], [2.4, 500.0], [2.5, 504.0], [2.6, 505.0], [2.7, 505.0], [2.8, 505.0], [2.9, 505.0], [3.0, 506.0], [3.1, 508.0], [3.2, 512.0], [3.3, 518.0], [3.4, 519.0], [3.5, 520.0], [3.6, 522.0], [3.7, 523.0], [3.8, 525.0], [3.9, 525.0], [4.0, 528.0], [4.1, 529.0], [4.2, 532.0], [4.3, 534.0], [4.4, 535.0], [4.5, 539.0], [4.6, 540.0], [4.7, 541.0], [4.8, 543.0], [4.9, 547.0], [5.0, 548.0], [5.1, 552.0], [5.2, 555.0], [5.3, 555.0], [5.4, 559.0], [5.5, 559.0], [5.6, 562.0], [5.7, 570.0], [5.8, 573.0], [5.9, 574.0], [6.0, 577.0], [6.1, 578.0], [6.2, 582.0], [6.3, 587.0], [6.4, 588.0], [6.5, 592.0], [6.6, 593.0], [6.7, 594.0], [6.8, 596.0], [6.9, 598.0], [7.0, 598.0], [7.1, 601.0], [7.2, 605.0], [7.3, 606.0], [7.4, 607.0], [7.5, 608.0], [7.6, 611.0], [7.7, 613.0], [7.8, 615.0], [7.9, 616.0], [8.0, 620.0], [8.1, 621.0], [8.2, 622.0], [8.3, 624.0], [8.4, 628.0], [8.5, 632.0], [8.6, 633.0], [8.7, 633.0], [8.8, 635.0], [8.9, 637.0], [9.0, 639.0], [9.1, 642.0], [9.2, 644.0], [9.3, 645.0], [9.4, 648.0], [9.5, 652.0], [9.6, 652.0], [9.7, 653.0], [9.8, 657.0], [9.9, 658.0], [10.0, 660.0], [10.1, 661.0], [10.2, 664.0], [10.3, 666.0], [10.4, 666.0], [10.5, 666.0], [10.6, 668.0], [10.7, 669.0], [10.8, 674.0], [10.9, 676.0], [11.0, 676.0], [11.1, 677.0], [11.2, 680.0], [11.3, 681.0], [11.4, 684.0], [11.5, 685.0], [11.6, 686.0], [11.7, 689.0], [11.8, 692.0], [11.9, 692.0], [12.0, 693.0], [12.1, 695.0], [12.2, 698.0], [12.3, 701.0], [12.4, 704.0], [12.5, 708.0], [12.6, 712.0], [12.7, 715.0], [12.8, 715.0], [12.9, 715.0], [13.0, 716.0], [13.1, 719.0], [13.2, 719.0], [13.3, 721.0], [13.4, 722.0], [13.5, 724.0], [13.6, 724.0], [13.7, 725.0], [13.8, 729.0], [13.9, 731.0], [14.0, 733.0], [14.1, 737.0], [14.2, 745.0], [14.3, 750.0], [14.4, 753.0], [14.5, 754.0], [14.6, 760.0], [14.7, 761.0], [14.8, 762.0], [14.9, 763.0], [15.0, 768.0], [15.1, 768.0], [15.2, 771.0], [15.3, 777.0], [15.4, 778.0], [15.5, 779.0], [15.6, 785.0], [15.7, 786.0], [15.8, 788.0], [15.9, 788.0], [16.0, 793.0], [16.1, 799.0], [16.2, 800.0], [16.3, 802.0], [16.4, 807.0], [16.5, 808.0], [16.6, 811.0], [16.7, 815.0], [16.8, 817.0], [16.9, 818.0], [17.0, 819.0], [17.1, 821.0], [17.2, 823.0], [17.3, 826.0], [17.4, 827.0], [17.5, 828.0], [17.6, 831.0], [17.7, 831.0], [17.8, 833.0], [17.9, 834.0], [18.0, 836.0], [18.1, 839.0], [18.2, 842.0], [18.3, 844.0], [18.4, 847.0], [18.5, 849.0], [18.6, 854.0], [18.7, 855.0], [18.8, 855.0], [18.9, 860.0], [19.0, 862.0], [19.1, 863.0], [19.2, 865.0], [19.3, 873.0], [19.4, 873.0], [19.5, 876.0], [19.6, 877.0], [19.7, 878.0], [19.8, 879.0], [19.9, 881.0], [20.0, 882.0], [20.1, 883.0], [20.2, 884.0], [20.3, 884.0], [20.4, 886.0], [20.5, 893.0], [20.6, 893.0], [20.7, 896.0], [20.8, 901.0], [20.9, 902.0], [21.0, 903.0], [21.1, 906.0], [21.2, 909.0], [21.3, 911.0], [21.4, 911.0], [21.5, 912.0], [21.6, 916.0], [21.7, 918.0], [21.8, 922.0], [21.9, 924.0], [22.0, 925.0], [22.1, 931.0], [22.2, 933.0], [22.3, 942.0], [22.4, 949.0], [22.5, 952.0], [22.6, 953.0], [22.7, 954.0], [22.8, 957.0], [22.9, 961.0], [23.0, 963.0], [23.1, 966.0], [23.2, 968.0], [23.3, 969.0], [23.4, 973.0], [23.5, 976.0], [23.6, 982.0], [23.7, 984.0], [23.8, 985.0], [23.9, 987.0], [24.0, 996.0], [24.1, 999.0], [24.2, 1002.0], [24.3, 1003.0], [24.4, 1004.0], [24.5, 1007.0], [24.6, 1009.0], [24.7, 1011.0], [24.8, 1013.0], [24.9, 1014.0], [25.0, 1015.0], [25.1, 1019.0], [25.2, 1020.0], [25.3, 1021.0], [25.4, 1023.0], [25.5, 1024.0], [25.6, 1025.0], [25.7, 1027.0], [25.8, 1027.0], [25.9, 1031.0], [26.0, 1031.0], [26.1, 1036.0], [26.2, 1037.0], [26.3, 1041.0], [26.4, 1046.0], [26.5, 1050.0], [26.6, 1051.0], [26.7, 1052.0], [26.8, 1061.0], [26.9, 1063.0], [27.0, 1070.0], [27.1, 1073.0], [27.2, 1073.0], [27.3, 1075.0], [27.4, 1077.0], [27.5, 1079.0], [27.6, 1080.0], [27.7, 1091.0], [27.8, 1092.0], [27.9, 1093.0], [28.0, 1094.0], [28.1, 1095.0], [28.2, 1099.0], [28.3, 1112.0], [28.4, 1114.0], [28.5, 1118.0], [28.6, 1121.0], [28.7, 1127.0], [28.8, 1128.0], [28.9, 1130.0], [29.0, 1131.0], [29.1, 1132.0], [29.2, 1136.0], [29.3, 1139.0], [29.4, 1141.0], [29.5, 1142.0], [29.6, 1144.0], [29.7, 1145.0], [29.8, 1145.0], [29.9, 1153.0], [30.0, 1154.0], [30.1, 1156.0], [30.2, 1163.0], [30.3, 1165.0], [30.4, 1169.0], [30.5, 1177.0], [30.6, 1182.0], [30.7, 1184.0], [30.8, 1185.0], [30.9, 1187.0], [31.0, 1194.0], [31.1, 1195.0], [31.2, 1198.0], [31.3, 1199.0], [31.4, 1201.0], [31.5, 1202.0], [31.6, 1205.0], [31.7, 1206.0], [31.8, 1207.0], [31.9, 1212.0], [32.0, 1214.0], [32.1, 1218.0], [32.2, 1220.0], [32.3, 1222.0], [32.4, 1223.0], [32.5, 1226.0], [32.6, 1231.0], [32.7, 1233.0], [32.8, 1239.0], [32.9, 1244.0], [33.0, 1244.0], [33.1, 1250.0], [33.2, 1253.0], [33.3, 1254.0], [33.4, 1257.0], [33.5, 1268.0], [33.6, 1270.0], [33.7, 1280.0], [33.8, 1283.0], [33.9, 1287.0], [34.0, 1288.0], [34.1, 1290.0], [34.2, 1294.0], [34.3, 1295.0], [34.4, 1295.0], [34.5, 1302.0], [34.6, 1308.0], [34.7, 1309.0], [34.8, 1311.0], [34.9, 1315.0], [35.0, 1315.0], [35.1, 1320.0], [35.2, 1323.0], [35.3, 1323.0], [35.4, 1326.0], [35.5, 1329.0], [35.6, 1329.0], [35.7, 1329.0], [35.8, 1333.0], [35.9, 1337.0], [36.0, 1341.0], [36.1, 1341.0], [36.2, 1341.0], [36.3, 1348.0], [36.4, 1349.0], [36.5, 1351.0], [36.6, 1353.0], [36.7, 1362.0], [36.8, 1364.0], [36.9, 1370.0], [37.0, 1372.0], [37.1, 1377.0], [37.2, 1380.0], [37.3, 1380.0], [37.4, 1382.0], [37.5, 1386.0], [37.6, 1386.0], [37.7, 1388.0], [37.8, 1391.0], [37.9, 1391.0], [38.0, 1396.0], [38.1, 1397.0], [38.2, 1397.0], [38.3, 1399.0], [38.4, 1401.0], [38.5, 1404.0], [38.6, 1406.0], [38.7, 1411.0], [38.8, 1412.0], [38.9, 1415.0], [39.0, 1415.0], [39.1, 1416.0], [39.2, 1416.0], [39.3, 1420.0], [39.4, 1421.0], [39.5, 1429.0], [39.6, 1429.0], [39.7, 1430.0], [39.8, 1434.0], [39.9, 1434.0], [40.0, 1436.0], [40.1, 1440.0], [40.2, 1441.0], [40.3, 1442.0], [40.4, 1448.0], [40.5, 1450.0], [40.6, 1459.0], [40.7, 1463.0], [40.8, 1464.0], [40.9, 1471.0], [41.0, 1473.0], [41.1, 1477.0], [41.2, 1478.0], [41.3, 1483.0], [41.4, 1483.0], [41.5, 1488.0], [41.6, 1492.0], [41.7, 1492.0], [41.8, 1495.0], [41.9, 1498.0], [42.0, 1499.0], [42.1, 1501.0], [42.2, 1502.0], [42.3, 1505.0], [42.4, 1511.0], [42.5, 1511.0], [42.6, 1514.0], [42.7, 1520.0], [42.8, 1523.0], [42.9, 1527.0], [43.0, 1532.0], [43.1, 1535.0], [43.2, 1550.0], [43.3, 1552.0], [43.4, 1553.0], [43.5, 1558.0], [43.6, 1565.0], [43.7, 1568.0], [43.8, 1576.0], [43.9, 1579.0], [44.0, 1580.0], [44.1, 1589.0], [44.2, 1592.0], [44.3, 1596.0], [44.4, 1602.0], [44.5, 1605.0], [44.6, 1606.0], [44.7, 1612.0], [44.8, 1613.0], [44.9, 1613.0], [45.0, 1640.0], [45.1, 1640.0], [45.2, 1646.0], [45.3, 1663.0], [45.4, 1668.0], [45.5, 1671.0], [45.6, 1681.0], [45.7, 1683.0], [45.8, 1691.0], [45.9, 1691.0], [46.0, 1693.0], [46.1, 1698.0], [46.2, 1699.0], [46.3, 1699.0], [46.4, 1701.0], [46.5, 1702.0], [46.6, 1705.0], [46.7, 1708.0], [46.8, 1721.0], [46.9, 1742.0], [47.0, 1770.0], [47.1, 1772.0], [47.2, 1776.0], [47.3, 1778.0], [47.4, 1781.0], [47.5, 1785.0], [47.6, 1788.0], [47.7, 1789.0], [47.8, 1797.0], [47.9, 1798.0], [48.0, 1801.0], [48.1, 1807.0], [48.2, 1809.0], [48.3, 1811.0], [48.4, 1815.0], [48.5, 1823.0], [48.6, 1827.0], [48.7, 1865.0], [48.8, 1869.0], [48.9, 1870.0], [49.0, 1895.0], [49.1, 1901.0], [49.2, 1904.0], [49.3, 1909.0], [49.4, 1921.0], [49.5, 1945.0], [49.6, 1953.0], [49.7, 1975.0], [49.8, 1987.0], [49.9, 1990.0], [50.0, 1992.0], [50.1, 1994.0], [50.2, 2003.0], [50.3, 2004.0], [50.4, 2031.0], [50.5, 2049.0], [50.6, 2051.0], [50.7, 2070.0], [50.8, 2080.0], [50.9, 2080.0], [51.0, 2083.0], [51.1, 2086.0], [51.2, 2088.0], [51.3, 2102.0], [51.4, 2106.0], [51.5, 2117.0], [51.6, 2130.0], [51.7, 2152.0], [51.8, 2152.0], [51.9, 2180.0], [52.0, 2186.0], [52.1, 2187.0], [52.2, 2191.0], [52.3, 2204.0], [52.4, 2207.0], [52.5, 2208.0], [52.6, 2234.0], [52.7, 2254.0], [52.8, 2274.0], [52.9, 2293.0], [53.0, 2308.0], [53.1, 2326.0], [53.2, 2393.0], [53.3, 2434.0], [53.4, 2503.0], [53.5, 2515.0], [53.6, 2553.0], [53.7, 2598.0], [53.8, 2606.0], [53.9, 2628.0], [54.0, 2669.0], [54.1, 2680.0], [54.2, 2699.0], [54.3, 2721.0], [54.4, 2741.0], [54.5, 2797.0], [54.6, 2800.0], [54.7, 2807.0], [54.8, 2874.0], [54.9, 2888.0], [55.0, 2890.0], [55.1, 2908.0], [55.2, 2923.0], [55.3, 2924.0], [55.4, 3003.0], [55.5, 3032.0], [55.6, 3048.0], [55.7, 3142.0], [55.8, 3166.0], [55.9, 3184.0], [56.0, 3226.0], [56.1, 3275.0], [56.2, 3293.0], [56.3, 3371.0], [56.4, 3388.0], [56.5, 3402.0], [56.6, 3403.0], [56.7, 3405.0], [56.8, 3413.0], [56.9, 3447.0], [57.0, 3472.0], [57.1, 3487.0], [57.2, 3489.0], [57.3, 3500.0], [57.4, 3507.0], [57.5, 3521.0], [57.6, 3522.0], [57.7, 3542.0], [57.8, 3587.0], [57.9, 3590.0], [58.0, 3602.0], [58.1, 3604.0], [58.2, 3629.0], [58.3, 3636.0], [58.4, 3652.0], [58.5, 3664.0], [58.6, 3689.0], [58.7, 3692.0], [58.8, 3700.0], [58.9, 3751.0], [59.0, 3757.0], [59.1, 3765.0], [59.2, 3767.0], [59.3, 3782.0], [59.4, 3800.0], [59.5, 3838.0], [59.6, 3842.0], [59.7, 3882.0], [59.8, 3901.0], [59.9, 3964.0], [60.0, 4010.0], [60.1, 4074.0], [60.2, 4099.0], [60.3, 4402.0], [60.4, 4434.0], [60.5, 4436.0], [60.6, 4532.0], [60.7, 4657.0], [60.8, 4699.0], [60.9, 4768.0], [61.0, 4769.0], [61.1, 4820.0], [61.2, 4924.0], [61.3, 4938.0], [61.4, 5015.0], [61.5, 5081.0], [61.6, 5093.0], [61.7, 5108.0], [61.8, 5270.0], [61.9, 5288.0], [62.0, 5367.0], [62.1, 5376.0], [62.2, 5748.0], [62.3, 6064.0], [62.4, 6162.0], [62.5, 6212.0], [62.6, 6250.0], [62.7, 6325.0], [62.8, 6439.0], [62.9, 6893.0], [63.0, 7013.0], [63.1, 7031.0], [63.2, 7073.0], [63.3, 7097.0], [63.4, 7490.0], [63.5, 7512.0], [63.6, 7516.0], [63.7, 7561.0], [63.8, 7595.0], [63.9, 7597.0], [64.0, 7600.0], [64.1, 7636.0], [64.2, 7682.0], [64.3, 7697.0], [64.4, 7706.0], [64.5, 7712.0], [64.6, 7883.0], [64.7, 8006.0], [64.8, 8040.0], [64.9, 8139.0], [65.0, 8141.0], [65.1, 8143.0], [65.2, 8194.0], [65.3, 8210.0], [65.4, 8211.0], [65.5, 8256.0], [65.6, 8260.0], [65.7, 8266.0], [65.8, 8274.0], [65.9, 8280.0], [66.0, 8316.0], [66.1, 8377.0], [66.2, 8383.0], [66.3, 8401.0], [66.4, 8414.0], [66.5, 8415.0], [66.6, 8452.0], [66.7, 8500.0], [66.8, 8502.0], [66.9, 8595.0], [67.0, 8723.0], [67.1, 8768.0], [67.2, 8791.0], [67.3, 8816.0], [67.4, 8843.0], [67.5, 8890.0], [67.6, 8915.0], [67.7, 8979.0], [67.8, 9057.0], [67.9, 9106.0], [68.0, 9146.0], [68.1, 9162.0], [68.2, 9195.0], [68.3, 9230.0], [68.4, 9330.0], [68.5, 9347.0], [68.6, 9758.0], [68.7, 10687.0], [68.8, 10704.0], [68.9, 10803.0], [69.0, 10817.0], [69.1, 10899.0], [69.2, 11093.0], [69.3, 11945.0], [69.4, 11996.0], [69.5, 12246.0], [69.6, 12609.0], [69.7, 12694.0], [69.8, 12792.0], [69.9, 13206.0], [70.0, 13406.0], [70.1, 13770.0], [70.2, 13912.0], [70.3, 13947.0], [70.4, 14093.0], [70.5, 14689.0], [70.6, 14713.0], [70.7, 14793.0], [70.8, 14886.0], [70.9, 15002.0], [71.0, 15050.0], [71.1, 15051.0], [71.2, 15110.0], [71.3, 15114.0], [71.4, 15152.0], [71.5, 15299.0], [71.6, 15328.0], [71.7, 15377.0], [71.8, 15609.0], [71.9, 15650.0], [72.0, 15656.0], [72.1, 15688.0], [72.2, 15700.0], [72.3, 15700.0], [72.4, 15785.0], [72.5, 15792.0], [72.6, 15799.0], [72.7, 15830.0], [72.8, 15887.0], [72.9, 15908.0], [73.0, 16008.0], [73.1, 16098.0], [73.2, 16132.0], [73.3, 16163.0], [73.4, 16246.0], [73.5, 16324.0], [73.6, 16374.0], [73.7, 16425.0], [73.8, 16433.0], [73.9, 16503.0], [74.0, 16505.0], [74.1, 16511.0], [74.2, 16539.0], [74.3, 16574.0], [74.4, 16601.0], [74.5, 16638.0], [74.6, 16688.0], [74.7, 16793.0], [74.8, 17019.0], [74.9, 17073.0], [75.0, 17178.0], [75.1, 17302.0], [75.2, 17389.0], [75.3, 17817.0], [75.4, 17974.0], [75.5, 18003.0], [75.6, 18167.0], [75.7, 18205.0], [75.8, 18205.0], [75.9, 18286.0], [76.0, 18307.0], [76.1, 18338.0], [76.2, 18374.0], [76.3, 18393.0], [76.4, 18393.0], [76.5, 18487.0], [76.6, 18492.0], [76.7, 18538.0], [76.8, 18598.0], [76.9, 18679.0], [77.0, 19574.0], [77.1, 19852.0], [77.2, 20107.0], [77.3, 20340.0], [77.4, 20468.0], [77.5, 20493.0], [77.6, 20695.0], [77.7, 20702.0], [77.8, 20704.0], [77.9, 20712.0], [78.0, 20799.0], [78.1, 20827.0], [78.2, 20861.0], [78.3, 20887.0], [78.4, 20890.0], [78.5, 20893.0], [78.6, 20907.0], [78.7, 20913.0], [78.8, 20988.0], [78.9, 21007.0], [79.0, 21097.0], [79.1, 21148.0], [79.2, 21196.0], [79.3, 21207.0], [79.4, 21242.0], [79.5, 21244.0], [79.6, 21293.0], [79.7, 21303.0], [79.8, 21305.0], [79.9, 21311.0], [80.0, 21440.0], [80.1, 21496.0], [80.2, 21512.0], [80.3, 21521.0], [80.4, 21588.0], [80.5, 21615.0], [80.6, 21689.0], [80.7, 21698.0], [80.8, 21822.0], [80.9, 21895.0], [81.0, 21906.0], [81.1, 21935.0], [81.2, 21985.0], [81.3, 22047.0], [81.4, 22107.0], [81.5, 22174.0], [81.6, 22201.0], [81.7, 22228.0], [81.8, 22240.0], [81.9, 22296.0], [82.0, 22321.0], [82.1, 22345.0], [82.2, 22368.0], [82.3, 22382.0], [82.4, 22388.0], [82.5, 22407.0], [82.6, 22426.0], [82.7, 22430.0], [82.8, 22461.0], [82.9, 22490.0], [83.0, 22502.0], [83.1, 22546.0], [83.2, 22555.0], [83.3, 22568.0], [83.4, 22597.0], [83.5, 22604.0], [83.6, 22604.0], [83.7, 22604.0], [83.8, 22645.0], [83.9, 22649.0], [84.0, 22676.0], [84.1, 22686.0], [84.2, 22690.0], [84.3, 22695.0], [84.4, 22698.0], [84.5, 22707.0], [84.6, 22724.0], [84.7, 22725.0], [84.8, 22733.0], [84.9, 22758.0], [85.0, 22766.0], [85.1, 22789.0], [85.2, 22791.0], [85.3, 22794.0], [85.4, 22810.0], [85.5, 22833.0], [85.6, 22891.0], [85.7, 22937.0], [85.8, 23086.0], [85.9, 23143.0], [86.0, 26398.0], [86.1, 32144.0], [86.2, 32244.0], [86.3, 32438.0], [86.4, 32697.0], [86.5, 32769.0], [86.6, 33861.0], [86.7, 34162.0], [86.8, 34173.0], [86.9, 34331.0], [87.0, 34569.0], [87.1, 34899.0], [87.2, 34917.0], [87.3, 35206.0], [87.4, 35258.0], [87.5, 35577.0], [87.6, 36263.0], [87.7, 36421.0], [87.8, 36617.0], [87.9, 36625.0], [88.0, 37252.0], [88.1, 38281.0], [88.2, 38600.0], [88.3, 39404.0], [88.4, 39842.0], [88.5, 40141.0], [88.6, 40276.0], [88.7, 40477.0], [88.8, 40943.0], [88.9, 41132.0], [89.0, 42365.0], [89.1, 42494.0], [89.2, 42649.0], [89.3, 42931.0], [89.4, 42935.0], [89.5, 43434.0], [89.6, 43934.0], [89.7, 44730.0], [89.8, 45072.0], [89.9, 45464.0], [90.0, 45498.0], [90.1, 45586.0], [90.2, 45601.0], [90.3, 45634.0], [90.4, 45770.0], [90.5, 45837.0], [90.6, 46006.0], [90.7, 46387.0], [90.8, 47331.0], [90.9, 47805.0], [91.0, 48313.0], [91.1, 49712.0], [91.2, 49801.0], [91.3, 49990.0], [91.4, 50198.0], [91.5, 50856.0], [91.6, 52214.0], [91.7, 52341.0], [91.8, 55471.0], [91.9, 58449.0], [92.0, 58836.0], [92.1, 60022.0], [92.2, 60023.0], [92.3, 60023.0], [92.4, 60023.0], [92.5, 60023.0], [92.6, 60023.0], [92.7, 60024.0], [92.8, 60024.0], [92.9, 60024.0], [93.0, 60024.0], [93.1, 60024.0], [93.2, 60024.0], [93.3, 60024.0], [93.4, 60024.0], [93.5, 60024.0], [93.6, 60024.0], [93.7, 60024.0], [93.8, 60024.0], [93.9, 60024.0], [94.0, 60024.0], [94.1, 60024.0], [94.2, 60024.0], [94.3, 60024.0], [94.4, 60024.0], [94.5, 60024.0], [94.6, 60024.0], [94.7, 60024.0], [94.8, 60024.0], [94.9, 60024.0], [95.0, 60024.0], [95.1, 60024.0], [95.2, 60025.0], [95.3, 60025.0], [95.4, 60025.0], [95.5, 60025.0], [95.6, 60025.0], [95.7, 60025.0], [95.8, 60025.0], [95.9, 60025.0], [96.0, 60025.0], [96.1, 60025.0], [96.2, 60025.0], [96.3, 60025.0], [96.4, 60025.0], [96.5, 60025.0], [96.6, 60025.0], [96.7, 60025.0], [96.8, 60025.0], [96.9, 60025.0], [97.0, 60025.0], [97.1, 60025.0], [97.2, 60025.0], [97.3, 60025.0], [97.4, 60026.0], [97.5, 60026.0], [97.6, 60026.0], [97.7, 60026.0], [97.8, 60026.0], [97.9, 60026.0], [98.0, 60026.0], [98.1, 60026.0], [98.2, 60026.0], [98.3, 60026.0], [98.4, 60026.0], [98.5, 60026.0], [98.6, 60026.0], [98.7, 60026.0], [98.8, 60026.0], [98.9, 60026.0], [99.0, 60026.0], [99.1, 60026.0], [99.2, 60026.0], [99.3, 60026.0], [99.4, 60027.0], [99.5, 60027.0], [99.6, 60027.0], [99.7, 60029.0], [99.8, 60030.0], [99.9, 60044.0], [100.0, 60044.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 132.0, "series": [{"data": [[0.0, 3.0], [33700.0, 1.0], [34500.0, 1.0], [34100.0, 2.0], [36500.0, 1.0], [34900.0, 2.0], [40100.0, 1.0], [40900.0, 1.0], [39700.0, 1.0], [42900.0, 2.0], [42500.0, 1.0], [45700.0, 1.0], [47300.0, 1.0], [48100.0, 1.0], [47700.0, 1.0], [49700.0, 2.0], [50100.0, 1.0], [300.0, 1.0], [400.0, 35.0], [500.0, 77.0], [600.0, 86.0], [700.0, 65.0], [800.0, 77.0], [900.0, 55.0], [1000.0, 68.0], [1100.0, 51.0], [1200.0, 51.0], [1300.0, 65.0], [1400.0, 61.0], [1500.0, 38.0], [1600.0, 34.0], [1700.0, 26.0], [1800.0, 19.0], [1900.0, 17.0], [2000.0, 19.0], [2100.0, 17.0], [2200.0, 10.0], [2300.0, 5.0], [2400.0, 3.0], [2500.0, 6.0], [2600.0, 8.0], [2700.0, 5.0], [2800.0, 9.0], [2900.0, 5.0], [3000.0, 4.0], [3100.0, 5.0], [3200.0, 5.0], [3300.0, 3.0], [3400.0, 14.0], [3500.0, 12.0], [3700.0, 10.0], [3600.0, 13.0], [3800.0, 7.0], [3900.0, 3.0], [4000.0, 4.0], [4300.0, 1.0], [4600.0, 3.0], [4400.0, 5.0], [4500.0, 1.0], [4700.0, 4.0], [4800.0, 2.0], [5000.0, 5.0], [4900.0, 2.0], [5100.0, 2.0], [5200.0, 3.0], [5300.0, 4.0], [5700.0, 1.0], [6000.0, 1.0], [6100.0, 2.0], [5900.0, 1.0], [6200.0, 4.0], [6300.0, 1.0], [6400.0, 1.0], [6900.0, 1.0], [6800.0, 1.0], [6700.0, 1.0], [7100.0, 1.0], [7000.0, 5.0], [7400.0, 1.0], [7600.0, 6.0], [7500.0, 9.0], [7700.0, 4.0], [7900.0, 1.0], [7800.0, 1.0], [8000.0, 3.0], [8100.0, 7.0], [8500.0, 4.0], [8300.0, 6.0], [8200.0, 10.0], [8400.0, 7.0], [8700.0, 5.0], [8800.0, 6.0], [8900.0, 2.0], [9100.0, 6.0], [9200.0, 2.0], [9000.0, 3.0], [9700.0, 2.0], [9300.0, 2.0], [10000.0, 1.0], [10700.0, 2.0], [10600.0, 1.0], [10800.0, 4.0], [11000.0, 2.0], [11100.0, 1.0], [11900.0, 2.0], [12200.0, 1.0], [12100.0, 1.0], [12600.0, 2.0], [12300.0, 1.0], [12700.0, 2.0], [13200.0, 1.0], [12800.0, 1.0], [13800.0, 1.0], [13700.0, 2.0], [13400.0, 1.0], [14000.0, 2.0], [14100.0, 1.0], [13900.0, 2.0], [14800.0, 2.0], [14600.0, 1.0], [14700.0, 3.0], [15000.0, 5.0], [15100.0, 5.0], [15200.0, 1.0], [15300.0, 3.0], [15800.0, 4.0], [15600.0, 7.0], [15700.0, 7.0], [15400.0, 1.0], [16000.0, 3.0], [16200.0, 1.0], [16300.0, 3.0], [16100.0, 4.0], [15900.0, 2.0], [16600.0, 5.0], [17200.0, 1.0], [17000.0, 3.0], [16400.0, 4.0], [16800.0, 1.0], [18000.0, 1.0], [18200.0, 4.0], [18400.0, 3.0], [17800.0, 1.0], [18600.0, 1.0], [19600.0, 1.0], [19800.0, 1.0], [20400.0, 3.0], [20800.0, 9.0], [21200.0, 6.0], [21400.0, 3.0], [20600.0, 1.0], [21000.0, 2.0], [21600.0, 5.0], [21800.0, 3.0], [22000.0, 2.0], [22200.0, 6.0], [22400.0, 8.0], [22800.0, 5.0], [22600.0, 16.0], [23000.0, 1.0], [24200.0, 1.0], [32600.0, 2.0], [32400.0, 1.0], [32200.0, 2.0], [34800.0, 2.0], [34000.0, 1.0], [36400.0, 1.0], [35200.0, 3.0], [37200.0, 2.0], [40400.0, 1.0], [42400.0, 1.0], [42000.0, 1.0], [44000.0, 1.0], [44800.0, 1.0], [43200.0, 1.0], [45600.0, 4.0], [46000.0, 1.0], [50800.0, 1.0], [54800.0, 1.0], [55600.0, 1.0], [58800.0, 1.0], [58400.0, 1.0], [60000.0, 132.0], [34300.0, 1.0], [36300.0, 1.0], [35500.0, 1.0], [38700.0, 1.0], [40300.0, 1.0], [42300.0, 1.0], [42700.0, 1.0], [41100.0, 2.0], [43900.0, 1.0], [44700.0, 1.0], [46300.0, 1.0], [45500.0, 2.0], [45900.0, 1.0], [48300.0, 1.0], [51100.0, 1.0], [49900.0, 2.0], [52300.0, 1.0], [17300.0, 2.0], [17100.0, 1.0], [16500.0, 8.0], [16700.0, 1.0], [17900.0, 2.0], [18100.0, 3.0], [18300.0, 8.0], [17500.0, 1.0], [18500.0, 4.0], [19100.0, 1.0], [19500.0, 1.0], [20100.0, 2.0], [20300.0, 1.0], [20700.0, 7.0], [20900.0, 5.0], [21100.0, 4.0], [21300.0, 5.0], [21500.0, 5.0], [20500.0, 1.0], [22300.0, 9.0], [21900.0, 5.0], [22100.0, 3.0], [22500.0, 8.0], [21700.0, 1.0], [22700.0, 15.0], [23100.0, 1.0], [22900.0, 3.0], [26300.0, 1.0], [29500.0, 1.0], [32700.0, 1.0], [32100.0, 1.0], [34200.0, 1.0], [33800.0, 1.0], [36600.0, 2.0], [36200.0, 1.0], [35400.0, 1.0], [37400.0, 1.0], [38600.0, 1.0], [38200.0, 1.0], [40200.0, 2.0], [39800.0, 1.0], [39400.0, 1.0], [42600.0, 1.0], [45000.0, 1.0], [43400.0, 1.0], [45400.0, 3.0], [46200.0, 1.0], [45800.0, 1.0], [47800.0, 1.0], [49800.0, 1.0], [50200.0, 1.0], [52200.0, 1.0], [55400.0, 1.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 60000.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 37.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 769.0, "series": [{"data": [[0.0, 37.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 656.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 769.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 192.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.5, "minX": 1.701270925E12, "maxY": 100.0, "series": [{"data": [[1.701270953E12, 100.0], [1.701271166E12, 100.0], [1.701271125E12, 100.0], [1.701271035E12, 100.0], [1.701270994E12, 100.0], [1.701271207E12, 100.0], [1.701271076E12, 100.0], [1.701270945E12, 100.0], [1.701271158E12, 100.0], [1.701271117E12, 100.0], [1.701271027E12, 100.0], [1.701270986E12, 100.0], [1.701271199E12, 100.0], [1.701271068E12, 100.0], [1.701270937E12, 100.0], [1.701271019E12, 100.0], [1.701270978E12, 100.0], [1.701271191E12, 100.0], [1.70127106E12, 100.0], [1.701271232E12, 81.0], [1.701270929E12, 100.0], [1.701271142E12, 100.0], [1.701271101E12, 100.0], [1.701271011E12, 100.0], [1.70127097E12, 100.0], [1.701271052E12, 100.0], [1.701271224E12, 100.0], [1.701271134E12, 100.0], [1.701271093E12, 100.0], [1.701271003E12, 100.0], [1.701270962E12, 100.0], [1.701271044E12, 100.0], [1.701271216E12, 100.0], [1.701271126E12, 100.0], [1.701271085E12, 100.0], [1.701271124E12, 100.0], [1.701270993E12, 100.0], [1.701271206E12, 100.0], [1.701270952E12, 100.0], [1.701271165E12, 100.0], [1.701271075E12, 100.0], [1.701271034E12, 100.0], [1.701271116E12, 100.0], [1.701270985E12, 100.0], [1.701271198E12, 100.0], [1.701270944E12, 100.0], [1.701271157E12, 100.0], [1.701271067E12, 100.0], [1.701271026E12, 100.0], [1.701271239E12, 5.5], [1.701271108E12, 100.0], [1.701270977E12, 100.0], [1.70127119E12, 100.0], [1.701270936E12, 100.0], [1.701271149E12, 100.0], [1.701271059E12, 100.0], [1.701271018E12, 100.0], [1.701271231E12, 88.5], [1.7012711E12, 100.0], [1.701270969E12, 100.0], [1.701271182E12, 100.0], [1.701270928E12, 100.0], [1.701271141E12, 100.0], [1.701271051E12, 100.0], [1.70127101E12, 100.0], [1.701271223E12, 100.0], [1.701271092E12, 100.0], [1.701270961E12, 100.0], [1.701271174E12, 100.0], [1.701271133E12, 100.0], [1.701271043E12, 100.0], [1.701271002E12, 100.0], [1.701271215E12, 100.0], [1.701271084E12, 100.0], [1.701271082E12, 100.0], [1.701271164E12, 100.0], [1.701270951E12, 100.0], [1.701271033E12, 100.0], [1.701270992E12, 100.0], [1.701271205E12, 100.0], [1.701271115E12, 100.0], [1.701271074E12, 100.0], [1.701271156E12, 100.0], [1.701270943E12, 100.0], [1.701271025E12, 100.0], [1.701271238E12, 16.5], [1.701270984E12, 100.0], [1.701271197E12, 100.0], [1.701271107E12, 100.0], [1.701271066E12, 100.0], [1.701271148E12, 100.0], [1.701270935E12, 100.0], [1.701271017E12, 100.0], [1.70127123E12, 94.5], [1.701270976E12, 100.0], [1.701271189E12, 100.0], [1.701271099E12, 100.0], [1.701271058E12, 100.0], [1.70127114E12, 100.0], [1.701270927E12, 100.0], [1.701271009E12, 100.0], [1.701271222E12, 100.0], [1.701270968E12, 100.0], [1.701271181E12, 100.0], [1.701271091E12, 100.0], [1.70127105E12, 100.0], [1.701271132E12, 100.0], [1.701271001E12, 100.0], [1.701271214E12, 100.0], [1.70127096E12, 100.0], [1.701271173E12, 100.0], [1.701271083E12, 100.0], [1.701271042E12, 100.0], [1.701271081E12, 100.0], [1.70127104E12, 100.0], [1.70127095E12, 100.0], [1.701271122E12, 100.0], [1.701271204E12, 100.0], [1.701270991E12, 100.0], [1.701271073E12, 100.0], [1.701271032E12, 100.0], [1.701270942E12, 100.0], [1.701271155E12, 100.0], [1.701271114E12, 100.0], [1.701271196E12, 100.0], [1.701270983E12, 100.0], [1.701271065E12, 100.0], [1.701271024E12, 100.0], [1.701271237E12, 34.05263157894737], [1.701270934E12, 100.0], [1.701271147E12, 100.0], [1.701271106E12, 100.0], [1.701270975E12, 100.0], [1.701271057E12, 100.0], [1.701271016E12, 100.0], [1.701271229E12, 96.0], [1.701270926E12, 100.0], [1.701271139E12, 100.0], [1.70127118E12, 100.0], [1.701270967E12, 100.0], [1.701271049E12, 100.0], [1.701271008E12, 100.0], [1.701271221E12, 100.0], [1.701271131E12, 100.0], [1.70127109E12, 100.0], [1.701271172E12, 100.0], [1.701270959E12, 100.0], [1.701271041E12, 100.0], [1.701271E12, 100.0], [1.701271213E12, 100.0], [1.701271039E12, 100.0], [1.701271121E12, 100.0], [1.70127099E12, 100.0], [1.701271203E12, 100.0], [1.701270949E12, 100.0], [1.701271162E12, 100.0], [1.701271031E12, 100.0], [1.701271113E12, 100.0], [1.701271072E12, 100.0], [1.701270982E12, 100.0], [1.701271195E12, 100.0], [1.701270941E12, 100.0], [1.701271154E12, 100.0], [1.701271236E12, 56.53846153846155], [1.701271023E12, 100.0], [1.701271105E12, 100.0], [1.701271064E12, 100.0], [1.701270974E12, 100.0], [1.701271187E12, 100.0], [1.701270933E12, 100.0], [1.701271228E12, 96.5], [1.701271015E12, 100.0], [1.701271056E12, 100.0], [1.701270966E12, 100.0], [1.701271179E12, 100.0], [1.701270925E12, 100.0], [1.701271138E12, 100.0], [1.701271007E12, 100.0], [1.701271089E12, 100.0], [1.701271048E12, 100.0], [1.701270958E12, 100.0], [1.701271171E12, 100.0], [1.70127113E12, 100.0], [1.701271212E12, 100.0], [1.701270999E12, 100.0], [1.701271038E12, 100.0], [1.701270997E12, 100.0], [1.701270948E12, 100.0], [1.701271161E12, 100.0], [1.70127112E12, 100.0], [1.70127103E12, 100.0], [1.701270989E12, 100.0], [1.701271202E12, 100.0], [1.701271071E12, 100.0], [1.70127094E12, 100.0], [1.701271112E12, 100.0], [1.701271022E12, 100.0], [1.701271235E12, 70.0], [1.701270981E12, 100.0], [1.701271063E12, 100.0], [1.701270932E12, 100.0], [1.701271145E12, 100.0], [1.701271104E12, 100.0], [1.701271014E12, 100.0], [1.701270973E12, 100.0], [1.701271055E12, 100.0], [1.701271137E12, 100.0], [1.701271096E12, 100.0], [1.701271006E12, 100.0], [1.701271178E12, 100.0], [1.701271047E12, 100.0], [1.701271129E12, 100.0], [1.701271088E12, 100.0], [1.701270998E12, 100.0], [1.701271211E12, 100.0], [1.701270957E12, 100.0], [1.70127117E12, 100.0], [1.701270996E12, 100.0], [1.701271209E12, 100.0], [1.701271168E12, 100.0], [1.701271078E12, 100.0], [1.701271037E12, 100.0], [1.70127125E12, 1.5], [1.701270947E12, 100.0], [1.701270988E12, 100.0], [1.701271201E12, 100.0], [1.70127116E12, 100.0], [1.70127107E12, 100.0], [1.701271029E12, 100.0], [1.701270939E12, 100.0], [1.70127098E12, 100.0], [1.701271193E12, 100.0], [1.701271152E12, 100.0], [1.701271062E12, 100.0], [1.701271021E12, 100.0], [1.701271234E12, 74.5], [1.701270931E12, 100.0], [1.701271103E12, 100.0], [1.701270972E12, 100.0], [1.701271144E12, 100.0], [1.701271054E12, 100.0], [1.701271013E12, 100.0], [1.701271226E12, 98.66666666666667], [1.701271095E12, 100.0], [1.701270964E12, 100.0], [1.701271177E12, 100.0], [1.701271046E12, 100.0], [1.701271005E12, 100.0], [1.701271087E12, 100.0], [1.701270956E12, 100.0], [1.701271169E12, 100.0], [1.701271128E12, 100.0], [1.701270995E12, 100.0], [1.701270954E12, 100.0], [1.701271167E12, 100.0], [1.701271036E12, 100.0], [1.701271208E12, 100.0], [1.701271118E12, 100.0], [1.701270987E12, 100.0], [1.701270946E12, 100.0], [1.701271159E12, 100.0], [1.701271028E12, 100.0], [1.7012712E12, 100.0], [1.70127111E12, 100.0], [1.701271069E12, 100.0], [1.701270979E12, 100.0], [1.701270938E12, 100.0], [1.70127102E12, 100.0], [1.701271192E12, 100.0], [1.701271102E12, 100.0], [1.701271061E12, 100.0], [1.701270971E12, 100.0], [1.70127093E12, 100.0], [1.701271143E12, 100.0], [1.701271012E12, 100.0], [1.701271225E12, 100.0], [1.701271184E12, 100.0], [1.701271094E12, 100.0], [1.701271053E12, 100.0], [1.701270963E12, 100.0], [1.701271135E12, 100.0], [1.701271004E12, 100.0], [1.701271176E12, 100.0], [1.701271045E12, 100.0], [1.701270955E12, 100.0], [1.701271127E12, 100.0]], "isOverall": false, "label": "jp@gc - Ultimate Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.70127125E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 10687.0, "minX": 1.0, "maxY": 60025.0, "series": [{"data": [[2.0, 45973.0], [3.0, 34904.0], [4.0, 35245.0], [5.0, 34822.0], [6.0, 34331.0], [7.0, 34917.0], [8.0, 10687.0], [9.0, 12609.0], [10.0, 12748.0], [11.0, 12792.0], [12.0, 12887.0], [13.0, 60025.0], [14.0, 13206.0], [15.0, 13406.0], [16.0, 13947.0], [17.0, 14019.0], [18.0, 13912.0], [19.0, 14183.0], [20.0, 14093.0], [21.0, 14778.0], [22.0, 15002.0], [23.0, 60025.0], [24.0, 15114.0], [25.0, 15609.0], [27.0, 15554.0], [28.0, 15792.0], [29.0, 15700.0], [30.0, 15609.0], [31.0, 15650.0], [33.0, 15785.0], [32.0, 15691.0], [35.0, 15908.0], [34.0, 15816.0], [37.0, 15799.0], [36.0, 15688.0], [39.0, 20835.0], [38.0, 21440.0], [41.0, 21687.0], [40.0, 21760.0], [43.0, 21615.0], [42.0, 21822.0], [45.0, 21689.0], [44.0, 21698.0], [47.0, 22486.0], [46.0, 21912.0], [49.0, 22821.0], [48.0, 22426.0], [51.0, 22382.0], [50.0, 22301.0], [53.0, 22791.0], [52.0, 22794.0], [55.0, 22758.0], [57.0, 22724.0], [56.0, 22725.0], [59.0, 22694.0], [58.0, 22707.0], [61.0, 22604.0], [60.0, 22645.0], [63.0, 22800.0], [62.0, 22546.0], [67.0, 22718.0], [66.0, 22700.0], [65.0, 22698.0], [64.0, 22604.0], [71.0, 22597.0], [70.0, 22732.0], [69.0, 22690.0], [68.0, 22810.0], [75.0, 22617.0], [74.0, 22671.0], [73.0, 22555.0], [72.0, 22550.0], [79.0, 22891.0], [78.0, 22936.0], [77.0, 22977.0], [76.0, 22937.0], [83.0, 22604.0], [82.0, 22604.0], [81.0, 22695.0], [80.0, 22788.0], [87.0, 22649.0], [86.0, 22461.0], [85.0, 22597.0], [84.0, 22603.0], [91.0, 22686.0], [90.0, 22390.0], [89.0, 22407.0], [88.0, 22502.0], [95.0, 22368.0], [94.0, 22358.0], [93.0, 22568.0], [92.0, 22373.0], [99.0, 21302.0], [98.0, 21242.0], [97.0, 21512.0], [96.0, 21866.0], [100.0, 11384.032839665168], [1.0, 45837.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[97.00544135429261, 12034.985489721877]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.701270925E12, "maxY": 3883014.0, "series": [{"data": [[1.701270953E12, 298700.0], [1.701271166E12, 1947181.0], [1.701271125E12, 149347.0], [1.701271035E12, 1344128.0], [1.701270994E12, 1194716.0], [1.701271207E12, 149366.0], [1.701271076E12, 298719.0], [1.701270945E12, 448051.0], [1.701271158E12, 2090843.0], [1.701271117E12, 21432.0], [1.701271027E12, 1194802.0], [1.701270986E12, 1045454.0], [1.701271199E12, 896055.0], [1.701271068E12, 298820.0], [1.701270937E12, 298688.0], [1.701271019E12, 1194783.0], [1.701270978E12, 746790.0], [1.701271191E12, 298708.0], [1.70127106E12, 2240196.0], [1.701271232E12, 746788.0], [1.701270929E12, 149347.0], [1.701271142E12, 149333.0], [1.701271101E12, 2679.0], [1.701271011E12, 1194769.0], [1.70127097E12, 149346.0], [1.701271052E12, 896100.0], [1.701271224E12, 746725.0], [1.701271134E12, 746750.0], [1.701271093E12, 298684.0], [1.701271003E12, 1194764.0], [1.701270962E12, 746705.0], [1.701271044E12, 1642858.0], [1.701271216E12, 236.0], [1.701271126E12, 298691.0], [1.701271085E12, 157510.0], [1.701271124E12, 1642838.0], [1.701270993E12, 1045418.0], [1.701271206E12, 298686.0], [1.701270952E12, 746708.0], [1.701271165E12, 152014.0], [1.701271075E12, 1194789.0], [1.701271034E12, 1344145.0], [1.701271116E12, 13395.0], [1.701270985E12, 1045435.0], [1.701271198E12, 1045425.0], [1.701270944E12, 149354.0], [1.701271157E12, 149354.0], [1.701271067E12, 448041.0], [1.701271026E12, 2240253.0], [1.701271239E12, 896082.0], [1.701271108E12, 2679.0], [1.701270977E12, 1194765.0], [1.70127119E12, 149355.0], [1.701270936E12, 298701.0], [1.701271149E12, 5358.0], [1.701271059E12, 298679.0], [1.701271018E12, 1344130.0], [1.701271231E12, 1493447.0], [1.7012711E12, 2992280.0], [1.701270969E12, 896081.0], [1.701271182E12, 118.0], [1.701270928E12, 149355.0], [1.701271141E12, 298701.0], [1.701271051E12, 1792204.0], [1.70127101E12, 1194764.0], [1.701271223E12, 298702.0], [1.701271092E12, 1200179.0], [1.701270961E12, 746728.0], [1.701271174E12, 1792163.0], [1.701271133E12, 149341.0], [1.701271043E12, 1344102.0], [1.701271002E12, 1194808.0], [1.701271215E12, 448509.0], [1.701271084E12, 304038.0], [1.701271082E12, 448055.0], [1.701271164E12, 154719.0], [1.701270951E12, 448043.0], [1.701271033E12, 1642791.0], [1.701270992E12, 1045407.0], [1.701271205E12, 154686.0], [1.701271115E12, 8037.0], [1.701271074E12, 149346.0], [1.701271156E12, 149335.0], [1.701270943E12, 448055.0], [1.701271025E12, 1045416.0], [1.701271238E12, 2096153.0], [1.701270984E12, 597435.0], [1.701271197E12, 298689.0], [1.701271107E12, 298674.0], [1.701271066E12, 448041.0], [1.701271148E12, 450834.0], [1.701270935E12, 149356.0], [1.701271017E12, 1642862.0], [1.70127123E12, 298683.0], [1.701270976E12, 896093.0], [1.701271189E12, 298703.0], [1.701271099E12, 154698.0], [1.701271058E12, 597381.0], [1.70127114E12, 1792131.0], [1.701270927E12, 298668.0], [1.701271009E12, 1194772.0], [1.701271222E12, 1344118.0], [1.701270968E12, 896054.0], [1.701271181E12, 2679.0], [1.701271091E12, 298706.0], [1.70127105E12, 1642891.0], [1.701271132E12, 298726.0], [1.701271001E12, 1194774.0], [1.701271214E12, 150390.0], [1.70127096E12, 597373.0], [1.701271173E12, 898781.0], [1.701271083E12, 152025.0], [1.701271042E12, 1642817.0], [1.701271081E12, 746732.0], [1.70127104E12, 1493455.0], [1.70127095E12, 597388.0], [1.701271122E12, 152039.0], [1.701271204E12, 1645507.0], [1.701270991E12, 1045410.0], [1.701271073E12, 149345.0], [1.701271032E12, 1792165.0], [1.701270942E12, 149368.0], [1.701271155E12, 448036.0], [1.701271114E12, 306717.0], [1.701271196E12, 312089.0], [1.701270983E12, 1194809.0], [1.701271065E12, 746733.0], [1.701271024E12, 448047.0], [1.701271237E12, 2837560.0], [1.701270934E12, 298674.0], [1.701271147E12, 149340.0], [1.701271106E12, 896077.0], [1.701270975E12, 746769.0], [1.701271057E12, 1344133.0], [1.701271016E12, 1045456.0], [1.701271229E12, 149336.0], [1.701270926E12, 149354.0], [1.701271139E12, 597398.0], [1.70127118E12, 157496.0], [1.701270967E12, 597394.0], [1.701271049E12, 1344120.0], [1.701271008E12, 1493415.0], [1.701271221E12, 746756.0], [1.701271131E12, 1642780.0], [1.70127109E12, 149329.0], [1.701271172E12, 298681.0], [1.701270959E12, 746727.0], [1.701271041E12, 1493505.0], [1.701271E12, 1194734.0], [1.701271213E12, 748392.0], [1.701271039E12, 2090855.0], [1.701271121E12, 5358.0], [1.70127099E12, 1493522.0], [1.701271203E12, 600045.0], [1.701270949E12, 597357.0], [1.701271162E12, 456072.0], [1.701271031E12, 1045416.0], [1.701271113E12, 10716.0], [1.701271072E12, 149336.0], [1.701270982E12, 1194788.0], [1.701271195E12, 32148.0], [1.701270941E12, 448042.0], [1.701271154E12, 898755.0], [1.701271236E12, 3883014.0], [1.701271023E12, 1045419.0], [1.701271105E12, 448036.0], [1.701271064E12, 448067.0], [1.701270974E12, 896052.0], [1.701271187E12, 149353.0], [1.701270933E12, 298713.0], [1.701271228E12, 298682.0], [1.701271015E12, 1344099.0], [1.701271056E12, 746967.0], [1.701270966E12, 597369.0], [1.701271179E12, 448174.0], [1.701270925E12, 149362.0], [1.701271138E12, 149354.0], [1.701271007E12, 1493447.0], [1.701271089E12, 1941510.0], [1.701271048E12, 1642802.0], [1.701270958E12, 298730.0], [1.701271171E12, 149362.0], [1.70127113E12, 149353.0], [1.701271212E12, 448038.0], [1.701270999E12, 1344133.0], [1.701271038E12, 1344093.0], [1.701270997E12, 1045405.0], [1.701270948E12, 298711.0], [1.701271161E12, 461459.0], [1.70127112E12, 8037.0], [1.70127103E12, 1642833.0], [1.701270989E12, 746730.0], [1.701271202E12, 597361.0], [1.701271071E12, 149354.0], [1.70127094E12, 149354.0], [1.701271112E12, 2679.0], [1.701271022E12, 1045431.0], [1.701271235E12, 149348.0], [1.701270981E12, 448072.0], [1.701271063E12, 149353.0], [1.701270932E12, 149341.0], [1.701271145E12, 304075.0], [1.701271104E12, 746768.0], [1.701271014E12, 1493491.0], [1.701270973E12, 448058.0], [1.701271055E12, 1493542.0], [1.701271137E12, 298714.0], [1.701271096E12, 2679.0], [1.701271006E12, 1493457.0], [1.701271178E12, 1363457.0], [1.701271047E12, 1792107.0], [1.701271129E12, 298697.0], [1.701271088E12, 304029.0], [1.701270998E12, 746740.0], [1.701271211E12, 746744.0], [1.701270957E12, 597373.0], [1.70127117E12, 1344161.0], [1.701270996E12, 746762.0], [1.701271209E12, 1344131.0], [1.701271168E12, 597367.0], [1.701271078E12, 149347.0], [1.701271037E12, 1792147.0], [1.70127125E12, 236.0], [1.701270947E12, 597383.0], [1.701270988E12, 1045417.0], [1.701271201E12, 1344108.0], [1.70127116E12, 613472.0], [1.70127107E12, 149335.0], [1.701271029E12, 1344150.0], [1.701270939E12, 298699.0], [1.70127098E12, 746751.0], [1.701271193E12, 298688.0], [1.701271152E12, 2679.0], [1.701271062E12, 597382.0], [1.701271021E12, 1493466.0], [1.701271234E12, 1194799.0], [1.701270931E12, 298673.0], [1.701271103E12, 154692.0], [1.701270972E12, 597375.0], [1.701271144E12, 1194757.0], [1.701271054E12, 1493470.0], [1.701271013E12, 1045449.0], [1.701271226E12, 448050.0], [1.701271095E12, 152014.0], [1.701270964E12, 298681.0], [1.701271177E12, 917481.0], [1.701271046E12, 1941560.0], [1.701271005E12, 896063.0], [1.701271087E12, 118.0], [1.701270956E12, 298703.0], [1.701271169E12, 896078.0], [1.701271128E12, 1493457.0], [1.701270995E12, 1045443.0], [1.701270954E12, 448025.0], [1.701271167E12, 149343.0], [1.701271036E12, 896083.0], [1.701271208E12, 1194782.0], [1.701271118E12, 312084.0], [1.701270987E12, 1194763.0], [1.701270946E12, 597370.0], [1.701271159E12, 5358.0], [1.701271028E12, 1493492.0], [1.7012712E12, 1493490.0], [1.70127111E12, 154700.0], [1.701271069E12, 298708.0], [1.701270979E12, 1045426.0], [1.701270938E12, 149349.0], [1.70127102E12, 1194772.0], [1.701271192E12, 1941490.0], [1.701271102E12, 1197459.0], [1.701271061E12, 1045383.0], [1.701270971E12, 1045415.0], [1.70127093E12, 298693.0], [1.701271143E12, 1344124.0], [1.701271012E12, 1941517.0], [1.701271225E12, 896111.0], [1.701271184E12, 746723.0], [1.701271094E12, 301367.0], [1.701271053E12, 1941513.0], [1.701270963E12, 746772.0], [1.701271135E12, 900639.0], [1.701271004E12, 1194733.0], [1.701271176E12, 154694.0], [1.701271045E12, 1344140.0], [1.701270955E12, 448030.0], [1.701271127E12, 149335.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.701270953E12, 278.0], [1.701271166E12, 1946.0], [1.701271125E12, 139.0], [1.701271035E12, 1251.0], [1.701270994E12, 1112.0], [1.701271207E12, 139.0], [1.701271076E12, 278.0], [1.701270945E12, 417.0], [1.701271158E12, 1946.0], [1.701271117E12, 0.0], [1.701271027E12, 1112.0], [1.701270986E12, 973.0], [1.701271199E12, 834.0], [1.701271068E12, 417.0], [1.701270937E12, 278.0], [1.701271019E12, 1112.0], [1.701270978E12, 695.0], [1.701271191E12, 278.0], [1.70127106E12, 2085.0], [1.701271232E12, 695.0], [1.701270929E12, 139.0], [1.701271142E12, 139.0], [1.701271101E12, 0.0], [1.701271011E12, 1112.0], [1.70127097E12, 139.0], [1.701271052E12, 834.0], [1.701271224E12, 695.0], [1.701271134E12, 695.0], [1.701271093E12, 278.0], [1.701271003E12, 1112.0], [1.701270962E12, 695.0], [1.701271044E12, 1529.0], [1.701271216E12, 278.0], [1.701271126E12, 278.0], [1.701271085E12, 278.0], [1.701271124E12, 1529.0], [1.701270993E12, 973.0], [1.701271206E12, 278.0], [1.701270952E12, 695.0], [1.701271165E12, 139.0], [1.701271075E12, 1112.0], [1.701271034E12, 1251.0], [1.701271116E12, 0.0], [1.701270985E12, 973.0], [1.701271198E12, 973.0], [1.701270944E12, 139.0], [1.701271157E12, 139.0], [1.701271067E12, 417.0], [1.701271026E12, 2085.0], [1.701271239E12, 834.0], [1.701271108E12, 0.0], [1.701270977E12, 1112.0], [1.70127119E12, 139.0], [1.701270936E12, 278.0], [1.701271149E12, 0.0], [1.701271059E12, 278.0], [1.701271018E12, 1251.0], [1.701271231E12, 1390.0], [1.7012711E12, 2780.0], [1.701270969E12, 834.0], [1.701271182E12, 139.0], [1.701270928E12, 139.0], [1.701271141E12, 278.0], [1.701271051E12, 1668.0], [1.70127101E12, 1112.0], [1.701271223E12, 278.0], [1.701271092E12, 1112.0], [1.701270961E12, 695.0], [1.701271174E12, 1668.0], [1.701271133E12, 139.0], [1.701271043E12, 1251.0], [1.701271002E12, 1112.0], [1.701271215E12, 973.0], [1.701271084E12, 278.0], [1.701271082E12, 417.0], [1.701271164E12, 139.0], [1.701270951E12, 417.0], [1.701271033E12, 1529.0], [1.701270992E12, 973.0], [1.701271205E12, 139.0], [1.701271115E12, 0.0], [1.701271074E12, 139.0], [1.701271156E12, 139.0], [1.701270943E12, 417.0], [1.701271025E12, 973.0], [1.701271238E12, 1946.0], [1.701270984E12, 556.0], [1.701271197E12, 278.0], [1.701271107E12, 278.0], [1.701271066E12, 417.0], [1.701271148E12, 556.0], [1.701270935E12, 139.0], [1.701271017E12, 1529.0], [1.70127123E12, 278.0], [1.701270976E12, 834.0], [1.701271189E12, 278.0], [1.701271099E12, 139.0], [1.701271058E12, 556.0], [1.70127114E12, 1668.0], [1.701270927E12, 278.0], [1.701271009E12, 1112.0], [1.701271222E12, 1251.0], [1.701270968E12, 834.0], [1.701271181E12, 0.0], [1.701271091E12, 278.0], [1.70127105E12, 1529.0], [1.701271132E12, 278.0], [1.701271001E12, 1112.0], [1.701271214E12, 973.0], [1.70127096E12, 556.0], [1.701271173E12, 834.0], [1.701271083E12, 139.0], [1.701271042E12, 1529.0], [1.701271081E12, 695.0], [1.70127104E12, 1390.0], [1.70127095E12, 556.0], [1.701271122E12, 139.0], [1.701271204E12, 1529.0], [1.701270991E12, 973.0], [1.701271073E12, 139.0], [1.701271032E12, 1668.0], [1.701270942E12, 139.0], [1.701271155E12, 417.0], [1.701271114E12, 278.0], [1.701271196E12, 278.0], [1.701270983E12, 1112.0], [1.701271065E12, 695.0], [1.701271024E12, 417.0], [1.701271237E12, 2641.0], [1.701270934E12, 278.0], [1.701271147E12, 139.0], [1.701271106E12, 834.0], [1.701270975E12, 695.0], [1.701271057E12, 1251.0], [1.701271016E12, 973.0], [1.701271229E12, 139.0], [1.701270926E12, 139.0], [1.701271139E12, 556.0], [1.70127118E12, 278.0], [1.701270967E12, 556.0], [1.701271049E12, 1251.0], [1.701271008E12, 1390.0], [1.701271221E12, 695.0], [1.701271131E12, 1529.0], [1.70127109E12, 139.0], [1.701271172E12, 278.0], [1.701270959E12, 695.0], [1.701271041E12, 1390.0], [1.701271E12, 1112.0], [1.701271213E12, 2641.0], [1.701271039E12, 1946.0], [1.701271121E12, 0.0], [1.70127099E12, 1390.0], [1.701271203E12, 556.0], [1.701270949E12, 556.0], [1.701271162E12, 417.0], [1.701271031E12, 973.0], [1.701271113E12, 0.0], [1.701271072E12, 139.0], [1.701270982E12, 1112.0], [1.701271195E12, 0.0], [1.701270941E12, 417.0], [1.701271154E12, 834.0], [1.701271236E12, 3614.0], [1.701271023E12, 973.0], [1.701271105E12, 417.0], [1.701271064E12, 417.0], [1.701270974E12, 834.0], [1.701271187E12, 139.0], [1.701270933E12, 278.0], [1.701271228E12, 278.0], [1.701271015E12, 1251.0], [1.701271056E12, 973.0], [1.701270966E12, 556.0], [1.701271179E12, 556.0], [1.701270925E12, 139.0], [1.701271138E12, 139.0], [1.701271007E12, 1390.0], [1.701271089E12, 1807.0], [1.701271048E12, 1529.0], [1.701270958E12, 278.0], [1.701271171E12, 139.0], [1.70127113E12, 139.0], [1.701271212E12, 417.0], [1.701270999E12, 1251.0], [1.701271038E12, 1251.0], [1.701270997E12, 973.0], [1.701270948E12, 278.0], [1.701271161E12, 417.0], [1.70127112E12, 0.0], [1.70127103E12, 1529.0], [1.701270989E12, 695.0], [1.701271202E12, 556.0], [1.701271071E12, 139.0], [1.70127094E12, 139.0], [1.701271112E12, 0.0], [1.701271022E12, 973.0], [1.701271235E12, 139.0], [1.701270981E12, 417.0], [1.701271063E12, 139.0], [1.701270932E12, 139.0], [1.701271145E12, 278.0], [1.701271104E12, 695.0], [1.701271014E12, 1390.0], [1.701270973E12, 417.0], [1.701271055E12, 1529.0], [1.701271137E12, 278.0], [1.701271096E12, 0.0], [1.701271006E12, 1390.0], [1.701271178E12, 1946.0], [1.701271047E12, 1668.0], [1.701271129E12, 278.0], [1.701271088E12, 278.0], [1.701270998E12, 695.0], [1.701271211E12, 695.0], [1.701270957E12, 556.0], [1.70127117E12, 1251.0], [1.701270996E12, 695.0], [1.701271209E12, 1251.0], [1.701271168E12, 556.0], [1.701271078E12, 139.0], [1.701271037E12, 1668.0], [1.70127125E12, 278.0], [1.701270947E12, 556.0], [1.701270988E12, 973.0], [1.701271201E12, 1251.0], [1.70127116E12, 556.0], [1.70127107E12, 139.0], [1.701271029E12, 1251.0], [1.701270939E12, 278.0], [1.70127098E12, 695.0], [1.701271193E12, 278.0], [1.701271152E12, 0.0], [1.701271062E12, 556.0], [1.701271021E12, 1390.0], [1.701271234E12, 1112.0], [1.701270931E12, 278.0], [1.701271103E12, 139.0], [1.701270972E12, 556.0], [1.701271144E12, 1112.0], [1.701271054E12, 1390.0], [1.701271013E12, 973.0], [1.701271226E12, 417.0], [1.701271095E12, 139.0], [1.701270964E12, 278.0], [1.701271177E12, 834.0], [1.701271046E12, 1807.0], [1.701271005E12, 834.0], [1.701271087E12, 139.0], [1.701270956E12, 278.0], [1.701271169E12, 834.0], [1.701271128E12, 1390.0], [1.701270995E12, 973.0], [1.701270954E12, 417.0], [1.701271167E12, 139.0], [1.701271036E12, 834.0], [1.701271208E12, 1112.0], [1.701271118E12, 278.0], [1.701270987E12, 1112.0], [1.701270946E12, 556.0], [1.701271159E12, 0.0], [1.701271028E12, 1390.0], [1.7012712E12, 1390.0], [1.70127111E12, 139.0], [1.701271069E12, 278.0], [1.701270979E12, 973.0], [1.701270938E12, 139.0], [1.70127102E12, 1112.0], [1.701271192E12, 1807.0], [1.701271102E12, 1112.0], [1.701271061E12, 973.0], [1.701270971E12, 973.0], [1.70127093E12, 278.0], [1.701271143E12, 1251.0], [1.701271012E12, 1807.0], [1.701271225E12, 834.0], [1.701271184E12, 695.0], [1.701271094E12, 278.0], [1.701271053E12, 1807.0], [1.701270963E12, 695.0], [1.701271135E12, 3058.0], [1.701271004E12, 1112.0], [1.701271176E12, 139.0], [1.701271045E12, 1251.0], [1.701270955E12, 417.0], [1.701271127E12, 139.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.70127125E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 423.0, "minX": 1.701270925E12, "maxY": 60044.0, "series": [{"data": [[1.701270953E12, 657.0], [1.701271166E12, 14224.5], [1.701271125E12, 4402.0], [1.701271035E12, 1626.6666666666667], [1.701270994E12, 651.625], [1.701271207E12, 17019.0], [1.701271076E12, 15638.0], [1.701270945E12, 688.6666666666666], [1.701271158E12, 44631.21428571429], [1.701271117E12, 60025.5], [1.701271027E12, 1019.375], [1.701270986E12, 1228.4285714285716], [1.701271199E12, 21593.666666666668], [1.701271068E12, 12273.0], [1.701270937E12, 638.0], [1.701271019E12, 787.0], [1.701270978E12, 835.2], [1.701271191E12, 18050.5], [1.70127106E12, 9678.333333333332], [1.701271232E12, 22716.4], [1.701270929E12, 613.0], [1.701271142E12, 3692.0], [1.701271101E12, 60027.0], [1.701271011E12, 1143.1250000000002], [1.70127097E12, 779.0], [1.701271052E12, 1570.5], [1.701271224E12, 21078.2], [1.701271134E12, 3031.0], [1.701271093E12, 1065.5], [1.701271003E12, 902.0], [1.701270962E12, 653.4], [1.701271044E12, 1697.0000000000002], [1.701271216E12, 27677.0], [1.701271126E12, 3832.0], [1.701271085E12, 43025.0], [1.701271124E12, 26238.09090909091], [1.701270993E12, 675.8571428571429], [1.701271206E12, 17283.5], [1.701270952E12, 710.0], [1.701271165E12, 34118.0], [1.701271075E12, 30495.875000000004], [1.701271034E12, 1458.4444444444443], [1.701271116E12, 60024.4], [1.701270985E12, 1042.142857142857], [1.701271198E12, 21128.14285714286], [1.701270944E12, 863.0], [1.701271157E12, 11945.0], [1.701271067E12, 1818.6666666666665], [1.701271026E12, 2185.8], [1.701271239E12, 30817.666666666668], [1.701271108E12, 60026.0], [1.701270977E12, 804.625], [1.70127119E12, 17295.0], [1.701270936E12, 602.0], [1.701271149E12, 60023.0], [1.701271059E12, 1699.0], [1.701271018E12, 831.1111111111111], [1.701271231E12, 22523.599999999995], [1.7012711E12, 47573.545454545456], [1.701270969E12, 627.3333333333334], [1.701271182E12, 38600.0], [1.701270928E12, 692.0], [1.701271141E12, 3643.0], [1.701271051E12, 1743.416666666667], [1.70127101E12, 881.125], [1.701271223E12, 20705.0], [1.701271092E12, 13239.1], [1.701270961E12, 1088.8], [1.701271174E12, 7570.833333333334], [1.701271133E12, 3166.0], [1.701271043E12, 1287.6666666666667], [1.701271002E12, 1044.25], [1.701271215E12, 15120.857142857143], [1.701271084E12, 31469.25], [1.701271082E12, 6131.333333333333], [1.701271164E12, 42585.333333333336], [1.701270951E12, 687.6666666666666], [1.701271033E12, 1524.090909090909], [1.701270992E12, 828.0], [1.701271205E12, 45852.666666666664], [1.701271115E12, 60023.666666666664], [1.701271074E12, 6929.0], [1.701271156E12, 11996.0], [1.701270943E12, 689.0], [1.701271025E12, 2700.4285714285716], [1.701271238E12, 19546.625], [1.701270984E12, 1003.25], [1.701271197E12, 20557.5], [1.701271107E12, 835.5], [1.701271066E12, 1865.0], [1.701271148E12, 21465.0], [1.701270935E12, 423.0], [1.701271017E12, 1089.4545454545453], [1.70127123E12, 22363.0], [1.701270976E12, 1040.8333333333333], [1.701271189E12, 16653.0], [1.701271099E12, 41383.0], [1.701271058E12, 11795.0], [1.70127114E12, 26708.166666666668], [1.701270927E12, 782.5], [1.701271009E12, 1196.875], [1.701271222E12, 20915.777777777777], [1.701270968E12, 631.8333333333334], [1.701271181E12, 60023.0], [1.701271091E12, 2526.0], [1.70127105E12, 1629.3636363636365], [1.701271132E12, 3046.0], [1.701271001E12, 1012.9999999999999], [1.701271214E12, 11509.285714285716], [1.70127096E12, 748.25], [1.701271173E12, 15235.857142857143], [1.701271083E12, 32369.5], [1.701271042E12, 1310.090909090909], [1.701271081E12, 6190.6], [1.70127104E12, 1236.8], [1.70127095E12, 746.25], [1.701271122E12, 34457.5], [1.701271204E12, 33998.333333333336], [1.701270991E12, 951.2857142857143], [1.701271073E12, 6250.0], [1.701271032E12, 1426.0], [1.701270942E12, 677.0], [1.701271155E12, 11120.333333333334], [1.701271114E12, 36595.6], [1.701271196E12, 48623.28571428572], [1.701270983E12, 921.625], [1.701271065E12, 2653.2], [1.701271024E12, 2133.3333333333335], [1.701271237E12, 17542.842105263157], [1.701270934E12, 644.5], [1.701271147E12, 4423.0], [1.701271106E12, 1306.6666666666667], [1.701270975E12, 1152.0], [1.701271057E12, 4314.222222222223], [1.701271016E12, 854.2857142857143], [1.701271229E12, 22228.0], [1.701270926E12, 525.0], [1.701271139E12, 5296.5], [1.70127118E12, 41430.8], [1.701270967E12, 827.0], [1.701271049E12, 1393.777777777778], [1.701271008E12, 972.0999999999998], [1.701271221E12, 20803.6], [1.701271131E12, 3446.6363636363635], [1.70127109E12, 3203.0], [1.701271172E12, 8123.5], [1.701270959E12, 704.0], [1.701271041E12, 1291.9], [1.701271E12, 1096.75], [1.701271213E12, 16731.842105263157], [1.701271039E12, 1472.3571428571427], [1.701271121E12, 60025.0], [1.70127099E12, 1114.3], [1.701271203E12, 30362.6], [1.701270949E12, 684.0], [1.701271162E12, 33535.833333333336], [1.701271031E12, 1387.0], [1.701271113E12, 60024.75], [1.701271072E12, 5748.0], [1.701270982E12, 1402.1249999999998], [1.701271195E12, 60025.33333333333], [1.701270941E12, 598.0], [1.701271154E12, 17835.14285714286], [1.701271236E12, 22556.96153846154], [1.701271023E12, 1219.857142857143], [1.701271105E12, 2027.3333333333333], [1.701271064E12, 3782.0], [1.701270974E12, 947.5], [1.701271187E12, 15684.0], [1.701270933E12, 615.0], [1.701271228E12, 21508.0], [1.701271015E12, 1007.8888888888889], [1.701271056E12, 10835.142857142857], [1.701270966E12, 1337.75], [1.701271179E12, 10346.5], [1.701270925E12, 762.0], [1.701271138E12, 5325.0], [1.701271007E12, 1143.7999999999997], [1.701271089E12, 14750.769230769232], [1.701271048E12, 1380.3636363636363], [1.701270958E12, 935.5], [1.701271171E12, 8768.0], [1.70127113E12, 3598.0], [1.701271212E12, 16166.0], [1.701270999E12, 984.0], [1.701271038E12, 1529.333333333333], [1.701270997E12, 976.1428571428571], [1.701270948E12, 988.0], [1.701271161E12, 40107.25], [1.70127112E12, 60025.333333333336], [1.70127103E12, 1168.2727272727273], [1.701270989E12, 1076.8], [1.701271202E12, 22757.75], [1.701271071E12, 5270.0], [1.70127094E12, 765.0], [1.701271112E12, 60026.0], [1.701271022E12, 1379.142857142857], [1.701271235E12, 22732.0], [1.701270981E12, 742.0], [1.701271063E12, 534.0], [1.701270932E12, 505.0], [1.701271145E12, 31829.25], [1.701271104E12, 2102.2], [1.701271014E12, 911.2], [1.701270973E12, 938.6666666666666], [1.701271055E12, 4579.090909090909], [1.701271137E12, 5078.0], [1.701271096E12, 60026.0], [1.701271006E12, 1263.3999999999999], [1.701271178E12, 27451.333333333332], [1.701271047E12, 1457.3333333333335], [1.701271129E12, 3720.0], [1.701271088E12, 44045.0], [1.701270998E12, 860.2], [1.701271211E12, 15916.2], [1.701270957E12, 782.0], [1.70127117E12, 9069.777777777776], [1.701270996E12, 753.4], [1.701271209E12, 16528.444444444445], [1.701271168E12, 8805.25], [1.701271078E12, 6439.0], [1.701271037E12, 2028.2500000000002], [1.70127125E12, 45905.0], [1.701270947E12, 538.25], [1.701270988E12, 901.4285714285714], [1.701271201E12, 22391.0], [1.70127116E12, 40551.0], [1.70127107E12, 4699.0], [1.701271029E12, 1419.5555555555557], [1.701270939E12, 664.5], [1.70127098E12, 1074.8], [1.701271193E12, 18496.0], [1.701271152E12, 60044.0], [1.701271062E12, 773.0], [1.701271021E12, 1001.5], [1.701271234E12, 22729.999999999996], [1.701270931E12, 642.5], [1.701271103E12, 40734.0], [1.701270972E12, 677.0], [1.701271144E12, 3755.6249999999995], [1.701271054E12, 1669.0], [1.701271013E12, 830.5714285714286], [1.701271226E12, 21282.0], [1.701271095E12, 30358.5], [1.701270964E12, 771.5], [1.701271177E12, 37863.5], [1.701271046E12, 1359.6153846153845], [1.701271005E12, 1373.8333333333333], [1.701271087E12, 34226.0], [1.701270956E12, 876.0], [1.701271169E12, 9140.333333333332], [1.701271128E12, 3544.2999999999997], [1.701270995E12, 594.5714285714286], [1.701270954E12, 699.0], [1.701271167E12, 8414.0], [1.701271036E12, 1813.6666666666665], [1.701271208E12, 16480.5], [1.701271118E12, 52539.71428571428], [1.701270987E12, 1328.75], [1.701270946E12, 594.75], [1.701271159E12, 60024.5], [1.701271028E12, 1041.1], [1.7012712E12, 22100.299999999996], [1.70127111E12, 40165.0], [1.701271069E12, 4545.0], [1.701270979E12, 723.5714285714287], [1.701270938E12, 505.0], [1.70127102E12, 855.625], [1.701271192E12, 18358.230769230766], [1.701271102E12, 8710.555555555555], [1.701271061E12, 2281.714285714286], [1.701270971E12, 766.1428571428572], [1.70127093E12, 722.0], [1.701271143E12, 3657.6666666666665], [1.701271012E12, 994.9999999999999], [1.701271225E12, 21238.833333333332], [1.701271184E12, 34931.8], [1.701271094E12, 20534.666666666664], [1.701271053E12, 1849.230769230769], [1.701270963E12, 631.2], [1.701271135E12, 31542.0], [1.701271004E12, 1131.5], [1.701271176E12, 42739.0], [1.701271045E12, 1576.7777777777778], [1.701270955E12, 832.6666666666666], [1.701271127E12, 3700.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.70127125E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.701270925E12, "maxY": 45905.0, "series": [{"data": [[1.701270953E12, 589.0], [1.701271166E12, 6667.624999999999], [1.701271125E12, 4335.0], [1.701271035E12, 1555.7777777777778], [1.701270994E12, 586.4999999999999], [1.701271207E12, 16953.0], [1.701271076E12, 15478.5], [1.701270945E12, 619.3333333333334], [1.701271158E12, 44532.857142857145], [1.701271117E12, 0.0], [1.701271027E12, 953.6250000000001], [1.701270986E12, 1163.5714285714284], [1.701271199E12, 21528.333333333336], [1.701271068E12, 12230.333333333334], [1.701270937E12, 571.5], [1.701271019E12, 719.5], [1.701270978E12, 769.8], [1.701271191E12, 17975.0], [1.70127106E12, 9610.4], [1.701271232E12, 22651.2], [1.701270929E12, 549.0], [1.701271142E12, 3625.0], [1.701271101E12, 0.0], [1.701271011E12, 1073.75], [1.70127097E12, 716.0], [1.701271052E12, 1506.1666666666667], [1.701271224E12, 21011.0], [1.701271134E12, 2898.2], [1.701271093E12, 998.5], [1.701271003E12, 829.75], [1.701270962E12, 588.8], [1.701271044E12, 1629.0909090909088], [1.701271216E12, 27677.0], [1.701271126E12, 3752.5], [1.701271085E12, 6996.0], [1.701271124E12, 26147.181818181816], [1.701270993E12, 610.4285714285714], [1.701271206E12, 17216.5], [1.701270952E12, 641.8], [1.701271165E12, 4067.0], [1.701271075E12, 30400.875], [1.701271034E12, 1390.0], [1.701271116E12, 0.0], [1.701270985E12, 973.7142857142857], [1.701271198E12, 21054.285714285717], [1.701270944E12, 798.0], [1.701271157E12, 11878.0], [1.701271067E12, 1755.0], [1.701271026E12, 2112.2000000000003], [1.701271239E12, 30747.333333333336], [1.701271108E12, 0.0], [1.701270977E12, 737.125], [1.70127119E12, 17231.0], [1.701270936E12, 535.0], [1.701271149E12, 0.0], [1.701271059E12, 1634.0], [1.701271018E12, 766.7777777777778], [1.701271231E12, 22454.8], [1.7012711E12, 42017.31818181819], [1.701270969E12, 562.3333333333333], [1.701271182E12, 38600.0], [1.701270928E12, 629.0], [1.701271141E12, 3577.5], [1.701271051E12, 1675.4166666666665], [1.70127101E12, 811.7500000000001], [1.701271223E12, 20638.5], [1.701271092E12, 1178.3999999999999], [1.701270961E12, 1023.8], [1.701271174E12, 7502.249999999999], [1.701271133E12, 3100.0], [1.701271043E12, 1221.3333333333333], [1.701271002E12, 974.0], [1.701271215E12, 15092.285714285716], [1.701271084E12, 1413.25], [1.701271082E12, 6066.666666666667], [1.701271164E12, 2545.333333333333], [1.701270951E12, 619.0], [1.701271033E12, 1456.909090909091], [1.701270992E12, 761.1428571428571], [1.701271205E12, 5813.333333333334], [1.701271115E12, 0.0], [1.701271074E12, 6858.0], [1.701271156E12, 11926.0], [1.701270943E12, 622.6666666666666], [1.701271025E12, 2633.0], [1.701271238E12, 11975.0625], [1.701270984E12, 937.25], [1.701271197E12, 20486.5], [1.701271107E12, 768.0], [1.701271066E12, 1798.6666666666667], [1.701271148E12, 9412.6], [1.701270935E12, 359.0], [1.701271017E12, 1021.1818181818181], [1.70127123E12, 22225.5], [1.701270976E12, 976.6666666666667], [1.701271189E12, 16586.5], [1.701271099E12, 1344.0], [1.701271058E12, 11726.25], [1.70127114E12, 26633.416666666664], [1.701270927E12, 646.0], [1.701271009E12, 1130.5], [1.701271222E12, 20850.777777777777], [1.701270968E12, 568.5], [1.701271181E12, 0.0], [1.701271091E12, 2450.5], [1.70127105E12, 1556.6363636363635], [1.701271132E12, 2977.0], [1.701271001E12, 947.25], [1.701271214E12, 11500.142857142857], [1.70127096E12, 679.25], [1.701271173E12, 6600.142857142857], [1.701271083E12, 2322.5], [1.701271042E12, 1239.090909090909], [1.701271081E12, 6114.0], [1.70127104E12, 1166.6], [1.70127095E12, 679.0], [1.701271122E12, 4412.0], [1.701271204E12, 28935.333333333336], [1.701270991E12, 884.1428571428571], [1.701271073E12, 6186.0], [1.701271032E12, 1359.5000000000002], [1.701270942E12, 611.0], [1.701271155E12, 11054.333333333334], [1.701271114E12, 541.4], [1.701271196E12, 5728.571428571428], [1.701270983E12, 854.0], [1.701271065E12, 2562.6], [1.701271024E12, 2069.3333333333335], [1.701271237E12, 17472.526315789473], [1.701270934E12, 580.0], [1.701271147E12, 4355.0], [1.701271106E12, 1240.3333333333333], [1.701270975E12, 1084.2], [1.701271057E12, 4215.888888888889], [1.701271016E12, 789.8571428571429], [1.701271229E12, 22152.0], [1.701270926E12, 460.0], [1.701271139E12, 5230.5], [1.70127118E12, 5394.4], [1.701270967E12, 754.5], [1.701271049E12, 1326.222222222222], [1.701271008E12, 906.3], [1.701271221E12, 20733.8], [1.701271131E12, 3371.7272727272725], [1.70127109E12, 3136.0], [1.701271172E12, 8055.0], [1.701270959E12, 629.8], [1.701271041E12, 1221.2], [1.701271E12, 1030.75], [1.701271213E12, 16714.736842105263], [1.701271039E12, 1404.0714285714284], [1.701271121E12, 0.0], [1.70127099E12, 1049.0], [1.701271203E12, 18306.4], [1.701270949E12, 619.75], [1.701271162E12, 3485.8333333333335], [1.701271031E12, 1313.4285714285716], [1.701271113E12, 0.0], [1.701271072E12, 5684.0], [1.701270982E12, 1323.8750000000002], [1.701271195E12, 0.0], [1.701270941E12, 532.6666666666666], [1.701271154E12, 9196.285714285714], [1.701271236E12, 22467.576923076922], [1.701271023E12, 1155.4285714285716], [1.701271105E12, 1959.3333333333333], [1.701271064E12, 3690.6666666666665], [1.701270974E12, 881.1666666666667], [1.701271187E12, 15620.0], [1.701270933E12, 548.5], [1.701271228E12, 21445.5], [1.701271015E12, 942.8888888888889], [1.701271056E12, 10778.857142857143], [1.701270966E12, 1272.5], [1.701271179E12, 10286.25], [1.701270925E12, 698.0], [1.701271138E12, 5258.0], [1.701271007E12, 1070.6999999999998], [1.701271089E12, 14675.307692307691], [1.701271048E12, 1236.090909090909], [1.701270958E12, 871.0], [1.701271171E12, 8704.0], [1.70127113E12, 3532.0], [1.701271212E12, 16087.666666666666], [1.701270999E12, 917.1111111111111], [1.701271038E12, 1460.7777777777778], [1.701270997E12, 908.5714285714286], [1.701270948E12, 925.5], [1.701271161E12, 2563.625], [1.70127112E12, 0.0], [1.70127103E12, 1100.272727272727], [1.701270989E12, 1012.6], [1.701271202E12, 22691.75], [1.701271071E12, 5173.0], [1.70127094E12, 701.0], [1.701271112E12, 0.0], [1.701271022E12, 1314.1428571428573], [1.701271235E12, 22670.0], [1.701270981E12, 675.6666666666666], [1.701271063E12, 468.0], [1.701270932E12, 442.0], [1.701271145E12, 1781.25], [1.701271104E12, 2035.4], [1.701271014E12, 845.8], [1.701270973E12, 870.6666666666666], [1.701271055E12, 4515.909090909091], [1.701271137E12, 5011.0], [1.701271096E12, 0.0], [1.701271006E12, 1200.0], [1.701271178E12, 7413.04761904762], [1.701271047E12, 1391.5833333333335], [1.701271129E12, 3649.5], [1.701271088E12, 13999.25], [1.701270998E12, 787.4], [1.701271211E12, 15843.0], [1.701270957E12, 713.25], [1.70127117E12, 8998.11111111111], [1.701270996E12, 689.6], [1.701271209E12, 16461.555555555555], [1.701271168E12, 8736.75], [1.701271078E12, 6347.0], [1.701271037E12, 1961.8333333333335], [1.70127125E12, 45905.0], [1.701270947E12, 473.5], [1.701270988E12, 828.9999999999999], [1.701271201E12, 22317.0], [1.70127116E12, 4507.6], [1.70127107E12, 4633.0], [1.701271029E12, 1350.0], [1.701270939E12, 602.5], [1.70127098E12, 1007.2], [1.701271193E12, 18434.0], [1.701271152E12, 0.0], [1.701271062E12, 707.0], [1.701271021E12, 931.8000000000001], [1.701271234E12, 22656.75], [1.701270931E12, 576.5], [1.701271103E12, 696.0], [1.701270972E12, 610.5], [1.701271144E12, 3686.25], [1.701271054E12, 1602.2], [1.701271013E12, 764.2857142857143], [1.701271226E12, 21215.666666666668], [1.701271095E12, 313.0], [1.701270964E12, 705.5], [1.701271177E12, 3534.785714285714], [1.701271046E12, 1290.2307692307695], [1.701271005E12, 1301.3333333333335], [1.701271087E12, 34226.0], [1.701270956E12, 809.0], [1.701271169E12, 8927.666666666666], [1.701271128E12, 3475.0], [1.701270995E12, 529.5714285714286], [1.701270954E12, 629.3333333333334], [1.701271167E12, 8346.0], [1.701271036E12, 1744.0], [1.701271208E12, 16372.125], [1.701271118E12, 9645.714285714286], [1.701270987E12, 1135.125], [1.701270946E12, 521.5], [1.701271159E12, 0.0], [1.701271028E12, 975.1], [1.7012712E12, 22032.5], [1.70127111E12, 127.0], [1.701271069E12, 4481.5], [1.701270979E12, 656.8571428571429], [1.701270938E12, 439.0], [1.70127102E12, 791.5000000000001], [1.701271192E12, 18292.53846153846], [1.701271102E12, 1980.3333333333333], [1.701271061E12, 2211.8571428571427], [1.701270971E12, 681.4285714285714], [1.70127093E12, 658.5], [1.701271143E12, 3581.444444444444], [1.701271012E12, 929.7692307692308], [1.701271225E12, 21170.5], [1.701271184E12, 34845.2], [1.701271094E12, 482.66666666666663], [1.701271053E12, 1772.1538461538462], [1.701270963E12, 562.4], [1.701271135E12, 31517.18181818182], [1.701271004E12, 1062.5], [1.701271176E12, 2702.0], [1.701271045E12, 1503.111111111111], [1.701270955E12, 760.0], [1.701271127E12, 3634.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.70127125E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 22.0, "minX": 1.701270925E12, "maxY": 53.0, "series": [{"data": [[1.701270953E12, 24.0], [1.701271166E12, 24.25], [1.701271125E12, 29.0], [1.701271035E12, 25.555555555555557], [1.701270994E12, 24.125], [1.701271207E12, 25.0], [1.701271076E12, 23.5], [1.701270945E12, 24.0], [1.701271158E12, 24.357142857142858], [1.701271117E12, 23.874999999999996], [1.701271027E12, 25.625], [1.701270986E12, 24.285714285714285], [1.701271199E12, 23.666666666666668], [1.701271068E12, 24.0], [1.701270937E12, 24.5], [1.701271019E12, 23.625], [1.701270978E12, 24.2], [1.701271191E12, 23.0], [1.70127106E12, 25.066666666666666], [1.701271232E12, 23.6], [1.701270929E12, 23.0], [1.701271142E12, 24.0], [1.701271101E12, 25.0], [1.701271011E12, 24.5], [1.70127097E12, 23.0], [1.701271052E12, 23.833333333333332], [1.701271224E12, 22.8], [1.701271134E12, 24.6], [1.701271093E12, 24.0], [1.701271003E12, 23.75], [1.701270962E12, 24.2], [1.701271044E12, 24.0], [1.701271216E12, 23.5], [1.701271126E12, 23.0], [1.701271085E12, 23.6], [1.701271124E12, 24.454545454545457], [1.701270993E12, 25.714285714285715], [1.701271206E12, 24.0], [1.701270952E12, 24.2], [1.701271165E12, 23.5], [1.701271075E12, 24.5], [1.701271034E12, 24.666666666666668], [1.701271116E12, 23.2], [1.701270985E12, 24.714285714285715], [1.701271198E12, 24.142857142857142], [1.701270944E12, 24.0], [1.701271157E12, 24.0], [1.701271067E12, 22.666666666666668], [1.701271026E12, 24.066666666666666], [1.701271239E12, 23.666666666666668], [1.701271108E12, 24.0], [1.701270977E12, 23.875000000000004], [1.70127119E12, 22.0], [1.701270936E12, 24.5], [1.701271149E12, 22.5], [1.701271059E12, 40.0], [1.701271018E12, 23.444444444444443], [1.701271231E12, 23.4], [1.7012711E12, 23.5], [1.701270969E12, 24.0], [1.701271182E12, 23.0], [1.701270928E12, 25.0], [1.701271141E12, 24.0], [1.701271051E12, 24.416666666666668], [1.70127101E12, 25.5], [1.701271223E12, 23.0], [1.701271092E12, 23.6], [1.701270961E12, 23.2], [1.701271174E12, 23.583333333333332], [1.701271133E12, 23.0], [1.701271043E12, 24.555555555555557], [1.701271002E12, 24.125000000000004], [1.701271215E12, 24.285714285714285], [1.701271084E12, 24.0], [1.701271082E12, 24.0], [1.701271164E12, 23.333333333333332], [1.701270951E12, 23.666666666666668], [1.701271033E12, 24.09090909090909], [1.701270992E12, 24.142857142857142], [1.701271205E12, 25.333333333333332], [1.701271115E12, 23.0], [1.701271074E12, 23.0], [1.701271156E12, 22.0], [1.701270943E12, 23.333333333333332], [1.701271025E12, 25.428571428571427], [1.701271238E12, 22.999999999999996], [1.701270984E12, 23.75], [1.701271197E12, 23.0], [1.701271107E12, 24.0], [1.701271066E12, 23.0], [1.701271148E12, 23.6], [1.701270935E12, 23.0], [1.701271017E12, 24.454545454545453], [1.70127123E12, 23.0], [1.701270976E12, 23.333333333333332], [1.701271189E12, 23.0], [1.701271099E12, 23.666666666666668], [1.701271058E12, 23.0], [1.70127114E12, 23.249999999999996], [1.701270927E12, 23.0], [1.701271009E12, 24.0], [1.701271222E12, 23.555555555555557], [1.701270968E12, 24.333333333333332], [1.701271181E12, 22.0], [1.701271091E12, 23.0], [1.70127105E12, 36.909090909090914], [1.701271132E12, 24.0], [1.701271001E12, 23.25], [1.701271214E12, 23.714285714285715], [1.70127096E12, 23.5], [1.701271173E12, 23.428571428571427], [1.701271083E12, 23.0], [1.701271042E12, 25.09090909090909], [1.701271081E12, 24.4], [1.70127104E12, 23.7], [1.70127095E12, 23.25], [1.701271122E12, 23.0], [1.701271204E12, 24.083333333333332], [1.701270991E12, 23.714285714285715], [1.701271073E12, 23.0], [1.701271032E12, 24.916666666666664], [1.701270942E12, 24.0], [1.701271155E12, 23.333333333333332], [1.701271114E12, 23.2], [1.701271196E12, 24.42857142857143], [1.701270983E12, 23.375], [1.701271065E12, 22.6], [1.701271024E12, 23.333333333333332], [1.701271237E12, 23.315789473684212], [1.701270934E12, 23.5], [1.701271147E12, 23.0], [1.701271106E12, 23.166666666666664], [1.701270975E12, 26.6], [1.701271057E12, 23.666666666666668], [1.701271016E12, 24.71428571428571], [1.701271229E12, 24.0], [1.701270926E12, 23.0], [1.701271139E12, 23.25], [1.70127118E12, 27.2], [1.701270967E12, 24.5], [1.701271049E12, 38.333333333333336], [1.701271008E12, 24.4], [1.701271221E12, 24.2], [1.701271131E12, 23.454545454545453], [1.70127109E12, 23.0], [1.701271172E12, 23.0], [1.701270959E12, 23.8], [1.701271041E12, 24.4], [1.701271E12, 25.75], [1.701271213E12, 24.0], [1.701271039E12, 24.071428571428573], [1.701271121E12, 24.0], [1.70127099E12, 24.0], [1.701271203E12, 23.4], [1.701270949E12, 23.25], [1.701271162E12, 23.666666666666668], [1.701271031E12, 24.571428571428573], [1.701271113E12, 24.0], [1.701271072E12, 23.0], [1.701270982E12, 23.75], [1.701271195E12, 24.583333333333332], [1.701270941E12, 23.0], [1.701271154E12, 23.71428571428571], [1.701271236E12, 25.46153846153846], [1.701271023E12, 23.857142857142858], [1.701271105E12, 26.0], [1.701271064E12, 25.0], [1.701270974E12, 23.5], [1.701271187E12, 24.0], [1.701270933E12, 27.5], [1.701271228E12, 24.0], [1.701271015E12, 23.777777777777782], [1.701271056E12, 23.71428571428571], [1.701270966E12, 24.5], [1.701271179E12, 23.5], [1.701270925E12, 53.0], [1.701271138E12, 25.0], [1.701271007E12, 23.2], [1.701271089E12, 23.461538461538463], [1.701271048E12, 23.72727272727273], [1.701270958E12, 23.0], [1.701271171E12, 25.0], [1.70127113E12, 24.0], [1.701271212E12, 22.333333333333332], [1.701270999E12, 23.555555555555557], [1.701271038E12, 24.777777777777775], [1.701270997E12, 23.142857142857146], [1.701270948E12, 22.0], [1.701271161E12, 26.375], [1.70127112E12, 23.333333333333332], [1.70127103E12, 25.363636363636363], [1.701270989E12, 23.6], [1.701271202E12, 24.5], [1.701271071E12, 24.0], [1.70127094E12, 24.0], [1.701271112E12, 25.0], [1.701271022E12, 23.571428571428573], [1.701271235E12, 23.0], [1.701270981E12, 23.666666666666668], [1.701271063E12, 24.0], [1.701270932E12, 23.0], [1.701271145E12, 22.25], [1.701271104E12, 24.0], [1.701271014E12, 24.2], [1.701270973E12, 23.333333333333332], [1.701271055E12, 24.09090909090909], [1.701271137E12, 23.5], [1.701271096E12, 24.0], [1.701271006E12, 24.8], [1.701271178E12, 23.666666666666668], [1.701271047E12, 24.583333333333336], [1.701271129E12, 24.0], [1.701271088E12, 22.75], [1.701270998E12, 25.4], [1.701271211E12, 24.0], [1.701270957E12, 24.25], [1.70127117E12, 23.0], [1.701270996E12, 22.8], [1.701271209E12, 23.22222222222222], [1.701271168E12, 23.75], [1.701271078E12, 23.0], [1.701271037E12, 23.916666666666664], [1.70127125E12, 23.5], [1.701270947E12, 23.75], [1.701270988E12, 26.142857142857142], [1.701271201E12, 24.666666666666668], [1.70127116E12, 24.7], [1.70127107E12, 24.0], [1.701271029E12, 23.555555555555557], [1.701270939E12, 24.0], [1.70127098E12, 24.6], [1.701271193E12, 23.5], [1.701271152E12, 43.0], [1.701271062E12, 23.25], [1.701271021E12, 23.6], [1.701271234E12, 24.0], [1.701270931E12, 23.5], [1.701271103E12, 23.666666666666668], [1.701270972E12, 23.25], [1.701271144E12, 23.5], [1.701271054E12, 23.8], [1.701271013E12, 24.142857142857142], [1.701271226E12, 23.0], [1.701271095E12, 24.0], [1.701270964E12, 23.0], [1.701271177E12, 23.57142857142857], [1.701271046E12, 23.69230769230769], [1.701271005E12, 24.333333333333332], [1.701271087E12, 23.0], [1.701270956E12, 23.5], [1.701271169E12, 24.166666666666664], [1.701271128E12, 26.699999999999996], [1.701270995E12, 23.857142857142858], [1.701270954E12, 23.666666666666668], [1.701271167E12, 25.0], [1.701271036E12, 23.666666666666668], [1.701271208E12, 24.0], [1.701271118E12, 23.571428571428573], [1.701270987E12, 23.0], [1.701270946E12, 24.25], [1.701271159E12, 23.5], [1.701271028E12, 24.099999999999998], [1.7012712E12, 23.999999999999996], [1.70127111E12, 24.333333333333332], [1.701271069E12, 22.5], [1.701270979E12, 23.428571428571427], [1.701270938E12, 24.0], [1.70127102E12, 23.375], [1.701271192E12, 23.615384615384613], [1.701271102E12, 23.555555555555557], [1.701271061E12, 22.714285714285715], [1.701270971E12, 24.857142857142858], [1.70127093E12, 24.0], [1.701271143E12, 23.666666666666668], [1.701271012E12, 23.76923076923077], [1.701271225E12, 24.333333333333332], [1.701271184E12, 23.4], [1.701271094E12, 23.0], [1.701271053E12, 24.076923076923073], [1.701270963E12, 23.2], [1.701271135E12, 24.545454545454543], [1.701271004E12, 23.625], [1.701271176E12, 23.666666666666668], [1.701271045E12, 23.88888888888889], [1.701270955E12, 23.333333333333332], [1.701271127E12, 23.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.70127125E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 395.0, "minX": 1.701270925E12, "maxY": 58836.0, "series": [{"data": [[1.701270953E12, 759.0], [1.701271166E12, 8502.0], [1.701271125E12, 4402.0], [1.701271035E12, 1945.0], [1.701270994E12, 879.0], [1.701271207E12, 17019.0], [1.701271076E12, 24203.0], [1.701270945E12, 779.0], [1.701271158E12, 52341.0], [1.701271027E12, 1430.0], [1.701270986E12, 2117.0], [1.701271199E12, 21832.0], [1.701271068E12, 3901.0], [1.701270937E12, 652.0], [1.701271019E12, 893.0], [1.701270978E12, 918.0], [1.701271191E12, 18167.0], [1.70127106E12, 36617.0], [1.701271232E12, 22891.0], [1.701270929E12, 613.0], [1.701271142E12, 3692.0], [1.701271011E12, 1401.0], [1.70127097E12, 779.0], [1.701271052E12, 2326.0], [1.701271224E12, 21303.0], [1.701271134E12, 3142.0], [1.701271093E12, 1145.0], [1.701271003E12, 1175.0], [1.701270962E12, 834.0], [1.701271044E12, 2884.0], [1.701271126E12, 3882.0], [1.701271085E12, 2908.0], [1.701271124E12, 41132.0], [1.701270993E12, 979.0], [1.701271206E12, 17389.0], [1.701270952E12, 969.0], [1.701271165E12, 8210.0], [1.701271075E12, 37404.0], [1.701271034E12, 2051.0], [1.701270985E12, 1807.0], [1.701271198E12, 21411.0], [1.701270944E12, 863.0], [1.701271157E12, 11945.0], [1.701271067E12, 4436.0], [1.701271026E12, 3898.0], [1.701271239E12, 35245.0], [1.701270977E12, 1092.0], [1.70127119E12, 17295.0], [1.701270936E12, 721.0], [1.701271059E12, 1705.0], [1.701271018E12, 1048.0], [1.701271231E12, 22686.0], [1.7012711E12, 58836.0], [1.701270969E12, 700.0], [1.701270928E12, 692.0], [1.701271141E12, 3765.0], [1.701271051E12, 2189.0], [1.70127101E12, 1439.0], [1.701271223E12, 20710.0], [1.701271092E12, 2311.0], [1.701270961E12, 1536.0], [1.701271174E12, 7697.0], [1.701271133E12, 3166.0], [1.701271043E12, 2180.0], [1.701271002E12, 1364.0], [1.701271215E12, 15318.0], [1.701271084E12, 3048.0], [1.701271082E12, 6299.0], [1.701271164E12, 7706.0], [1.701270951E12, 731.0], [1.701271033E12, 2080.0], [1.701270992E12, 1077.0], [1.701271205E12, 17506.0], [1.701271074E12, 6929.0], [1.701271156E12, 11996.0], [1.701270943E12, 828.0], [1.701271025E12, 3587.0], [1.701271238E12, 15114.0], [1.701270984E12, 1095.0], [1.701271197E12, 20775.0], [1.701271107E12, 869.0], [1.701271066E12, 4532.0], [1.701271148E12, 5106.0], [1.701270935E12, 423.0], [1.701271017E12, 1646.0], [1.70127123E12, 22368.0], [1.701270976E12, 1419.0], [1.701271189E12, 16689.0], [1.701271099E12, 4099.0], [1.701271058E12, 21935.0], [1.70127114E12, 54896.0], [1.701270927E12, 873.0], [1.701271009E12, 1606.0], [1.701271222E12, 21097.0], [1.701270968E12, 800.0], [1.701271091E12, 2537.0], [1.70127105E12, 2152.0], [1.701271132E12, 3171.0], [1.701271001E12, 1492.0], [1.701271214E12, 14713.0], [1.70127096E12, 1460.0], [1.701271173E12, 8006.0], [1.701271083E12, 4714.0], [1.701271042E12, 2274.0], [1.701271081E12, 6325.0], [1.70127104E12, 2080.0], [1.70127095E12, 953.0], [1.701271122E12, 8890.0], [1.701271204E12, 50287.0], [1.701270991E12, 1238.0], [1.701271073E12, 6250.0], [1.701271032E12, 1835.0], [1.701270942E12, 677.0], [1.701271155E12, 11176.0], [1.701271114E12, 1464.0], [1.701271196E12, 20125.0], [1.701270983E12, 1555.0], [1.701271065E12, 4074.0], [1.701271024E12, 3275.0], [1.701271237E12, 21822.0], [1.701270934E12, 771.0], [1.701271147E12, 4423.0], [1.701271106E12, 1518.0], [1.701270975E12, 1288.0], [1.701271057E12, 22321.0], [1.701271016E12, 1127.0], [1.701271229E12, 22228.0], [1.701270926E12, 525.0], [1.701271139E12, 5376.0], [1.70127118E12, 9057.0], [1.701270967E12, 831.0], [1.701271049E12, 1580.0], [1.701271008E12, 1372.0], [1.701271221E12, 20993.0], [1.701271131E12, 3632.0], [1.70127109E12, 3203.0], [1.701271172E12, 8274.0], [1.701270959E12, 1058.0], [1.701271041E12, 1777.0], [1.701271E12, 1415.0], [1.701271213E12, 15152.0], [1.701271039E12, 2104.0], [1.70127099E12, 1691.0], [1.701271203E12, 23143.0], [1.701270949E12, 842.0], [1.701271162E12, 7097.0], [1.701271031E12, 1612.0], [1.701271072E12, 5748.0], [1.701270982E12, 1906.0], [1.701270941E12, 685.0], [1.701271154E12, 10899.0], [1.701271236E12, 22821.0], [1.701271023E12, 2553.0], [1.701271105E12, 2191.0], [1.701271064E12, 4010.0], [1.701270974E12, 1289.0], [1.701271187E12, 15684.0], [1.701270933E12, 617.0], [1.701271228E12, 21512.0], [1.701271015E12, 1329.0], [1.701271056E12, 2937.0], [1.701270966E12, 1527.0], [1.701271179E12, 9176.0], [1.701270925E12, 762.0], [1.701271138E12, 5325.0], [1.701271007E12, 1564.0], [1.701271089E12, 36421.0], [1.701271048E12, 1494.0], [1.701270958E12, 987.0], [1.701271171E12, 8768.0], [1.70127113E12, 3598.0], [1.701271212E12, 16182.0], [1.701270999E12, 1330.0], [1.701271038E12, 2434.0], [1.701270997E12, 1435.0], [1.701270948E12, 1007.0], [1.701271161E12, 7039.0], [1.70127103E12, 1686.0], [1.701270989E12, 1668.0], [1.701271202E12, 22833.0], [1.701271071E12, 5270.0], [1.70127094E12, 765.0], [1.701271022E12, 1865.0], [1.701271235E12, 22732.0], [1.701270981E12, 1061.0], [1.701271063E12, 534.0], [1.701270932E12, 505.0], [1.701271145E12, 3760.0], [1.701271104E12, 2187.0], [1.701271014E12, 1495.0], [1.701270973E12, 1169.0], [1.701271055E12, 2890.0], [1.701271137E12, 5288.0], [1.701271006E12, 1571.0], [1.701271178E12, 8490.0], [1.701271047E12, 2208.0], [1.701271129E12, 3751.0], [1.701271088E12, 36556.0], [1.701270998E12, 1222.0], [1.701271211E12, 16132.0], [1.701270957E12, 1027.0], [1.70127117E12, 9230.0], [1.701270996E12, 1007.0], [1.701271209E12, 16688.0], [1.701271168E12, 8843.0], [1.701271078E12, 6439.0], [1.701271037E12, 2741.0], [1.701270947E12, 559.0], [1.701270988E12, 1165.0], [1.701271201E12, 22504.0], [1.70127116E12, 12370.0], [1.70127107E12, 4699.0], [1.701271029E12, 1895.0], [1.701270939E12, 716.0], [1.70127098E12, 1429.0], [1.701271193E12, 18500.0], [1.701271062E12, 1002.0], [1.701271021E12, 1551.0], [1.701271234E12, 22977.0], [1.701270931E12, 768.0], [1.701271103E12, 2152.0], [1.701270972E12, 715.0], [1.701271144E12, 3842.0], [1.701271054E12, 3003.0], [1.701271013E12, 1212.0], [1.701271226E12, 21311.0], [1.701271095E12, 691.0], [1.701270964E12, 774.0], [1.701271177E12, 8500.0], [1.701271046E12, 2273.0], [1.701271005E12, 1590.0], [1.701270956E12, 879.0], [1.701271169E12, 9347.0], [1.701271128E12, 3698.0], [1.701270995E12, 845.0], [1.701270954E12, 883.0], [1.701271167E12, 8414.0], [1.701271036E12, 2439.0], [1.701271208E12, 16638.0], [1.701271118E12, 33861.0], [1.701270987E12, 1783.0], [1.701270946E12, 668.0], [1.701271028E12, 1473.0], [1.7012712E12, 22292.0], [1.70127111E12, 448.0], [1.701271069E12, 4768.0], [1.701270979E12, 1185.0], [1.701270938E12, 505.0], [1.70127102E12, 996.0], [1.701271192E12, 18679.0], [1.701271102E12, 2700.0], [1.701271061E12, 4448.0], [1.701270971E12, 1165.0], [1.70127093E12, 885.0], [1.701271143E12, 3879.0], [1.701271012E12, 1320.0], [1.701271225E12, 21305.0], [1.701271184E12, 35577.0], [1.701271094E12, 818.0], [1.701271053E12, 2699.0], [1.701270963E12, 785.0], [1.701271135E12, 3403.0], [1.701271004E12, 1608.0], [1.701271176E12, 8171.0], [1.701271045E12, 2003.0], [1.701270955E12, 1052.0], [1.701271127E12, 3700.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.701270953E12, 555.0], [1.701271166E12, 8040.0], [1.701271125E12, 4402.0], [1.701271035E12, 1233.0], [1.701270994E12, 446.0], [1.701271207E12, 17019.0], [1.701271076E12, 7073.0], [1.701270945E12, 606.0], [1.701271158E12, 12694.0], [1.701271027E12, 637.0], [1.701270986E12, 648.0], [1.701271199E12, 21496.0], [1.701271068E12, 480.0], [1.701270937E12, 624.0], [1.701271019E12, 605.0], [1.701270978E12, 658.0], [1.701271191E12, 17934.0], [1.70127106E12, 1498.0], [1.701271232E12, 22604.0], [1.701270929E12, 613.0], [1.701271142E12, 3692.0], [1.701271011E12, 832.0], [1.70127097E12, 779.0], [1.701271052E12, 1051.0], [1.701271224E12, 20885.0], [1.701271134E12, 2923.0], [1.701271093E12, 986.0], [1.701271003E12, 622.0], [1.701270962E12, 431.0], [1.701271044E12, 684.0], [1.701271126E12, 3782.0], [1.701271085E12, 2908.0], [1.701271124E12, 8865.0], [1.701270993E12, 491.0], [1.701271206E12, 17178.0], [1.701270952E12, 541.0], [1.701271165E12, 8210.0], [1.701271075E12, 7164.0], [1.701271034E12, 1137.0], [1.701270985E12, 577.0], [1.701271198E12, 20890.0], [1.701270944E12, 863.0], [1.701271157E12, 11945.0], [1.701271067E12, 477.0], [1.701271026E12, 1302.0], [1.701271239E12, 10687.0], [1.701270977E12, 487.0], [1.70127119E12, 17295.0], [1.701270936E12, 483.0], [1.701271059E12, 1693.0], [1.701271018E12, 483.0], [1.701271231E12, 22373.0], [1.7012711E12, 40141.0], [1.701270969E12, 548.0], [1.701270928E12, 692.0], [1.701271141E12, 3521.0], [1.701271051E12, 1031.0], [1.70127101E12, 601.0], [1.701271223E12, 20700.0], [1.701271092E12, 634.0], [1.701270961E12, 628.0], [1.701271174E12, 7490.0], [1.701271133E12, 3166.0], [1.701271043E12, 1037.0], [1.701271002E12, 588.0], [1.701271215E12, 15002.0], [1.701271084E12, 2778.0], [1.701271082E12, 5933.0], [1.701271164E12, 7706.0], [1.701270951E12, 652.0], [1.701271033E12, 1076.0], [1.701270992E12, 578.0], [1.701271205E12, 17506.0], [1.701271074E12, 6929.0], [1.701271156E12, 11996.0], [1.701270943E12, 518.0], [1.701271025E12, 903.0], [1.701271238E12, 12609.0], [1.701270984E12, 818.0], [1.701271197E12, 20340.0], [1.701271107E12, 802.0], [1.701271066E12, 490.0], [1.701271148E12, 4938.0], [1.701270935E12, 423.0], [1.701271017E12, 435.0], [1.70127123E12, 22358.0], [1.701270976E12, 590.0], [1.701271189E12, 16617.0], [1.701271099E12, 4099.0], [1.701271058E12, 1640.0], [1.70127114E12, 4924.0], [1.701270927E12, 692.0], [1.701271009E12, 505.0], [1.701271222E12, 20702.0], [1.701270968E12, 476.0], [1.701271091E12, 2515.0], [1.70127105E12, 1253.0], [1.701271132E12, 2921.0], [1.701271001E12, 526.0], [1.701271214E12, 14713.0], [1.70127096E12, 459.0], [1.701271173E12, 7636.0], [1.701271083E12, 4714.0], [1.701271042E12, 560.0], [1.701271081E12, 6064.0], [1.70127104E12, 461.0], [1.70127095E12, 481.0], [1.701271122E12, 8890.0], [1.701271204E12, 20464.0], [1.701270991E12, 637.0], [1.701271073E12, 6250.0], [1.701271032E12, 1196.0], [1.701270942E12, 677.0], [1.701271155E12, 11092.0], [1.701271114E12, 1440.0], [1.701271196E12, 20107.0], [1.701270983E12, 495.0], [1.701271065E12, 522.0], [1.701271024E12, 445.0], [1.701271237E12, 15408.0], [1.701270934E12, 518.0], [1.701271147E12, 4423.0], [1.701271106E12, 1089.0], [1.701270975E12, 884.0], [1.701271057E12, 1681.0], [1.701271016E12, 505.0], [1.701271229E12, 22228.0], [1.701270926E12, 525.0], [1.701271139E12, 5069.0], [1.70127118E12, 9057.0], [1.701270967E12, 819.0], [1.701271049E12, 1205.0], [1.701271008E12, 686.0], [1.701271221E12, 20695.0], [1.701271131E12, 3344.0], [1.70127109E12, 3203.0], [1.701271172E12, 7973.0], [1.701270959E12, 470.0], [1.701271041E12, 566.0], [1.701271E12, 844.0], [1.701271213E12, 14689.0], [1.701271039E12, 731.0], [1.70127099E12, 653.0], [1.701271203E12, 22766.0], [1.701270949E12, 488.0], [1.701271162E12, 7013.0], [1.701271031E12, 1046.0], [1.701271072E12, 5748.0], [1.701270982E12, 677.0], [1.701270941E12, 522.0], [1.701271154E12, 10704.0], [1.701271236E12, 21689.0], [1.701271023E12, 478.0], [1.701271105E12, 1785.0], [1.701271064E12, 3533.0], [1.701270974E12, 642.0], [1.701271187E12, 15684.0], [1.701270933E12, 613.0], [1.701271228E12, 21504.0], [1.701271015E12, 439.0], [1.701271056E12, 1412.0], [1.701270966E12, 821.0], [1.701271179E12, 8452.0], [1.701270925E12, 762.0], [1.701271138E12, 5325.0], [1.701271007E12, 788.0], [1.701271089E12, 7516.0], [1.701271048E12, 1274.0], [1.701270958E12, 884.0], [1.701271171E12, 8768.0], [1.70127113E12, 3598.0], [1.701271212E12, 16153.0], [1.701270999E12, 523.0], [1.701271038E12, 1145.0], [1.701270997E12, 433.0], [1.701270948E12, 969.0], [1.701271161E12, 6777.0], [1.70127103E12, 660.0], [1.701270989E12, 512.0], [1.701271202E12, 22676.0], [1.701271071E12, 5270.0], [1.70127094E12, 765.0], [1.701271022E12, 632.0], [1.701271235E12, 22732.0], [1.701270981E12, 554.0], [1.701271063E12, 534.0], [1.701270932E12, 505.0], [1.701271145E12, 3508.0], [1.701271104E12, 2063.0], [1.701271014E12, 666.0], [1.701270973E12, 519.0], [1.701271055E12, 768.0], [1.701271137E12, 4868.0], [1.701271006E12, 849.0], [1.701271178E12, 8141.0], [1.701271047E12, 950.0], [1.701271129E12, 3689.0], [1.701271088E12, 19574.0], [1.701270998E12, 641.0], [1.701271211E12, 15732.0], [1.701270957E12, 505.0], [1.70127117E12, 8723.0], [1.701270996E12, 434.0], [1.701271209E12, 16324.0], [1.701271168E12, 8784.0], [1.701271078E12, 6439.0], [1.701271037E12, 1500.0], [1.701270947E12, 525.0], [1.701270988E12, 668.0], [1.701271201E12, 22201.0], [1.70127116E12, 8583.0], [1.70127107E12, 4699.0], [1.701271029E12, 562.0], [1.701270939E12, 613.0], [1.70127098E12, 552.0], [1.701271193E12, 18492.0], [1.701271062E12, 485.0], [1.701271021E12, 474.0], [1.701271234E12, 22550.0], [1.701270931E12, 517.0], [1.701271103E12, 2152.0], [1.701270972E12, 607.0], [1.701271144E12, 3610.0], [1.701271054E12, 704.0], [1.701271013E12, 532.0], [1.701271226E12, 21242.0], [1.701271095E12, 691.0], [1.701270964E12, 769.0], [1.701271177E12, 8139.0], [1.701271046E12, 893.0], [1.701271005E12, 942.0], [1.701270956E12, 873.0], [1.701271169E12, 8816.0], [1.701271128E12, 3447.0], [1.701270995E12, 395.0], [1.701270954E12, 544.0], [1.701271167E12, 8414.0], [1.701271036E12, 1579.0], [1.701271208E12, 16345.0], [1.701271118E12, 33793.0], [1.701270987E12, 953.0], [1.701270946E12, 506.0], [1.701271028E12, 648.0], [1.7012712E12, 21895.0], [1.70127111E12, 448.0], [1.701271069E12, 4322.0], [1.701270979E12, 442.0], [1.701270938E12, 505.0], [1.70127102E12, 664.0], [1.701271192E12, 18101.0], [1.701271102E12, 2124.0], [1.701271061E12, 724.0], [1.701270971E12, 540.0], [1.70127093E12, 559.0], [1.701271143E12, 3567.0], [1.701271012E12, 547.0], [1.701271225E12, 21148.0], [1.701271184E12, 34162.0], [1.701271094E12, 761.0], [1.701271053E12, 1326.0], [1.701270963E12, 505.0], [1.701271135E12, 3226.0], [1.701271004E12, 537.0], [1.701271176E12, 8171.0], [1.701271045E12, 1114.0], [1.701270955E12, 498.0], [1.701271127E12, 3700.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.701270953E12, 759.0], [1.701271166E12, 8480.8], [1.701271125E12, 4402.0], [1.701271035E12, 1945.0], [1.701270994E12, 879.0], [1.701271207E12, 17019.0], [1.701271076E12, 24203.0], [1.701270945E12, 779.0], [1.701271158E12, 52277.5], [1.701271027E12, 1430.0], [1.701270986E12, 2117.0], [1.701271199E12, 21832.0], [1.701271068E12, 3901.0], [1.701270937E12, 652.0], [1.701271019E12, 893.0], [1.701270978E12, 918.0], [1.701271191E12, 18167.0], [1.70127106E12, 36468.2], [1.701271232E12, 22891.0], [1.701270929E12, 613.0], [1.701271142E12, 3692.0], [1.701271011E12, 1401.0], [1.70127097E12, 779.0], [1.701271052E12, 2326.0], [1.701271224E12, 21303.0], [1.701271134E12, 3142.0], [1.701271093E12, 1145.0], [1.701271003E12, 1175.0], [1.701270962E12, 834.0], [1.701271044E12, 2868.6], [1.701271126E12, 3882.0], [1.701271085E12, 2908.0], [1.701271124E12, 41094.2], [1.701270993E12, 979.0], [1.701271206E12, 17389.0], [1.701270952E12, 969.0], [1.701271165E12, 8210.0], [1.701271075E12, 37404.0], [1.701271034E12, 2051.0], [1.701270985E12, 1807.0], [1.701271198E12, 21411.0], [1.701270944E12, 863.0], [1.701271157E12, 11945.0], [1.701271067E12, 4436.0], [1.701271026E12, 3818.2], [1.701271239E12, 35245.0], [1.701270977E12, 1092.0], [1.70127119E12, 17295.0], [1.701270936E12, 721.0], [1.701271059E12, 1705.0], [1.701271018E12, 1048.0], [1.701271231E12, 22682.3], [1.7012711E12, 58164.90000000001], [1.701270969E12, 700.0], [1.701270928E12, 692.0], [1.701271141E12, 3765.0], [1.701271051E12, 2188.1], [1.70127101E12, 1439.0], [1.701271223E12, 20710.0], [1.701271092E12, 2311.0], [1.701270961E12, 1536.0], [1.701271174E12, 7670.0], [1.701271133E12, 3166.0], [1.701271043E12, 2180.0], [1.701271002E12, 1364.0], [1.701271215E12, 15318.0], [1.701271084E12, 3048.0], [1.701271082E12, 6299.0], [1.701271164E12, 7706.0], [1.701270951E12, 731.0], [1.701271033E12, 2078.0], [1.701270992E12, 1077.0], [1.701271205E12, 17506.0], [1.701271074E12, 6929.0], [1.701271156E12, 11996.0], [1.701270943E12, 828.0], [1.701271025E12, 3587.0], [1.701271238E12, 15058.0], [1.701270984E12, 1095.0], [1.701271197E12, 20775.0], [1.701271107E12, 869.0], [1.701271066E12, 4532.0], [1.701271148E12, 5106.0], [1.701270935E12, 423.0], [1.701271017E12, 1644.8], [1.70127123E12, 22368.0], [1.701270976E12, 1419.0], [1.701271189E12, 16689.0], [1.701271099E12, 4099.0], [1.701271058E12, 21935.0], [1.70127114E12, 52921.100000000006], [1.701270927E12, 873.0], [1.701271009E12, 1606.0], [1.701271222E12, 21097.0], [1.701270968E12, 800.0], [1.701271091E12, 2537.0], [1.70127105E12, 2131.4], [1.701271132E12, 3171.0], [1.701271001E12, 1492.0], [1.701271214E12, 14713.0], [1.70127096E12, 1460.0], [1.701271173E12, 8006.0], [1.701271083E12, 4714.0], [1.701271042E12, 2260.8], [1.701271081E12, 6325.0], [1.70127104E12, 2037.9], [1.70127095E12, 953.0], [1.701271122E12, 8890.0], [1.701271204E12, 50269.2], [1.701270991E12, 1238.0], [1.701271073E12, 6250.0], [1.701271032E12, 1735.1000000000004], [1.701270942E12, 677.0], [1.701271155E12, 11176.0], [1.701271114E12, 1464.0], [1.701271196E12, 20125.0], [1.701270983E12, 1555.0], [1.701271065E12, 4074.0], [1.701271024E12, 3275.0], [1.701271237E12, 21760.0], [1.701270934E12, 771.0], [1.701271147E12, 4423.0], [1.701271106E12, 1518.0], [1.701270975E12, 1288.0], [1.701271057E12, 22321.0], [1.701271016E12, 1127.0], [1.701271229E12, 22228.0], [1.701270926E12, 525.0], [1.701271139E12, 5376.0], [1.70127118E12, 9057.0], [1.701270967E12, 831.0], [1.701271049E12, 1580.0], [1.701271008E12, 1368.9], [1.701271221E12, 20993.0], [1.701271131E12, 3606.4], [1.70127109E12, 3203.0], [1.701271172E12, 8274.0], [1.701270959E12, 1058.0], [1.701271041E12, 1776.5], [1.701271E12, 1415.0], [1.701271213E12, 15152.0], [1.701271039E12, 2103.0], [1.70127099E12, 1689.8], [1.701271203E12, 23143.0], [1.701270949E12, 842.0], [1.701271162E12, 7097.0], [1.701271031E12, 1612.0], [1.701271072E12, 5748.0], [1.701270982E12, 1906.0], [1.701270941E12, 685.0], [1.701271154E12, 10899.0], [1.701271236E12, 22803.0], [1.701271023E12, 2553.0], [1.701271105E12, 2191.0], [1.701271064E12, 4010.0], [1.701270974E12, 1289.0], [1.701271187E12, 15684.0], [1.701270933E12, 617.0], [1.701271228E12, 21512.0], [1.701271015E12, 1329.0], [1.701271056E12, 2937.0], [1.701270966E12, 1527.0], [1.701271179E12, 9176.0], [1.701270925E12, 762.0], [1.701271138E12, 5325.0], [1.701271007E12, 1551.2], [1.701271089E12, 29793.399999999994], [1.701271048E12, 1489.6], [1.701270958E12, 987.0], [1.701271171E12, 8768.0], [1.70127113E12, 3598.0], [1.701271212E12, 16182.0], [1.701270999E12, 1330.0], [1.701271038E12, 2434.0], [1.701270997E12, 1435.0], [1.701270948E12, 1007.0], [1.701271161E12, 7039.0], [1.70127103E12, 1661.8000000000002], [1.701270989E12, 1668.0], [1.701271202E12, 22833.0], [1.701271071E12, 5270.0], [1.70127094E12, 765.0], [1.701271022E12, 1865.0], [1.701271235E12, 22732.0], [1.701270981E12, 1061.0], [1.701271063E12, 534.0], [1.701270932E12, 505.0], [1.701271145E12, 3760.0], [1.701271104E12, 2187.0], [1.701271014E12, 1490.3], [1.701270973E12, 1169.0], [1.701271055E12, 2890.0], [1.701271137E12, 5288.0], [1.701271006E12, 1555.9], [1.701271178E12, 8490.0], [1.701271047E12, 2206.8], [1.701271129E12, 3751.0], [1.701271088E12, 36556.0], [1.701270998E12, 1222.0], [1.701271211E12, 16132.0], [1.701270957E12, 1027.0], [1.70127117E12, 9230.0], [1.701270996E12, 1007.0], [1.701271209E12, 16688.0], [1.701271168E12, 8843.0], [1.701271078E12, 6439.0], [1.701271037E12, 2735.0], [1.701270947E12, 559.0], [1.701270988E12, 1165.0], [1.701271201E12, 22504.0], [1.70127116E12, 12370.0], [1.70127107E12, 4699.0], [1.701271029E12, 1895.0], [1.701270939E12, 716.0], [1.70127098E12, 1429.0], [1.701271193E12, 18500.0], [1.701271062E12, 1002.0], [1.701271021E12, 1545.0], [1.701271234E12, 22977.0], [1.701270931E12, 768.0], [1.701271103E12, 2152.0], [1.701270972E12, 715.0], [1.701271144E12, 3842.0], [1.701271054E12, 2991.5], [1.701271013E12, 1212.0], [1.701271226E12, 21311.0], [1.701271095E12, 691.0], [1.701270964E12, 774.0], [1.701271177E12, 8500.0], [1.701271046E12, 2237.0], [1.701271005E12, 1590.0], [1.701270956E12, 879.0], [1.701271169E12, 9347.0], [1.701271128E12, 3694.3], [1.701270995E12, 845.0], [1.701270954E12, 883.0], [1.701271167E12, 8414.0], [1.701271036E12, 2439.0], [1.701271208E12, 16638.0], [1.701271118E12, 33861.0], [1.701270987E12, 1783.0], [1.701270946E12, 668.0], [1.701271028E12, 1463.8], [1.7012712E12, 22286.8], [1.70127111E12, 448.0], [1.701271069E12, 4768.0], [1.701270979E12, 1185.0], [1.701270938E12, 505.0], [1.70127102E12, 996.0], [1.701271192E12, 18646.6], [1.701271102E12, 2700.0], [1.701271061E12, 4448.0], [1.701270971E12, 1165.0], [1.70127093E12, 885.0], [1.701271143E12, 3879.0], [1.701271012E12, 1310.0], [1.701271225E12, 21305.0], [1.701271184E12, 35577.0], [1.701271094E12, 818.0], [1.701271053E12, 2620.6], [1.701270963E12, 785.0], [1.701271135E12, 3403.0], [1.701271004E12, 1608.0], [1.701271176E12, 8171.0], [1.701271045E12, 2003.0], [1.701270955E12, 1052.0], [1.701271127E12, 3700.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.701270953E12, 759.0], [1.701271166E12, 8502.0], [1.701271125E12, 4402.0], [1.701271035E12, 1945.0], [1.701270994E12, 879.0], [1.701271207E12, 17019.0], [1.701271076E12, 24203.0], [1.701270945E12, 779.0], [1.701271158E12, 52341.0], [1.701271027E12, 1430.0], [1.701270986E12, 2117.0], [1.701271199E12, 21832.0], [1.701271068E12, 3901.0], [1.701270937E12, 652.0], [1.701271019E12, 893.0], [1.701270978E12, 918.0], [1.701271191E12, 18167.0], [1.70127106E12, 36617.0], [1.701271232E12, 22891.0], [1.701270929E12, 613.0], [1.701271142E12, 3692.0], [1.701271011E12, 1401.0], [1.70127097E12, 779.0], [1.701271052E12, 2326.0], [1.701271224E12, 21303.0], [1.701271134E12, 3142.0], [1.701271093E12, 1145.0], [1.701271003E12, 1175.0], [1.701270962E12, 834.0], [1.701271044E12, 2884.0], [1.701271126E12, 3882.0], [1.701271085E12, 2908.0], [1.701271124E12, 41132.0], [1.701270993E12, 979.0], [1.701271206E12, 17389.0], [1.701270952E12, 969.0], [1.701271165E12, 8210.0], [1.701271075E12, 37404.0], [1.701271034E12, 2051.0], [1.701270985E12, 1807.0], [1.701271198E12, 21411.0], [1.701270944E12, 863.0], [1.701271157E12, 11945.0], [1.701271067E12, 4436.0], [1.701271026E12, 3898.0], [1.701271239E12, 35245.0], [1.701270977E12, 1092.0], [1.70127119E12, 17295.0], [1.701270936E12, 721.0], [1.701271059E12, 1705.0], [1.701271018E12, 1048.0], [1.701271231E12, 22686.0], [1.7012711E12, 58836.0], [1.701270969E12, 700.0], [1.701270928E12, 692.0], [1.701271141E12, 3765.0], [1.701271051E12, 2189.0], [1.70127101E12, 1439.0], [1.701271223E12, 20710.0], [1.701271092E12, 2311.0], [1.701270961E12, 1536.0], [1.701271174E12, 7697.0], [1.701271133E12, 3166.0], [1.701271043E12, 2180.0], [1.701271002E12, 1364.0], [1.701271215E12, 15318.0], [1.701271084E12, 3048.0], [1.701271082E12, 6299.0], [1.701271164E12, 7706.0], [1.701270951E12, 731.0], [1.701271033E12, 2080.0], [1.701270992E12, 1077.0], [1.701271205E12, 17506.0], [1.701271074E12, 6929.0], [1.701271156E12, 11996.0], [1.701270943E12, 828.0], [1.701271025E12, 3587.0], [1.701271238E12, 15114.0], [1.701270984E12, 1095.0], [1.701271197E12, 20775.0], [1.701271107E12, 869.0], [1.701271066E12, 4532.0], [1.701271148E12, 5106.0], [1.701270935E12, 423.0], [1.701271017E12, 1646.0], [1.70127123E12, 22368.0], [1.701270976E12, 1419.0], [1.701271189E12, 16689.0], [1.701271099E12, 4099.0], [1.701271058E12, 21935.0], [1.70127114E12, 54896.0], [1.701270927E12, 873.0], [1.701271009E12, 1606.0], [1.701271222E12, 21097.0], [1.701270968E12, 800.0], [1.701271091E12, 2537.0], [1.70127105E12, 2152.0], [1.701271132E12, 3171.0], [1.701271001E12, 1492.0], [1.701271214E12, 14713.0], [1.70127096E12, 1460.0], [1.701271173E12, 8006.0], [1.701271083E12, 4714.0], [1.701271042E12, 2274.0], [1.701271081E12, 6325.0], [1.70127104E12, 2080.0], [1.70127095E12, 953.0], [1.701271122E12, 8890.0], [1.701271204E12, 50287.0], [1.701270991E12, 1238.0], [1.701271073E12, 6250.0], [1.701271032E12, 1835.0], [1.701270942E12, 677.0], [1.701271155E12, 11176.0], [1.701271114E12, 1464.0], [1.701271196E12, 20125.0], [1.701270983E12, 1555.0], [1.701271065E12, 4074.0], [1.701271024E12, 3275.0], [1.701271237E12, 21822.0], [1.701270934E12, 771.0], [1.701271147E12, 4423.0], [1.701271106E12, 1518.0], [1.701270975E12, 1288.0], [1.701271057E12, 22321.0], [1.701271016E12, 1127.0], [1.701271229E12, 22228.0], [1.701270926E12, 525.0], [1.701271139E12, 5376.0], [1.70127118E12, 9057.0], [1.701270967E12, 831.0], [1.701271049E12, 1580.0], [1.701271008E12, 1372.0], [1.701271221E12, 20993.0], [1.701271131E12, 3632.0], [1.70127109E12, 3203.0], [1.701271172E12, 8274.0], [1.701270959E12, 1058.0], [1.701271041E12, 1777.0], [1.701271E12, 1415.0], [1.701271213E12, 15152.0], [1.701271039E12, 2104.0], [1.70127099E12, 1691.0], [1.701271203E12, 23143.0], [1.701270949E12, 842.0], [1.701271162E12, 7097.0], [1.701271031E12, 1612.0], [1.701271072E12, 5748.0], [1.701270982E12, 1906.0], [1.701270941E12, 685.0], [1.701271154E12, 10899.0], [1.701271236E12, 22821.0], [1.701271023E12, 2553.0], [1.701271105E12, 2191.0], [1.701271064E12, 4010.0], [1.701270974E12, 1289.0], [1.701271187E12, 15684.0], [1.701270933E12, 617.0], [1.701271228E12, 21512.0], [1.701271015E12, 1329.0], [1.701271056E12, 2937.0], [1.701270966E12, 1527.0], [1.701271179E12, 9176.0], [1.701270925E12, 762.0], [1.701271138E12, 5325.0], [1.701271007E12, 1564.0], [1.701271089E12, 36421.0], [1.701271048E12, 1494.0], [1.701270958E12, 987.0], [1.701271171E12, 8768.0], [1.70127113E12, 3598.0], [1.701271212E12, 16182.0], [1.701270999E12, 1330.0], [1.701271038E12, 2434.0], [1.701270997E12, 1435.0], [1.701270948E12, 1007.0], [1.701271161E12, 7039.0], [1.70127103E12, 1686.0], [1.701270989E12, 1668.0], [1.701271202E12, 22833.0], [1.701271071E12, 5270.0], [1.70127094E12, 765.0], [1.701271022E12, 1865.0], [1.701271235E12, 22732.0], [1.701270981E12, 1061.0], [1.701271063E12, 534.0], [1.701270932E12, 505.0], [1.701271145E12, 3760.0], [1.701271104E12, 2187.0], [1.701271014E12, 1495.0], [1.701270973E12, 1169.0], [1.701271055E12, 2890.0], [1.701271137E12, 5288.0], [1.701271006E12, 1571.0], [1.701271178E12, 8490.0], [1.701271047E12, 2208.0], [1.701271129E12, 3751.0], [1.701271088E12, 36556.0], [1.701270998E12, 1222.0], [1.701271211E12, 16132.0], [1.701270957E12, 1027.0], [1.70127117E12, 9230.0], [1.701270996E12, 1007.0], [1.701271209E12, 16688.0], [1.701271168E12, 8843.0], [1.701271078E12, 6439.0], [1.701271037E12, 2741.0], [1.701270947E12, 559.0], [1.701270988E12, 1165.0], [1.701271201E12, 22504.0], [1.70127116E12, 12370.0], [1.70127107E12, 4699.0], [1.701271029E12, 1895.0], [1.701270939E12, 716.0], [1.70127098E12, 1429.0], [1.701271193E12, 18500.0], [1.701271062E12, 1002.0], [1.701271021E12, 1551.0], [1.701271234E12, 22977.0], [1.701270931E12, 768.0], [1.701271103E12, 2152.0], [1.701270972E12, 715.0], [1.701271144E12, 3842.0], [1.701271054E12, 3003.0], [1.701271013E12, 1212.0], [1.701271226E12, 21311.0], [1.701271095E12, 691.0], [1.701270964E12, 774.0], [1.701271177E12, 8500.0], [1.701271046E12, 2273.0], [1.701271005E12, 1590.0], [1.701270956E12, 879.0], [1.701271169E12, 9347.0], [1.701271128E12, 3698.0], [1.701270995E12, 845.0], [1.701270954E12, 883.0], [1.701271167E12, 8414.0], [1.701271036E12, 2439.0], [1.701271208E12, 16638.0], [1.701271118E12, 33861.0], [1.701270987E12, 1783.0], [1.701270946E12, 668.0], [1.701271028E12, 1473.0], [1.7012712E12, 22292.0], [1.70127111E12, 448.0], [1.701271069E12, 4768.0], [1.701270979E12, 1185.0], [1.701270938E12, 505.0], [1.70127102E12, 996.0], [1.701271192E12, 18679.0], [1.701271102E12, 2700.0], [1.701271061E12, 4448.0], [1.701270971E12, 1165.0], [1.70127093E12, 885.0], [1.701271143E12, 3879.0], [1.701271012E12, 1320.0], [1.701271225E12, 21305.0], [1.701271184E12, 35577.0], [1.701271094E12, 818.0], [1.701271053E12, 2699.0], [1.701270963E12, 785.0], [1.701271135E12, 3403.0], [1.701271004E12, 1608.0], [1.701271176E12, 8171.0], [1.701271045E12, 2003.0], [1.701270955E12, 1052.0], [1.701271127E12, 3700.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.701270953E12, 657.0], [1.701271166E12, 8266.0], [1.701271125E12, 4402.0], [1.701271035E12, 1602.0], [1.701270994E12, 633.5], [1.701271207E12, 17019.0], [1.701271076E12, 15638.0], [1.701270945E12, 681.0], [1.701271158E12, 46901.5], [1.701271027E12, 982.5], [1.701270986E12, 865.0], [1.701271199E12, 21554.5], [1.701271068E12, 2190.5], [1.701270937E12, 638.0], [1.701271019E12, 807.5], [1.701270978E12, 896.0], [1.701271191E12, 18050.5], [1.70127106E12, 4657.0], [1.701271232E12, 22695.0], [1.701270929E12, 613.0], [1.701271142E12, 3692.0], [1.701271011E12, 1224.0], [1.70127097E12, 779.0], [1.701271052E12, 1348.5], [1.701271224E12, 21100.0], [1.701271134E12, 3033.0], [1.701271093E12, 1065.5], [1.701271003E12, 928.0], [1.701270962E12, 669.0], [1.701271044E12, 1705.0], [1.701271126E12, 3832.0], [1.701271085E12, 2908.0], [1.701271124E12, 39404.0], [1.701270993E12, 596.0], [1.701271206E12, 17283.5], [1.701270952E12, 682.0], [1.701271165E12, 8210.0], [1.701271075E12, 34462.0], [1.701271034E12, 1404.0], [1.701270985E12, 715.0], [1.701271198E12, 21196.0], [1.701270944E12, 863.0], [1.701271157E12, 11945.0], [1.701271067E12, 543.0], [1.701271026E12, 1827.0], [1.701271239E12, 34863.0], [1.701270977E12, 865.5], [1.70127119E12, 17295.0], [1.701270936E12, 602.0], [1.701271059E12, 1699.0], [1.701271018E12, 903.0], [1.701271231E12, 22535.0], [1.7012711E12, 44366.0], [1.701270969E12, 615.0], [1.701270928E12, 692.0], [1.701271141E12, 3643.0], [1.701271051E12, 1999.5], [1.70127101E12, 833.0], [1.701271223E12, 20705.0], [1.701271092E12, 1599.5], [1.701270961E12, 1016.0], [1.701271174E12, 7581.0], [1.701271133E12, 3166.0], [1.701271043E12, 1206.0], [1.701271002E12, 1070.5], [1.701271215E12, 15189.0], [1.701271084E12, 2913.0], [1.701271082E12, 6162.0], [1.701271164E12, 7706.0], [1.701270951E12, 680.0], [1.701271033E12, 1394.0], [1.701270992E12, 747.0], [1.701271205E12, 17506.0], [1.701271074E12, 6929.0], [1.701271156E12, 11996.0], [1.701270943E12, 721.0], [1.701271025E12, 2797.0], [1.701271238E12, 13929.5], [1.701270984E12, 1050.0], [1.701271197E12, 20557.5], [1.701271107E12, 835.5], [1.701271066E12, 573.0], [1.701271148E12, 5013.0], [1.701270935E12, 423.0], [1.701271017E12, 1144.0], [1.70127123E12, 22363.0], [1.701270976E12, 1143.5], [1.701271189E12, 16653.0], [1.701271099E12, 4099.0], [1.701271058E12, 11802.5], [1.70127114E12, 25419.0], [1.701270927E12, 782.5], [1.701271009E12, 1491.0], [1.701271222E12, 20897.0], [1.701270968E12, 654.0], [1.701271091E12, 2526.0], [1.70127105E12, 1349.0], [1.701271132E12, 3046.0], [1.701271001E12, 964.5], [1.701271214E12, 14713.0], [1.70127096E12, 537.0], [1.701271173E12, 7706.5], [1.701271083E12, 4714.0], [1.701271042E12, 1201.0], [1.701271081E12, 6212.0], [1.70127104E12, 1500.0], [1.70127095E12, 775.5], [1.701271122E12, 8890.0], [1.701271204E12, 22174.0], [1.701270991E12, 1012.0], [1.701271073E12, 6250.0], [1.701271032E12, 1422.5], [1.701270942E12, 677.0], [1.701271155E12, 11093.0], [1.701271114E12, 1452.0], [1.701271196E12, 20116.0], [1.701270983E12, 967.0], [1.701271065E12, 3973.0], [1.701271024E12, 2680.0], [1.701271237E12, 15792.0], [1.701270934E12, 644.5], [1.701271147E12, 4423.0], [1.701271106E12, 1311.0], [1.701270975E12, 1202.0], [1.701271057E12, 1702.0], [1.701271016E12, 1074.0], [1.701271229E12, 22228.0], [1.701270926E12, 525.0], [1.701271139E12, 5370.5], [1.70127118E12, 9057.0], [1.701270967E12, 829.0], [1.701271049E12, 1389.0], [1.701271008E12, 875.0], [1.701271221E12, 20799.0], [1.701271131E12, 3413.0], [1.70127109E12, 3203.0], [1.701271172E12, 8123.5], [1.701270959E12, 676.0], [1.701271041E12, 1390.5], [1.701271E12, 1055.0], [1.701271213E12, 14805.0], [1.701271039E12, 1586.0], [1.70127099E12, 1027.0], [1.701271203E12, 22938.5], [1.701270949E12, 703.0], [1.701271162E12, 7031.0], [1.701271031E12, 1415.0], [1.701271072E12, 5748.0], [1.701270982E12, 1611.5], [1.701270941E12, 587.0], [1.701271154E12, 10806.5], [1.701271236E12, 22696.0], [1.701271023E12, 539.0], [1.701271105E12, 2106.0], [1.701271064E12, 3803.0], [1.701270974E12, 905.0], [1.701271187E12, 15684.0], [1.701270933E12, 615.0], [1.701271228E12, 21508.0], [1.701271015E12, 1139.0], [1.701271056E12, 1708.0], [1.701270966E12, 1501.5], [1.701271179E12, 8707.0], [1.701270925E12, 762.0], [1.701271138E12, 5325.0], [1.701271007E12, 1198.0], [1.701271089E12, 13770.0], [1.701271048E12, 1351.0], [1.701270958E12, 935.5], [1.701271171E12, 8768.0], [1.70127113E12, 3598.0], [1.701271212E12, 16163.0], [1.701270999E12, 1027.0], [1.701271038E12, 1458.0], [1.701270997E12, 1184.0], [1.701270948E12, 988.0], [1.701271161E12, 6893.0], [1.70127103E12, 1154.0], [1.701270989E12, 1027.0], [1.701271202E12, 22761.0], [1.701271071E12, 5270.0], [1.70127094E12, 765.0], [1.701271022E12, 1613.0], [1.701271235E12, 22732.0], [1.701270981E12, 611.0], [1.701271063E12, 534.0], [1.701270932E12, 505.0], [1.701271145E12, 3634.0], [1.701271104E12, 2088.0], [1.701271014E12, 801.0], [1.701270973E12, 1128.0], [1.701271055E12, 1563.5], [1.701271137E12, 5078.0], [1.701271006E12, 1347.5], [1.701271178E12, 8256.0], [1.701271047E12, 1214.5], [1.701271129E12, 3720.0], [1.701271088E12, 28065.0], [1.701270998E12, 664.0], [1.701271211E12, 15830.0], [1.701270957E12, 798.0], [1.70127117E12, 9106.0], [1.701270996E12, 666.0], [1.701271209E12, 16511.0], [1.701271168E12, 8797.0], [1.701271078E12, 6439.0], [1.701271037E12, 1793.5], [1.701270947E12, 534.5], [1.701270988E12, 952.0], [1.701271201E12, 22409.0], [1.70127116E12, 12205.0], [1.70127107E12, 4699.0], [1.701271029E12, 1362.0], [1.701270939E12, 664.5], [1.70127098E12, 1406.0], [1.701271193E12, 18496.0], [1.701271062E12, 802.5], [1.701271021E12, 1007.5], [1.701271234E12, 22644.0], [1.701270931E12, 642.5], [1.701271103E12, 2152.0], [1.701270972E12, 693.0], [1.701271144E12, 3781.0], [1.701271054E12, 1465.0], [1.701271013E12, 804.0], [1.701271226E12, 21293.0], [1.701271095E12, 691.0], [1.701270964E12, 771.5], [1.701271177E12, 8294.5], [1.701271046E12, 1079.0], [1.701271005E12, 1491.0], [1.701270956E12, 876.0], [1.701271169E12, 9217.0], [1.701271128E12, 3498.0], [1.701270995E12, 529.0], [1.701270954E12, 670.0], [1.701271167E12, 8414.0], [1.701271036E12, 1696.0], [1.701271208E12, 16447.5], [1.701271118E12, 33827.0], [1.701270987E12, 1296.0], [1.701270946E12, 602.5], [1.701271028E12, 1075.5], [1.7012712E12, 22091.5], [1.70127111E12, 448.0], [1.701271069E12, 4545.0], [1.701270979E12, 594.0], [1.701270938E12, 505.0], [1.70127102E12, 850.0], [1.701271192E12, 18338.0], [1.701271102E12, 2222.5], [1.701271061E12, 891.0], [1.701270971E12, 608.0], [1.70127093E12, 722.0], [1.701271143E12, 3629.0], [1.701271012E12, 1117.0], [1.701271225E12, 21236.0], [1.701271184E12, 35258.0], [1.701271094E12, 789.5], [1.701271053E12, 1787.0], [1.701270963E12, 633.0], [1.701271135E12, 3332.0], [1.701271004E12, 1137.0], [1.701271176E12, 8171.0], [1.701271045E12, 1801.0], [1.701270955E12, 948.0], [1.701271127E12, 3700.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.701270953E12, 759.0], [1.701271166E12, 8502.0], [1.701271125E12, 4402.0], [1.701271035E12, 1945.0], [1.701270994E12, 879.0], [1.701271207E12, 17019.0], [1.701271076E12, 24203.0], [1.701270945E12, 779.0], [1.701271158E12, 52341.0], [1.701271027E12, 1430.0], [1.701270986E12, 2117.0], [1.701271199E12, 21832.0], [1.701271068E12, 3901.0], [1.701270937E12, 652.0], [1.701271019E12, 893.0], [1.701270978E12, 918.0], [1.701271191E12, 18167.0], [1.70127106E12, 36617.0], [1.701271232E12, 22891.0], [1.701270929E12, 613.0], [1.701271142E12, 3692.0], [1.701271011E12, 1401.0], [1.70127097E12, 779.0], [1.701271052E12, 2326.0], [1.701271224E12, 21303.0], [1.701271134E12, 3142.0], [1.701271093E12, 1145.0], [1.701271003E12, 1175.0], [1.701270962E12, 834.0], [1.701271044E12, 2884.0], [1.701271126E12, 3882.0], [1.701271085E12, 2908.0], [1.701271124E12, 41132.0], [1.701270993E12, 979.0], [1.701271206E12, 17389.0], [1.701270952E12, 969.0], [1.701271165E12, 8210.0], [1.701271075E12, 37404.0], [1.701271034E12, 2051.0], [1.701270985E12, 1807.0], [1.701271198E12, 21411.0], [1.701270944E12, 863.0], [1.701271157E12, 11945.0], [1.701271067E12, 4436.0], [1.701271026E12, 3898.0], [1.701271239E12, 35245.0], [1.701270977E12, 1092.0], [1.70127119E12, 17295.0], [1.701270936E12, 721.0], [1.701271059E12, 1705.0], [1.701271018E12, 1048.0], [1.701271231E12, 22686.0], [1.7012711E12, 58816.65], [1.701270969E12, 700.0], [1.701270928E12, 692.0], [1.701271141E12, 3765.0], [1.701271051E12, 2189.0], [1.70127101E12, 1439.0], [1.701271223E12, 20710.0], [1.701271092E12, 2311.0], [1.701270961E12, 1536.0], [1.701271174E12, 7697.0], [1.701271133E12, 3166.0], [1.701271043E12, 2180.0], [1.701271002E12, 1364.0], [1.701271215E12, 15318.0], [1.701271084E12, 3048.0], [1.701271082E12, 6299.0], [1.701271164E12, 7706.0], [1.701270951E12, 731.0], [1.701271033E12, 2080.0], [1.701270992E12, 1077.0], [1.701271205E12, 17506.0], [1.701271074E12, 6929.0], [1.701271156E12, 11996.0], [1.701270943E12, 828.0], [1.701271025E12, 3587.0], [1.701271238E12, 15114.0], [1.701270984E12, 1095.0], [1.701271197E12, 20775.0], [1.701271107E12, 869.0], [1.701271066E12, 4532.0], [1.701271148E12, 5106.0], [1.701270935E12, 423.0], [1.701271017E12, 1646.0], [1.70127123E12, 22368.0], [1.701270976E12, 1419.0], [1.701271189E12, 16689.0], [1.701271099E12, 4099.0], [1.701271058E12, 21935.0], [1.70127114E12, 54896.0], [1.701270927E12, 873.0], [1.701271009E12, 1606.0], [1.701271222E12, 21097.0], [1.701270968E12, 800.0], [1.701271091E12, 2537.0], [1.70127105E12, 2152.0], [1.701271132E12, 3171.0], [1.701271001E12, 1492.0], [1.701271214E12, 14713.0], [1.70127096E12, 1460.0], [1.701271173E12, 8006.0], [1.701271083E12, 4714.0], [1.701271042E12, 2274.0], [1.701271081E12, 6325.0], [1.70127104E12, 2080.0], [1.70127095E12, 953.0], [1.701271122E12, 8890.0], [1.701271204E12, 50287.0], [1.701270991E12, 1238.0], [1.701271073E12, 6250.0], [1.701271032E12, 1835.0], [1.701270942E12, 677.0], [1.701271155E12, 11176.0], [1.701271114E12, 1464.0], [1.701271196E12, 20125.0], [1.701270983E12, 1555.0], [1.701271065E12, 4074.0], [1.701271024E12, 3275.0], [1.701271237E12, 21822.0], [1.701270934E12, 771.0], [1.701271147E12, 4423.0], [1.701271106E12, 1518.0], [1.701270975E12, 1288.0], [1.701271057E12, 22321.0], [1.701271016E12, 1127.0], [1.701271229E12, 22228.0], [1.701270926E12, 525.0], [1.701271139E12, 5376.0], [1.70127118E12, 9057.0], [1.701270967E12, 831.0], [1.701271049E12, 1580.0], [1.701271008E12, 1372.0], [1.701271221E12, 20993.0], [1.701271131E12, 3632.0], [1.70127109E12, 3203.0], [1.701271172E12, 8274.0], [1.701270959E12, 1058.0], [1.701271041E12, 1777.0], [1.701271E12, 1415.0], [1.701271213E12, 15152.0], [1.701271039E12, 2104.0], [1.70127099E12, 1691.0], [1.701271203E12, 23143.0], [1.701270949E12, 842.0], [1.701271162E12, 7097.0], [1.701271031E12, 1612.0], [1.701271072E12, 5748.0], [1.701270982E12, 1906.0], [1.701270941E12, 685.0], [1.701271154E12, 10899.0], [1.701271236E12, 22817.15], [1.701271023E12, 2553.0], [1.701271105E12, 2191.0], [1.701271064E12, 4010.0], [1.701270974E12, 1289.0], [1.701271187E12, 15684.0], [1.701270933E12, 617.0], [1.701271228E12, 21512.0], [1.701271015E12, 1329.0], [1.701271056E12, 2937.0], [1.701270966E12, 1527.0], [1.701271179E12, 9176.0], [1.701270925E12, 762.0], [1.701271138E12, 5325.0], [1.701271007E12, 1564.0], [1.701271089E12, 36421.0], [1.701271048E12, 1494.0], [1.701270958E12, 987.0], [1.701271171E12, 8768.0], [1.70127113E12, 3598.0], [1.701271212E12, 16182.0], [1.701270999E12, 1330.0], [1.701271038E12, 2434.0], [1.701270997E12, 1435.0], [1.701270948E12, 1007.0], [1.701271161E12, 7039.0], [1.70127103E12, 1686.0], [1.701270989E12, 1668.0], [1.701271202E12, 22833.0], [1.701271071E12, 5270.0], [1.70127094E12, 765.0], [1.701271022E12, 1865.0], [1.701271235E12, 22732.0], [1.701270981E12, 1061.0], [1.701271063E12, 534.0], [1.701270932E12, 505.0], [1.701271145E12, 3760.0], [1.701271104E12, 2187.0], [1.701271014E12, 1495.0], [1.701270973E12, 1169.0], [1.701271055E12, 2890.0], [1.701271137E12, 5288.0], [1.701271006E12, 1571.0], [1.701271178E12, 8490.0], [1.701271047E12, 2208.0], [1.701271129E12, 3751.0], [1.701271088E12, 36556.0], [1.701270998E12, 1222.0], [1.701271211E12, 16132.0], [1.701270957E12, 1027.0], [1.70127117E12, 9230.0], [1.701270996E12, 1007.0], [1.701271209E12, 16688.0], [1.701271168E12, 8843.0], [1.701271078E12, 6439.0], [1.701271037E12, 2741.0], [1.701270947E12, 559.0], [1.701270988E12, 1165.0], [1.701271201E12, 22504.0], [1.70127116E12, 12370.0], [1.70127107E12, 4699.0], [1.701271029E12, 1895.0], [1.701270939E12, 716.0], [1.70127098E12, 1429.0], [1.701271193E12, 18500.0], [1.701271062E12, 1002.0], [1.701271021E12, 1551.0], [1.701271234E12, 22977.0], [1.701270931E12, 768.0], [1.701271103E12, 2152.0], [1.701270972E12, 715.0], [1.701271144E12, 3842.0], [1.701271054E12, 3003.0], [1.701271013E12, 1212.0], [1.701271226E12, 21311.0], [1.701271095E12, 691.0], [1.701270964E12, 774.0], [1.701271177E12, 8500.0], [1.701271046E12, 2273.0], [1.701271005E12, 1590.0], [1.701270956E12, 879.0], [1.701271169E12, 9347.0], [1.701271128E12, 3698.0], [1.701270995E12, 845.0], [1.701270954E12, 883.0], [1.701271167E12, 8414.0], [1.701271036E12, 2439.0], [1.701271208E12, 16638.0], [1.701271118E12, 33861.0], [1.701270987E12, 1783.0], [1.701270946E12, 668.0], [1.701271028E12, 1473.0], [1.7012712E12, 22292.0], [1.70127111E12, 448.0], [1.701271069E12, 4768.0], [1.701270979E12, 1185.0], [1.701270938E12, 505.0], [1.70127102E12, 996.0], [1.701271192E12, 18679.0], [1.701271102E12, 2700.0], [1.701271061E12, 4448.0], [1.701270971E12, 1165.0], [1.70127093E12, 885.0], [1.701271143E12, 3879.0], [1.701271012E12, 1320.0], [1.701271225E12, 21305.0], [1.701271184E12, 35577.0], [1.701271094E12, 818.0], [1.701271053E12, 2699.0], [1.701270963E12, 785.0], [1.701271135E12, 3403.0], [1.701271004E12, 1608.0], [1.701271176E12, 8171.0], [1.701271045E12, 2003.0], [1.701270955E12, 1052.0], [1.701271127E12, 3700.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.701271239E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 1002.0, "minX": 1.0, "maxY": 60026.0, "series": [{"data": [[2.0, 2729.0], [8.0, 1037.0], [9.0, 1697.5], [10.0, 1374.5], [11.0, 1434.0], [3.0, 1061.0], [12.0, 2189.0], [13.0, 1809.0], [14.0, 8294.5], [15.0, 1979.0], [1.0, 4402.0], [4.0, 1002.0], [16.0, 12609.0], [19.0, 15700.0], [5.0, 1501.0], [21.0, 8256.0], [22.0, 42645.0], [6.0, 1518.0], [26.0, 22696.0], [7.0, 1077.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 60024.0], [8.0, 60026.0], [9.0, 60025.0], [10.0, 60024.5], [11.0, 32662.0], [3.0, 60024.5], [12.0, 60026.0], [14.0, 60024.0], [4.0, 60025.0], [1.0, 60026.0], [16.0, 60024.0], [19.0, 17895.5], [5.0, 60024.0], [21.0, 60023.0], [22.0, 45484.0], [6.0, 60025.0], [7.0, 46396.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 26.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 43911.0, "series": [{"data": [[2.0, 2653.0], [8.0, 970.0], [9.0, 1628.0], [10.0, 1310.5], [11.0, 1351.0], [3.0, 996.0], [12.0, 2124.0], [13.0, 1739.0], [14.0, 8227.5], [15.0, 1912.0], [1.0, 4335.0], [4.0, 933.0], [16.0, 12546.0], [19.0, 15632.5], [5.0, 1436.0], [21.0, 8179.0], [22.0, 42558.5], [6.0, 1450.0], [26.0, 22580.5], [7.0, 1009.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 0.0], [8.0, 0.0], [9.0, 0.0], [10.0, 0.0], [11.0, 32662.0], [3.0, 0.0], [12.0, 0.0], [14.0, 0.0], [4.0, 0.0], [1.0, 0.0], [16.0, 0.0], [19.0, 17895.5], [5.0, 0.0], [21.0, 0.0], [22.0, 43911.0], [6.0, 0.0], [7.0, 22.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 26.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.701270925E12, "maxY": 22.0, "series": [{"data": [[1.701270953E12, 3.0], [1.701271166E12, 16.0], [1.701271125E12, 1.0], [1.701271035E12, 12.0], [1.701270994E12, 7.0], [1.701271207E12, 1.0], [1.701271076E12, 2.0], [1.701270945E12, 3.0], [1.701271158E12, 14.0], [1.701271117E12, 8.0], [1.701271027E12, 10.0], [1.701270986E12, 7.0], [1.701271199E12, 6.0], [1.701271068E12, 3.0], [1.701270937E12, 2.0], [1.701271019E12, 11.0], [1.701270978E12, 7.0], [1.701271191E12, 2.0], [1.70127106E12, 14.0], [1.701270929E12, 1.0], [1.701271142E12, 1.0], [1.701271101E12, 6.0], [1.701271011E12, 7.0], [1.70127097E12, 3.0], [1.701271052E12, 14.0], [1.701271224E12, 5.0], [1.701271134E12, 5.0], [1.701271093E12, 2.0], [1.701271003E12, 9.0], [1.701270962E12, 4.0], [1.701271044E12, 13.0], [1.701271216E12, 2.0], [1.701271126E12, 2.0], [1.701271085E12, 5.0], [1.701271124E12, 11.0], [1.701270993E12, 8.0], [1.701271206E12, 2.0], [1.701270952E12, 4.0], [1.701271165E12, 2.0], [1.701271075E12, 8.0], [1.701271034E12, 12.0], [1.701271116E12, 5.0], [1.701270985E12, 7.0], [1.701271198E12, 7.0], [1.701270944E12, 2.0], [1.701271157E12, 1.0], [1.701271067E12, 3.0], [1.701271026E12, 10.0], [1.701271108E12, 1.0], [1.701270977E12, 6.0], [1.70127119E12, 1.0], [1.701270936E12, 2.0], [1.701271149E12, 2.0], [1.701271059E12, 2.0], [1.701271018E12, 7.0], [1.7012711E12, 17.0], [1.701270969E12, 6.0], [1.701271182E12, 1.0], [1.701270928E12, 1.0], [1.701271141E12, 2.0], [1.701271051E12, 14.0], [1.70127101E12, 9.0], [1.701271223E12, 2.0], [1.701271092E12, 10.0], [1.701270961E12, 5.0], [1.701271174E12, 12.0], [1.701271133E12, 1.0], [1.701271043E12, 13.0], [1.701271002E12, 9.0], [1.701271215E12, 7.0], [1.701271084E12, 4.0], [1.701271082E12, 3.0], [1.701271164E12, 3.0], [1.701270951E12, 3.0], [1.701271033E12, 12.0], [1.701270992E12, 5.0], [1.701271205E12, 3.0], [1.701271115E12, 3.0], [1.701271074E12, 1.0], [1.701271156E12, 1.0], [1.701270943E12, 2.0], [1.701271025E12, 7.0], [1.701270984E12, 6.0], [1.701271197E12, 2.0], [1.701271107E12, 2.0], [1.701271066E12, 3.0], [1.701271148E12, 5.0], [1.701270935E12, 1.0], [1.701271017E12, 10.0], [1.701270976E12, 6.0], [1.701271189E12, 2.0], [1.701271099E12, 3.0], [1.701271058E12, 12.0], [1.70127114E12, 12.0], [1.701270927E12, 2.0], [1.701271009E12, 10.0], [1.701271222E12, 9.0], [1.701270968E12, 5.0], [1.701271181E12, 1.0], [1.701271091E12, 2.0], [1.70127105E12, 13.0], [1.701271132E12, 2.0], [1.701271001E12, 6.0], [1.701271214E12, 7.0], [1.70127096E12, 4.0], [1.701271173E12, 7.0], [1.701271083E12, 2.0], [1.701271042E12, 12.0], [1.701271081E12, 5.0], [1.70127104E12, 13.0], [1.70127095E12, 4.0], [1.701271122E12, 2.0], [1.701271204E12, 12.0], [1.701270991E12, 7.0], [1.701271073E12, 1.0], [1.701271032E12, 11.0], [1.701270942E12, 2.0], [1.701271155E12, 3.0], [1.701271114E12, 5.0], [1.701271196E12, 7.0], [1.701270983E12, 7.0], [1.701271065E12, 5.0], [1.701271024E12, 10.0], [1.701270934E12, 2.0], [1.701271147E12, 1.0], [1.701271106E12, 6.0], [1.701270975E12, 6.0], [1.701271057E12, 14.0], [1.701271016E12, 7.0], [1.701270926E12, 1.0], [1.701271139E12, 4.0], [1.70127118E12, 5.0], [1.701270967E12, 4.0], [1.701271049E12, 11.0], [1.701271008E12, 8.0], [1.701271221E12, 5.0], [1.701271131E12, 11.0], [1.70127109E12, 1.0], [1.701271172E12, 2.0], [1.701270959E12, 5.0], [1.701271041E12, 13.0], [1.701271E12, 8.0], [1.701271213E12, 19.0], [1.701271039E12, 13.0], [1.701271121E12, 2.0], [1.70127099E12, 7.0], [1.701271203E12, 5.0], [1.701270949E12, 3.0], [1.701271162E12, 6.0], [1.701271031E12, 11.0], [1.701271113E12, 4.0], [1.701271072E12, 1.0], [1.701270982E12, 7.0], [1.701271195E12, 12.0], [1.701270941E12, 2.0], [1.701271154E12, 7.0], [1.701271023E12, 11.0], [1.701271105E12, 3.0], [1.701271064E12, 3.0], [1.701270974E12, 5.0], [1.701271187E12, 1.0], [1.701270933E12, 2.0], [1.701271228E12, 1.0], [1.701271015E12, 10.0], [1.701271056E12, 14.0], [1.701270966E12, 5.0], [1.701271179E12, 4.0], [1.701270925E12, 2.0], [1.701271138E12, 1.0], [1.701271007E12, 9.0], [1.701271089E12, 13.0], [1.701271048E12, 13.0], [1.701270958E12, 4.0], [1.701271171E12, 1.0], [1.70127113E12, 1.0], [1.701271212E12, 3.0], [1.701270999E12, 9.0], [1.701271038E12, 12.0], [1.701270997E12, 9.0], [1.701270948E12, 4.0], [1.701271161E12, 8.0], [1.70127112E12, 3.0], [1.70127103E12, 12.0], [1.701270989E12, 7.0], [1.701271202E12, 4.0], [1.701271071E12, 1.0], [1.70127094E12, 2.0], [1.701271112E12, 1.0], [1.701271022E12, 11.0], [1.701270981E12, 4.0], [1.701271063E12, 1.0], [1.701270932E12, 1.0], [1.701271145E12, 4.0], [1.701271104E12, 6.0], [1.701271014E12, 8.0], [1.701270973E12, 4.0], [1.701271055E12, 13.0], [1.701271137E12, 2.0], [1.701271096E12, 1.0], [1.701271006E12, 8.0], [1.701271178E12, 21.0], [1.701271047E12, 13.0], [1.701271129E12, 2.0], [1.701271088E12, 4.0], [1.701270998E12, 6.0], [1.701271211E12, 5.0], [1.701270957E12, 4.0], [1.70127117E12, 9.0], [1.701270996E12, 6.0], [1.701271209E12, 9.0], [1.701271168E12, 4.0], [1.701271078E12, 1.0], [1.701271037E12, 12.0], [1.701270947E12, 4.0], [1.701270988E12, 7.0], [1.701271201E12, 9.0], [1.70127116E12, 10.0], [1.70127107E12, 1.0], [1.701271029E12, 11.0], [1.701270939E12, 2.0], [1.70127098E12, 6.0], [1.701271193E12, 2.0], [1.701271152E12, 1.0], [1.701271062E12, 4.0], [1.701271021E12, 10.0], [1.701270931E12, 2.0], [1.701271103E12, 2.0], [1.701270972E12, 6.0], [1.701271144E12, 8.0], [1.701271054E12, 14.0], [1.701271013E12, 10.0], [1.701271226E12, 1.0], [1.701271095E12, 2.0], [1.701270964E12, 3.0], [1.701271177E12, 14.0], [1.701271046E12, 13.0], [1.701271005E12, 9.0], [1.701271087E12, 1.0], [1.701270956E12, 2.0], [1.701271169E12, 6.0], [1.701271128E12, 10.0], [1.701270995E12, 8.0], [1.701270954E12, 2.0], [1.701271167E12, 1.0], [1.701271036E12, 9.0], [1.701271208E12, 8.0], [1.701271118E12, 7.0], [1.701270987E12, 7.0], [1.701270946E12, 4.0], [1.701271159E12, 2.0], [1.701271028E12, 10.0], [1.7012712E12, 10.0], [1.70127111E12, 3.0], [1.701271069E12, 2.0], [1.701270979E12, 7.0], [1.701270938E12, 1.0], [1.70127102E12, 11.0], [1.701271192E12, 13.0], [1.701271102E12, 9.0], [1.701271061E12, 8.0], [1.701270971E12, 5.0], [1.70127093E12, 2.0], [1.701271143E12, 9.0], [1.701271012E12, 10.0], [1.701271225E12, 5.0], [1.701271184E12, 5.0], [1.701271094E12, 3.0], [1.701271053E12, 14.0], [1.701270963E12, 4.0], [1.701271135E12, 22.0], [1.701271004E12, 9.0], [1.701271176E12, 3.0], [1.701271045E12, 10.0], [1.701270955E12, 3.0], [1.701271127E12, 1.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.701271228E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.701270925E12, "maxY": 26.0, "series": [{"data": [[1.701270953E12, 2.0], [1.701271166E12, 13.0], [1.701271125E12, 1.0], [1.701271035E12, 9.0], [1.701270994E12, 8.0], [1.701271207E12, 1.0], [1.701271076E12, 2.0], [1.701270945E12, 3.0], [1.701271158E12, 14.0], [1.701271027E12, 8.0], [1.701270986E12, 7.0], [1.701271199E12, 6.0], [1.701271068E12, 2.0], [1.701270937E12, 2.0], [1.701271019E12, 8.0], [1.701270978E12, 5.0], [1.701271191E12, 2.0], [1.70127106E12, 15.0], [1.701271232E12, 5.0], [1.701270929E12, 1.0], [1.701271142E12, 1.0], [1.701271011E12, 8.0], [1.70127097E12, 1.0], [1.701271052E12, 6.0], [1.701271224E12, 5.0], [1.701271134E12, 5.0], [1.701271093E12, 2.0], [1.701271003E12, 8.0], [1.701270962E12, 5.0], [1.701271044E12, 11.0], [1.701271126E12, 2.0], [1.701271085E12, 1.0], [1.701271124E12, 11.0], [1.701270993E12, 7.0], [1.701271206E12, 2.0], [1.701270952E12, 5.0], [1.701271165E12, 1.0], [1.701271075E12, 8.0], [1.701271034E12, 9.0], [1.701270985E12, 7.0], [1.701271198E12, 7.0], [1.701270944E12, 1.0], [1.701271157E12, 1.0], [1.701271067E12, 3.0], [1.701271026E12, 15.0], [1.701271239E12, 6.0], [1.701270977E12, 8.0], [1.70127119E12, 1.0], [1.701270936E12, 2.0], [1.701271059E12, 2.0], [1.701271018E12, 9.0], [1.701271231E12, 10.0], [1.7012711E12, 20.0], [1.701270969E12, 6.0], [1.701270928E12, 1.0], [1.701271141E12, 2.0], [1.701271051E12, 12.0], [1.70127101E12, 8.0], [1.701271223E12, 2.0], [1.701271092E12, 8.0], [1.701270961E12, 5.0], [1.701271174E12, 12.0], [1.701271133E12, 1.0], [1.701271043E12, 9.0], [1.701271002E12, 8.0], [1.701271215E12, 3.0], [1.701271084E12, 2.0], [1.701271082E12, 3.0], [1.701271164E12, 1.0], [1.701270951E12, 3.0], [1.701271033E12, 11.0], [1.701270992E12, 7.0], [1.701271205E12, 1.0], [1.701271074E12, 1.0], [1.701271156E12, 1.0], [1.701270943E12, 3.0], [1.701271025E12, 7.0], [1.701271238E12, 14.0], [1.701270984E12, 4.0], [1.701271197E12, 2.0], [1.701271107E12, 2.0], [1.701271066E12, 3.0], [1.701271148E12, 3.0], [1.701270935E12, 1.0], [1.701271017E12, 11.0], [1.70127123E12, 2.0], [1.701270976E12, 6.0], [1.701271189E12, 2.0], [1.701271099E12, 1.0], [1.701271058E12, 4.0], [1.70127114E12, 12.0], [1.701270927E12, 2.0], [1.701271009E12, 8.0], [1.701271222E12, 9.0], [1.701270968E12, 6.0], [1.701271091E12, 2.0], [1.70127105E12, 11.0], [1.701271132E12, 2.0], [1.701271001E12, 8.0], [1.701271214E12, 1.0], [1.70127096E12, 4.0], [1.701271173E12, 6.0], [1.701271083E12, 1.0], [1.701271042E12, 11.0], [1.701271081E12, 5.0], [1.70127104E12, 10.0], [1.70127095E12, 4.0], [1.701271122E12, 1.0], [1.701271204E12, 11.0], [1.701270991E12, 7.0], [1.701271073E12, 1.0], [1.701271032E12, 12.0], [1.701270942E12, 1.0], [1.701271155E12, 3.0], [1.701271114E12, 2.0], [1.701271196E12, 2.0], [1.701270983E12, 8.0], [1.701271065E12, 5.0], [1.701271024E12, 3.0], [1.701271237E12, 19.0], [1.701270934E12, 2.0], [1.701271147E12, 1.0], [1.701271106E12, 6.0], [1.701270975E12, 5.0], [1.701271057E12, 9.0], [1.701271016E12, 7.0], [1.701271229E12, 1.0], [1.701270926E12, 1.0], [1.701271139E12, 4.0], [1.70127118E12, 1.0], [1.701270967E12, 4.0], [1.701271049E12, 9.0], [1.701271008E12, 10.0], [1.701271221E12, 5.0], [1.701271131E12, 11.0], [1.70127109E12, 1.0], [1.701271172E12, 2.0], [1.701270959E12, 5.0], [1.701271041E12, 10.0], [1.701271E12, 8.0], [1.701271213E12, 5.0], [1.701271039E12, 14.0], [1.70127099E12, 10.0], [1.701271203E12, 4.0], [1.701270949E12, 4.0], [1.701271162E12, 3.0], [1.701271031E12, 7.0], [1.701271072E12, 1.0], [1.701270982E12, 8.0], [1.701270941E12, 3.0], [1.701271154E12, 6.0], [1.701271236E12, 26.0], [1.701271023E12, 7.0], [1.701271105E12, 3.0], [1.701271064E12, 3.0], [1.701270974E12, 6.0], [1.701271187E12, 1.0], [1.701270933E12, 2.0], [1.701271228E12, 2.0], [1.701271015E12, 9.0], [1.701271056E12, 5.0], [1.701270966E12, 4.0], [1.701271179E12, 3.0], [1.701270925E12, 1.0], [1.701271138E12, 1.0], [1.701271007E12, 10.0], [1.701271089E12, 13.0], [1.701271048E12, 11.0], [1.701270958E12, 2.0], [1.701271171E12, 1.0], [1.70127113E12, 1.0], [1.701271212E12, 3.0], [1.701270999E12, 9.0], [1.701271038E12, 9.0], [1.701270997E12, 7.0], [1.701270948E12, 2.0], [1.701271161E12, 3.0], [1.70127103E12, 11.0], [1.701270989E12, 5.0], [1.701271202E12, 4.0], [1.701271071E12, 1.0], [1.70127094E12, 1.0], [1.701271022E12, 7.0], [1.701271235E12, 1.0], [1.701270981E12, 3.0], [1.701271063E12, 1.0], [1.701270932E12, 1.0], [1.701271145E12, 2.0], [1.701271104E12, 5.0], [1.701271014E12, 10.0], [1.701270973E12, 3.0], [1.701271055E12, 10.0], [1.701271137E12, 2.0], [1.701271006E12, 10.0], [1.701271178E12, 9.0], [1.701271047E12, 12.0], [1.701271129E12, 2.0], [1.701271088E12, 2.0], [1.701270998E12, 5.0], [1.701271211E12, 5.0], [1.701270957E12, 4.0], [1.70127117E12, 9.0], [1.701270996E12, 5.0], [1.701271209E12, 9.0], [1.701271168E12, 4.0], [1.701271078E12, 1.0], [1.701271037E12, 12.0], [1.701270947E12, 4.0], [1.701270988E12, 7.0], [1.701271201E12, 9.0], [1.70127116E12, 4.0], [1.70127107E12, 1.0], [1.701271029E12, 9.0], [1.701270939E12, 2.0], [1.70127098E12, 5.0], [1.701271193E12, 2.0], [1.701271062E12, 4.0], [1.701271021E12, 10.0], [1.701271234E12, 8.0], [1.701270931E12, 2.0], [1.701271103E12, 1.0], [1.701270972E12, 4.0], [1.701271144E12, 8.0], [1.701271054E12, 10.0], [1.701271013E12, 7.0], [1.701271226E12, 3.0], [1.701271095E12, 1.0], [1.701270964E12, 2.0], [1.701271177E12, 6.0], [1.701271046E12, 13.0], [1.701271005E12, 6.0], [1.701270956E12, 2.0], [1.701271169E12, 6.0], [1.701271128E12, 10.0], [1.701270995E12, 7.0], [1.701270954E12, 3.0], [1.701271167E12, 1.0], [1.701271036E12, 6.0], [1.701271208E12, 8.0], [1.701271118E12, 2.0], [1.701270987E12, 8.0], [1.701270946E12, 4.0], [1.701271028E12, 10.0], [1.7012712E12, 10.0], [1.70127111E12, 1.0], [1.701271069E12, 2.0], [1.701270979E12, 7.0], [1.701270938E12, 1.0], [1.70127102E12, 8.0], [1.701271192E12, 13.0], [1.701271102E12, 8.0], [1.701271061E12, 7.0], [1.701270971E12, 7.0], [1.70127093E12, 2.0], [1.701271143E12, 9.0], [1.701271012E12, 13.0], [1.701271225E12, 6.0], [1.701271184E12, 5.0], [1.701271094E12, 2.0], [1.701271053E12, 13.0], [1.701270963E12, 5.0], [1.701271135E12, 6.0], [1.701271004E12, 8.0], [1.701271176E12, 1.0], [1.701271045E12, 9.0], [1.701270955E12, 3.0], [1.701271127E12, 1.0]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.701271166E12, 2.0], [1.701271121E12, 2.0], [1.701271164E12, 2.0], [1.701271203E12, 1.0], [1.701271205E12, 2.0], [1.701271162E12, 3.0], [1.701271115E12, 3.0], [1.701271117E12, 8.0], [1.70127116E12, 6.0], [1.701271113E12, 4.0], [1.701271195E12, 12.0], [1.701271238E12, 2.0], [1.701271154E12, 1.0], [1.701271152E12, 1.0], [1.701271148E12, 1.0], [1.701271103E12, 2.0], [1.701271099E12, 2.0], [1.701271101E12, 1.0], [1.701271181E12, 1.0], [1.701271095E12, 1.0], [1.701271177E12, 8.0], [1.701271173E12, 1.0], [1.701271083E12, 1.0], [1.701271085E12, 3.0], [1.701271165E12, 1.0], [1.701271122E12, 1.0], [1.701271161E12, 5.0], [1.701271204E12, 1.0], [1.701271118E12, 5.0], [1.70127112E12, 3.0], [1.701271116E12, 5.0], [1.701271159E12, 2.0], [1.701271114E12, 3.0], [1.701271196E12, 5.0], [1.70127111E12, 2.0], [1.701271112E12, 1.0], [1.701271108E12, 1.0], [1.701271149E12, 2.0], [1.701271145E12, 2.0], [1.701271102E12, 1.0], [1.7012711E12, 2.0], [1.70127118E12, 3.0], [1.701271094E12, 1.0], [1.701271096E12, 1.0], [1.701271092E12, 2.0], [1.701271178E12, 7.0], [1.701271176E12, 2.0], [1.701271088E12, 2.0], [1.701271084E12, 2.0]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketTimeoutException", "isController": false}, {"data": [[1.70127125E12, 2.0], [1.701271182E12, 1.0], [1.701271056E12, 2.0], [1.701271055E12, 1.0], [1.70127118E12, 1.0], [1.701271179E12, 1.0], [1.701271178E12, 5.0], [1.701271068E12, 1.0], [1.701271214E12, 4.0], [1.701271216E12, 2.0], [1.701271087E12, 1.0], [1.701271215E12, 4.0], [1.701271148E12, 1.0], [1.701271085E12, 1.0], [1.701271213E12, 14.0]], "isOverall": false, "label": "500", "isController": false}, {"data": [[1.701271166E12, 1.0], [1.701271135E12, 16.0], [1.701271214E12, 2.0]], "isOverall": false, "label": "502", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.70127125E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.701270925E12, "maxY": 26.0, "series": [{"data": [[1.701270953E12, 2.0], [1.701271166E12, 13.0], [1.701271125E12, 1.0], [1.701271035E12, 9.0], [1.701270994E12, 8.0], [1.701271207E12, 1.0], [1.701271076E12, 2.0], [1.701270945E12, 3.0], [1.701271158E12, 14.0], [1.701271027E12, 8.0], [1.701270986E12, 7.0], [1.701271199E12, 6.0], [1.701271068E12, 2.0], [1.701270937E12, 2.0], [1.701271019E12, 8.0], [1.701270978E12, 5.0], [1.701271191E12, 2.0], [1.70127106E12, 15.0], [1.701271232E12, 5.0], [1.701270929E12, 1.0], [1.701271142E12, 1.0], [1.701271011E12, 8.0], [1.70127097E12, 1.0], [1.701271052E12, 6.0], [1.701271224E12, 5.0], [1.701271134E12, 5.0], [1.701271093E12, 2.0], [1.701271003E12, 8.0], [1.701270962E12, 5.0], [1.701271044E12, 11.0], [1.701271126E12, 2.0], [1.701271085E12, 1.0], [1.701271124E12, 11.0], [1.701270993E12, 7.0], [1.701271206E12, 2.0], [1.701270952E12, 5.0], [1.701271165E12, 1.0], [1.701271075E12, 8.0], [1.701271034E12, 9.0], [1.701270985E12, 7.0], [1.701271198E12, 7.0], [1.701270944E12, 1.0], [1.701271157E12, 1.0], [1.701271067E12, 3.0], [1.701271026E12, 15.0], [1.701271239E12, 6.0], [1.701270977E12, 8.0], [1.70127119E12, 1.0], [1.701270936E12, 2.0], [1.701271059E12, 2.0], [1.701271018E12, 9.0], [1.701271231E12, 10.0], [1.7012711E12, 20.0], [1.701270969E12, 6.0], [1.701270928E12, 1.0], [1.701271141E12, 2.0], [1.701271051E12, 12.0], [1.70127101E12, 8.0], [1.701271223E12, 2.0], [1.701271092E12, 8.0], [1.701270961E12, 5.0], [1.701271174E12, 12.0], [1.701271133E12, 1.0], [1.701271043E12, 9.0], [1.701271002E12, 8.0], [1.701271215E12, 3.0], [1.701271084E12, 2.0], [1.701271082E12, 3.0], [1.701271164E12, 1.0], [1.701270951E12, 3.0], [1.701271033E12, 11.0], [1.701270992E12, 7.0], [1.701271205E12, 1.0], [1.701271074E12, 1.0], [1.701271156E12, 1.0], [1.701270943E12, 3.0], [1.701271025E12, 7.0], [1.701271238E12, 14.0], [1.701270984E12, 4.0], [1.701271197E12, 2.0], [1.701271107E12, 2.0], [1.701271066E12, 3.0], [1.701271148E12, 3.0], [1.701270935E12, 1.0], [1.701271017E12, 11.0], [1.70127123E12, 2.0], [1.701270976E12, 6.0], [1.701271189E12, 2.0], [1.701271099E12, 1.0], [1.701271058E12, 4.0], [1.70127114E12, 12.0], [1.701270927E12, 2.0], [1.701271009E12, 8.0], [1.701271222E12, 9.0], [1.701270968E12, 6.0], [1.701271091E12, 2.0], [1.70127105E12, 11.0], [1.701271132E12, 2.0], [1.701271001E12, 8.0], [1.701271214E12, 1.0], [1.70127096E12, 4.0], [1.701271173E12, 6.0], [1.701271083E12, 1.0], [1.701271042E12, 11.0], [1.701271081E12, 5.0], [1.70127104E12, 10.0], [1.70127095E12, 4.0], [1.701271122E12, 1.0], [1.701271204E12, 11.0], [1.701270991E12, 7.0], [1.701271073E12, 1.0], [1.701271032E12, 12.0], [1.701270942E12, 1.0], [1.701271155E12, 3.0], [1.701271114E12, 2.0], [1.701271196E12, 2.0], [1.701270983E12, 8.0], [1.701271065E12, 5.0], [1.701271024E12, 3.0], [1.701271237E12, 19.0], [1.701270934E12, 2.0], [1.701271147E12, 1.0], [1.701271106E12, 6.0], [1.701270975E12, 5.0], [1.701271057E12, 9.0], [1.701271016E12, 7.0], [1.701271229E12, 1.0], [1.701270926E12, 1.0], [1.701271139E12, 4.0], [1.70127118E12, 1.0], [1.701270967E12, 4.0], [1.701271049E12, 9.0], [1.701271008E12, 10.0], [1.701271221E12, 5.0], [1.701271131E12, 11.0], [1.70127109E12, 1.0], [1.701271172E12, 2.0], [1.701270959E12, 5.0], [1.701271041E12, 10.0], [1.701271E12, 8.0], [1.701271213E12, 5.0], [1.701271039E12, 14.0], [1.70127099E12, 10.0], [1.701271203E12, 4.0], [1.701270949E12, 4.0], [1.701271162E12, 3.0], [1.701271031E12, 7.0], [1.701271072E12, 1.0], [1.701270982E12, 8.0], [1.701270941E12, 3.0], [1.701271154E12, 6.0], [1.701271236E12, 26.0], [1.701271023E12, 7.0], [1.701271105E12, 3.0], [1.701271064E12, 3.0], [1.701270974E12, 6.0], [1.701271187E12, 1.0], [1.701270933E12, 2.0], [1.701271228E12, 2.0], [1.701271015E12, 9.0], [1.701271056E12, 5.0], [1.701270966E12, 4.0], [1.701271179E12, 3.0], [1.701270925E12, 1.0], [1.701271138E12, 1.0], [1.701271007E12, 10.0], [1.701271089E12, 13.0], [1.701271048E12, 11.0], [1.701270958E12, 2.0], [1.701271171E12, 1.0], [1.70127113E12, 1.0], [1.701271212E12, 3.0], [1.701270999E12, 9.0], [1.701271038E12, 9.0], [1.701270997E12, 7.0], [1.701270948E12, 2.0], [1.701271161E12, 3.0], [1.70127103E12, 11.0], [1.701270989E12, 5.0], [1.701271202E12, 4.0], [1.701271071E12, 1.0], [1.70127094E12, 1.0], [1.701271022E12, 7.0], [1.701271235E12, 1.0], [1.701270981E12, 3.0], [1.701271063E12, 1.0], [1.701270932E12, 1.0], [1.701271145E12, 2.0], [1.701271104E12, 5.0], [1.701271014E12, 10.0], [1.701270973E12, 3.0], [1.701271055E12, 10.0], [1.701271137E12, 2.0], [1.701271006E12, 10.0], [1.701271178E12, 9.0], [1.701271047E12, 12.0], [1.701271129E12, 2.0], [1.701271088E12, 2.0], [1.701270998E12, 5.0], [1.701271211E12, 5.0], [1.701270957E12, 4.0], [1.70127117E12, 9.0], [1.701270996E12, 5.0], [1.701271209E12, 9.0], [1.701271168E12, 4.0], [1.701271078E12, 1.0], [1.701271037E12, 12.0], [1.701270947E12, 4.0], [1.701270988E12, 7.0], [1.701271201E12, 9.0], [1.70127116E12, 4.0], [1.70127107E12, 1.0], [1.701271029E12, 9.0], [1.701270939E12, 2.0], [1.70127098E12, 5.0], [1.701271193E12, 2.0], [1.701271062E12, 4.0], [1.701271021E12, 10.0], [1.701271234E12, 8.0], [1.701270931E12, 2.0], [1.701271103E12, 1.0], [1.701270972E12, 4.0], [1.701271144E12, 8.0], [1.701271054E12, 10.0], [1.701271013E12, 7.0], [1.701271226E12, 3.0], [1.701271095E12, 1.0], [1.701270964E12, 2.0], [1.701271177E12, 6.0], [1.701271046E12, 13.0], [1.701271005E12, 6.0], [1.701270956E12, 2.0], [1.701271169E12, 6.0], [1.701271128E12, 10.0], [1.701270995E12, 7.0], [1.701270954E12, 3.0], [1.701271167E12, 1.0], [1.701271036E12, 6.0], [1.701271208E12, 8.0], [1.701271118E12, 2.0], [1.701270987E12, 8.0], [1.701270946E12, 4.0], [1.701271028E12, 10.0], [1.7012712E12, 10.0], [1.70127111E12, 1.0], [1.701271069E12, 2.0], [1.701270979E12, 7.0], [1.701270938E12, 1.0], [1.70127102E12, 8.0], [1.701271192E12, 13.0], [1.701271102E12, 8.0], [1.701271061E12, 7.0], [1.701270971E12, 7.0], [1.70127093E12, 2.0], [1.701271143E12, 9.0], [1.701271012E12, 13.0], [1.701271225E12, 6.0], [1.701271184E12, 5.0], [1.701271094E12, 2.0], [1.701271053E12, 13.0], [1.701270963E12, 5.0], [1.701271135E12, 6.0], [1.701271004E12, 8.0], [1.701271176E12, 1.0], [1.701271045E12, 9.0], [1.701270955E12, 3.0], [1.701271127E12, 1.0]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.701271166E12, 3.0], [1.701271121E12, 2.0], [1.701271164E12, 2.0], [1.70127125E12, 2.0], [1.701271203E12, 1.0], [1.701271205E12, 2.0], [1.701271162E12, 3.0], [1.701271115E12, 3.0], [1.701271117E12, 8.0], [1.70127116E12, 6.0], [1.701271113E12, 4.0], [1.701271068E12, 1.0], [1.701271195E12, 12.0], [1.701271238E12, 2.0], [1.701271154E12, 1.0], [1.701271152E12, 1.0], [1.701271148E12, 2.0], [1.701271103E12, 2.0], [1.701271099E12, 2.0], [1.701271101E12, 1.0], [1.701271056E12, 2.0], [1.701271179E12, 1.0], [1.701271181E12, 1.0], [1.701271095E12, 1.0], [1.701271177E12, 8.0], [1.701271214E12, 6.0], [1.701271173E12, 1.0], [1.701271216E12, 2.0], [1.701271087E12, 1.0], [1.701271083E12, 1.0], [1.701271085E12, 4.0], [1.701271165E12, 1.0], [1.701271122E12, 1.0], [1.701271161E12, 5.0], [1.701271204E12, 1.0], [1.701271118E12, 5.0], [1.70127112E12, 3.0], [1.701271116E12, 5.0], [1.701271159E12, 2.0], [1.701271114E12, 3.0], [1.701271196E12, 5.0], [1.70127111E12, 2.0], [1.701271112E12, 1.0], [1.701271108E12, 1.0], [1.701271149E12, 2.0], [1.701271145E12, 2.0], [1.701271102E12, 1.0], [1.7012711E12, 2.0], [1.701271182E12, 1.0], [1.701271055E12, 1.0], [1.70127118E12, 4.0], [1.701271094E12, 1.0], [1.701271096E12, 1.0], [1.701271092E12, 2.0], [1.701271135E12, 16.0], [1.701271178E12, 12.0], [1.701271176E12, 2.0], [1.701271088E12, 2.0], [1.701271215E12, 4.0], [1.701271084E12, 2.0], [1.701271213E12, 14.0]], "isOverall": false, "label": "HTTP Request-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.70127125E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.701270925E12, "maxY": 26.0, "series": [{"data": [[1.701270953E12, 2.0], [1.701271166E12, 13.0], [1.701271125E12, 1.0], [1.701271035E12, 9.0], [1.701270994E12, 8.0], [1.701271207E12, 1.0], [1.701271076E12, 2.0], [1.701270945E12, 3.0], [1.701271158E12, 14.0], [1.701271027E12, 8.0], [1.701270986E12, 7.0], [1.701271199E12, 6.0], [1.701271068E12, 2.0], [1.701270937E12, 2.0], [1.701271019E12, 8.0], [1.701270978E12, 5.0], [1.701271191E12, 2.0], [1.70127106E12, 15.0], [1.701271232E12, 5.0], [1.701270929E12, 1.0], [1.701271142E12, 1.0], [1.701271011E12, 8.0], [1.70127097E12, 1.0], [1.701271052E12, 6.0], [1.701271224E12, 5.0], [1.701271134E12, 5.0], [1.701271093E12, 2.0], [1.701271003E12, 8.0], [1.701270962E12, 5.0], [1.701271044E12, 11.0], [1.701271126E12, 2.0], [1.701271085E12, 1.0], [1.701271124E12, 11.0], [1.701270993E12, 7.0], [1.701271206E12, 2.0], [1.701270952E12, 5.0], [1.701271165E12, 1.0], [1.701271075E12, 8.0], [1.701271034E12, 9.0], [1.701270985E12, 7.0], [1.701271198E12, 7.0], [1.701270944E12, 1.0], [1.701271157E12, 1.0], [1.701271067E12, 3.0], [1.701271026E12, 15.0], [1.701271239E12, 6.0], [1.701270977E12, 8.0], [1.70127119E12, 1.0], [1.701270936E12, 2.0], [1.701271059E12, 2.0], [1.701271018E12, 9.0], [1.701271231E12, 10.0], [1.7012711E12, 20.0], [1.701270969E12, 6.0], [1.701270928E12, 1.0], [1.701271141E12, 2.0], [1.701271051E12, 12.0], [1.70127101E12, 8.0], [1.701271223E12, 2.0], [1.701271092E12, 8.0], [1.701270961E12, 5.0], [1.701271174E12, 12.0], [1.701271133E12, 1.0], [1.701271043E12, 9.0], [1.701271002E12, 8.0], [1.701271215E12, 3.0], [1.701271084E12, 2.0], [1.701271082E12, 3.0], [1.701271164E12, 1.0], [1.701270951E12, 3.0], [1.701271033E12, 11.0], [1.701270992E12, 7.0], [1.701271205E12, 1.0], [1.701271074E12, 1.0], [1.701271156E12, 1.0], [1.701270943E12, 3.0], [1.701271025E12, 7.0], [1.701271238E12, 14.0], [1.701270984E12, 4.0], [1.701271197E12, 2.0], [1.701271107E12, 2.0], [1.701271066E12, 3.0], [1.701271148E12, 3.0], [1.701270935E12, 1.0], [1.701271017E12, 11.0], [1.70127123E12, 2.0], [1.701270976E12, 6.0], [1.701271189E12, 2.0], [1.701271099E12, 1.0], [1.701271058E12, 4.0], [1.70127114E12, 12.0], [1.701270927E12, 2.0], [1.701271009E12, 8.0], [1.701271222E12, 9.0], [1.701270968E12, 6.0], [1.701271091E12, 2.0], [1.70127105E12, 11.0], [1.701271132E12, 2.0], [1.701271001E12, 8.0], [1.701271214E12, 1.0], [1.70127096E12, 4.0], [1.701271173E12, 6.0], [1.701271083E12, 1.0], [1.701271042E12, 11.0], [1.701271081E12, 5.0], [1.70127104E12, 10.0], [1.70127095E12, 4.0], [1.701271122E12, 1.0], [1.701271204E12, 11.0], [1.701270991E12, 7.0], [1.701271073E12, 1.0], [1.701271032E12, 12.0], [1.701270942E12, 1.0], [1.701271155E12, 3.0], [1.701271114E12, 2.0], [1.701271196E12, 2.0], [1.701270983E12, 8.0], [1.701271065E12, 5.0], [1.701271024E12, 3.0], [1.701271237E12, 19.0], [1.701270934E12, 2.0], [1.701271147E12, 1.0], [1.701271106E12, 6.0], [1.701270975E12, 5.0], [1.701271057E12, 9.0], [1.701271016E12, 7.0], [1.701271229E12, 1.0], [1.701270926E12, 1.0], [1.701271139E12, 4.0], [1.70127118E12, 1.0], [1.701270967E12, 4.0], [1.701271049E12, 9.0], [1.701271008E12, 10.0], [1.701271221E12, 5.0], [1.701271131E12, 11.0], [1.70127109E12, 1.0], [1.701271172E12, 2.0], [1.701270959E12, 5.0], [1.701271041E12, 10.0], [1.701271E12, 8.0], [1.701271213E12, 5.0], [1.701271039E12, 14.0], [1.70127099E12, 10.0], [1.701271203E12, 4.0], [1.701270949E12, 4.0], [1.701271162E12, 3.0], [1.701271031E12, 7.0], [1.701271072E12, 1.0], [1.701270982E12, 8.0], [1.701270941E12, 3.0], [1.701271154E12, 6.0], [1.701271236E12, 26.0], [1.701271023E12, 7.0], [1.701271105E12, 3.0], [1.701271064E12, 3.0], [1.701270974E12, 6.0], [1.701271187E12, 1.0], [1.701270933E12, 2.0], [1.701271228E12, 2.0], [1.701271015E12, 9.0], [1.701271056E12, 5.0], [1.701270966E12, 4.0], [1.701271179E12, 3.0], [1.701270925E12, 1.0], [1.701271138E12, 1.0], [1.701271007E12, 10.0], [1.701271089E12, 13.0], [1.701271048E12, 11.0], [1.701270958E12, 2.0], [1.701271171E12, 1.0], [1.70127113E12, 1.0], [1.701271212E12, 3.0], [1.701270999E12, 9.0], [1.701271038E12, 9.0], [1.701270997E12, 7.0], [1.701270948E12, 2.0], [1.701271161E12, 3.0], [1.70127103E12, 11.0], [1.701270989E12, 5.0], [1.701271202E12, 4.0], [1.701271071E12, 1.0], [1.70127094E12, 1.0], [1.701271022E12, 7.0], [1.701271235E12, 1.0], [1.701270981E12, 3.0], [1.701271063E12, 1.0], [1.701270932E12, 1.0], [1.701271145E12, 2.0], [1.701271104E12, 5.0], [1.701271014E12, 10.0], [1.701270973E12, 3.0], [1.701271055E12, 10.0], [1.701271137E12, 2.0], [1.701271006E12, 10.0], [1.701271178E12, 9.0], [1.701271047E12, 12.0], [1.701271129E12, 2.0], [1.701271088E12, 2.0], [1.701270998E12, 5.0], [1.701271211E12, 5.0], [1.701270957E12, 4.0], [1.70127117E12, 9.0], [1.701270996E12, 5.0], [1.701271209E12, 9.0], [1.701271168E12, 4.0], [1.701271078E12, 1.0], [1.701271037E12, 12.0], [1.701270947E12, 4.0], [1.701270988E12, 7.0], [1.701271201E12, 9.0], [1.70127116E12, 4.0], [1.70127107E12, 1.0], [1.701271029E12, 9.0], [1.701270939E12, 2.0], [1.70127098E12, 5.0], [1.701271193E12, 2.0], [1.701271062E12, 4.0], [1.701271021E12, 10.0], [1.701271234E12, 8.0], [1.701270931E12, 2.0], [1.701271103E12, 1.0], [1.701270972E12, 4.0], [1.701271144E12, 8.0], [1.701271054E12, 10.0], [1.701271013E12, 7.0], [1.701271226E12, 3.0], [1.701271095E12, 1.0], [1.701270964E12, 2.0], [1.701271177E12, 6.0], [1.701271046E12, 13.0], [1.701271005E12, 6.0], [1.701270956E12, 2.0], [1.701271169E12, 6.0], [1.701271128E12, 10.0], [1.701270995E12, 7.0], [1.701270954E12, 3.0], [1.701271167E12, 1.0], [1.701271036E12, 6.0], [1.701271208E12, 8.0], [1.701271118E12, 2.0], [1.701270987E12, 8.0], [1.701270946E12, 4.0], [1.701271028E12, 10.0], [1.7012712E12, 10.0], [1.70127111E12, 1.0], [1.701271069E12, 2.0], [1.701270979E12, 7.0], [1.701270938E12, 1.0], [1.70127102E12, 8.0], [1.701271192E12, 13.0], [1.701271102E12, 8.0], [1.701271061E12, 7.0], [1.701270971E12, 7.0], [1.70127093E12, 2.0], [1.701271143E12, 9.0], [1.701271012E12, 13.0], [1.701271225E12, 6.0], [1.701271184E12, 5.0], [1.701271094E12, 2.0], [1.701271053E12, 13.0], [1.701270963E12, 5.0], [1.701271135E12, 6.0], [1.701271004E12, 8.0], [1.701271176E12, 1.0], [1.701271045E12, 9.0], [1.701270955E12, 3.0], [1.701271127E12, 1.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.701271166E12, 3.0], [1.701271121E12, 2.0], [1.701271164E12, 2.0], [1.70127125E12, 2.0], [1.701271203E12, 1.0], [1.701271205E12, 2.0], [1.701271162E12, 3.0], [1.701271115E12, 3.0], [1.701271117E12, 8.0], [1.70127116E12, 6.0], [1.701271113E12, 4.0], [1.701271068E12, 1.0], [1.701271195E12, 12.0], [1.701271238E12, 2.0], [1.701271154E12, 1.0], [1.701271152E12, 1.0], [1.701271148E12, 2.0], [1.701271103E12, 2.0], [1.701271099E12, 2.0], [1.701271101E12, 1.0], [1.701271056E12, 2.0], [1.701271179E12, 1.0], [1.701271181E12, 1.0], [1.701271095E12, 1.0], [1.701271177E12, 8.0], [1.701271214E12, 6.0], [1.701271173E12, 1.0], [1.701271216E12, 2.0], [1.701271087E12, 1.0], [1.701271083E12, 1.0], [1.701271085E12, 4.0], [1.701271165E12, 1.0], [1.701271122E12, 1.0], [1.701271161E12, 5.0], [1.701271204E12, 1.0], [1.701271118E12, 5.0], [1.70127112E12, 3.0], [1.701271116E12, 5.0], [1.701271159E12, 2.0], [1.701271114E12, 3.0], [1.701271196E12, 5.0], [1.70127111E12, 2.0], [1.701271112E12, 1.0], [1.701271108E12, 1.0], [1.701271149E12, 2.0], [1.701271145E12, 2.0], [1.701271102E12, 1.0], [1.7012711E12, 2.0], [1.701271182E12, 1.0], [1.701271055E12, 1.0], [1.70127118E12, 4.0], [1.701271094E12, 1.0], [1.701271096E12, 1.0], [1.701271092E12, 2.0], [1.701271135E12, 16.0], [1.701271178E12, 12.0], [1.701271176E12, 2.0], [1.701271088E12, 2.0], [1.701271215E12, 4.0], [1.701271084E12, 2.0], [1.701271213E12, 14.0]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.70127125E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

